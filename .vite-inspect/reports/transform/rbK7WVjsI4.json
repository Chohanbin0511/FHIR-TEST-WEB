{"resolvedId":"C:/chohbin/Fhir-Test-Web/src/assets/js/sdk/openApi.js","transforms":[{"name":"vite:load-fallback","result":"/*eslint-disable*/\r\n// 회원 아이디 중복 확인\r\nexport function checkExistUserId(config, data) {\r\n    return openAPIXMLHttpRequest(\"GET\", `${config.baseUrl}/register/${data.userId}/exist`, null, null, config);\r\n};\r\n// 핸드폰번호 인증(SMS)\r\nexport function identifyMobilePhone(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/register/identify`, null, data, config);\r\n};\r\n// 플랫폼 약관 목록 조회\r\nexport function fetchStplat(config) {\r\n    return openAPIXMLHttpRequest(\"GET\", `${config.baseUrl}/register/stplat`, null, null, config);\r\n};\r\n// 신규 회원가입\r\nexport function register(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/register`, null, data, config);\r\n};\r\n// 기존 회원 서비스 가입\r\nexport function registerService(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/register/${data.userId}/service`, null, data, config);\r\n};\r\n// 1. 이메일/핸드폰번호로 아이디 찾기\r\n// 2. 질문/답변으로 아이디 찾기\r\nexport function searchUserId(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/register/search`, null, data, config);\r\n};\r\n// 이메일/핸드폰번호로 비밀번호 찾기\r\nexport function searchPassword(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/register/${data.userId}/lostpw`, null, data, config);\r\n};\r\n// 인증코드 확인\r\nexport function checkAuthCode(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/register/${data.userId}/checkauthcode`, null, data, config);\r\n};\r\n// 업데이트 패스워드\r\nexport function updatePassword(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/register/${data.userId}/resetpw`, null, data, config);\r\n};\r\n// 회원 정보 조회\r\nexport function fetchUserInfo(config) {\r\n    return openAPIXMLHttpRequest(\"GET\", `${config.baseUrl}/user`, config.accessToken, null, null);\r\n};\r\n// 패스워드 확인\r\nexport function checkPassword(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/checkpw`, config.accessToken, data, null);\r\n};\r\n// 회원 정보 수정\r\nexport function modifyUserInfo(config, data) {\r\n    return openAPIXMLHttpRequest(\"PUT\", `${config.baseUrl}/user`, config.accessToken, data, null);\r\n};\r\n// 회원 탈퇴\r\nexport function unregister(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/unregister`, config.accessToken, data, null);\r\n};\r\n// PHR 공유자 추가\r\nexport function addPHRSharedUser(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/sharedUser`, config.accessToken, data, null);\r\n};\r\n// PHR 공유자 조회\r\nexport function fetchPHRSharedUserList(config) {\r\n    return openAPIXMLHttpRequest(\"GET\", `${config.baseUrl}/user/sharedUserList`, config.accessToken, null, null);\r\n};\r\n// PHR 공유자 삭제\r\nexport function removePHRSharedUser(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/removeSharedUser`, config.accessToken, data, null);\r\n};\r\n// PHR 공유자 수정\r\nexport function modifyPHRSharedUsers(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/modifySharedUsers`, config.accessToken, data, null);\r\n};\r\n// 업데이트 패스워드\r\nexport function modifyPassword(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/modify/password`, config.accessToken, data, null);\r\n};\r\n// 관상동맥질환 예측\r\nexport function coronaryArtery(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/predict/10`, config.accessToken, data, null);\r\n};\r\n// 당뇨병 질환 예측\r\nexport function diabetes(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/predict/12`, config.accessToken, data, null);\r\n};\r\n// 뇌졸중 질환 예측\r\nexport function stroke(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/predict/5`, config.accessToken, data, null);\r\n};\r\n// 신체나이 예측\r\nexport function bodyAge(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/predict/7`, config.accessToken, data, null);\r\n};\r\n// 동맥경화성 심혈관질환(ASCVD) 예측\r\nexport function ASCVD(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/predict/11`, config.accessToken, data, null);\r\n};\r\n// 10년내 당뇨병 발병 예측\r\nexport function diabetesIn10Years(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/predict/13`, config.accessToken, data, null);\r\n};\r\n// 10년내 심장마비 발병 예측\r\nexport function heartAttackIn10Years(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/predict/14`, config.accessToken, data, null);\r\n};\r\n// 10년내 11종 암 발병 예측\r\nexport function cancersIn10Years(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/predict/15`, config.accessToken, data, null);\r\n};\r\n// 사용자의 예측모델별 마지막 예측결과값 조회\r\nexport function fetchLatestPredict(config, data) {\r\n    return openAPIXMLHttpRequest(\"GET\", `${config.baseUrl}/user/predict/${data.modelId}`, config.accessToken, null, null);\r\n};\r\n// 5년내 정맥 혈전 색전증(DVT) 발병 예측\r\nexport function dvtIn5Years(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/predict/16`, config.accessToken, data, null);\r\n};\r\n// 5년내 중증도의 만성 신장 질환(CKD) 발병 예측\r\nexport function ckdIn5Years(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/predict/17`, config.accessToken, data, null);\r\n};\r\n// 5년내 말기 신부전 신장 질환(ESRD) 발병 예측\r\nexport function esrdIn5Years(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/predict/18`, config.accessToken, data, null);\r\n};\r\n// 10년내 골다공증 골절 발병 예측\r\nexport function osteoporoticFractureIn10Years(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/predict/19`, config.accessToken, data, null);\r\n};\r\n// 10년내 고관절 골절 발병 예측\r\nexport function hipFractureIn10Years(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/predict/20`, config.accessToken, data, null);\r\n};\r\n// 회원 정보 Block 생성\r\nexport function createBlockchain(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/block`, config.accessToken, data, null);\r\n};\r\n// Resource 추가\r\nexport function addResource(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/user/block/resource`, config.accessToken, data, null);\r\n};\r\n// 회원 정보 Block 수정\r\nexport function updateBlockchain(config, data) {\r\n    return openAPIXMLHttpRequest(\"PUT\", `${config.baseUrl}/user/block`, config.accessToken, data, null);\r\n};\r\n// 회원 정보 Block 조회\r\nexport function fetchBlockchain(config) {\r\n    return openAPIXMLHttpRequest(\"GET\", `${config.baseUrl}/user/block`, config.accessToken, null, null);\r\n};\r\n// 회원 정보 Block 삭제\r\nexport function deleteBlockchain(config) {\r\n    return openAPIXMLHttpRequest(\"DELETE\", `${config.baseUrl}/user/block`, config.accessToken, null, null);\r\n};\r\n// 모바일 앱 최신 버전정보 조회\r\nexport function PHRApp(config, data) {\r\n    return openAPIXMLHttpRequest(\"GET\", `${config.baseUrl}/phrapp/${data.appSn}`, null, null, config);\r\n};\r\n// 문자 메시지 발송\r\nexport function sendSMSMsg(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/send/sms`, null, data, config);\r\n};\r\n// 유저 문자 메시지 발송\r\nexport function sendUserSMSMsg(config, data) {\r\n    return openAPIXMLHttpRequest(\"POST\", `${config.baseUrl}/send/user/sms`, config.accessToken, data, null);\r\n};\r\n\r\nfunction openAPIXMLHttpRequest(method, uri, accessToken, data, config) {\r\n    return new Promise(function(resolve, reject) {\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(method, uri, true);\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\r\n        if(accessToken == null) {\r\n            xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(config.client_id + \":\" + config.client_secret));\r\n        } else {\r\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + accessToken);\r\n        }\r\n\r\n        if(data == null) {\r\n            xhr.send(null);\r\n        } else {\r\n            xhr.send(JSON.stringify(data));\r\n        }\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if(xhr.readyState == xhr.DONE) {\r\n                if(xhr.status >= 200 && xhr.status < 300) {\r\n                    var response = xhr.responseText;\r\n\r\n                    if(response && response != undefined && response != null && response != \"\") {\r\n                        var openApiData = JSON.parse(response);\r\n                        resolve(openApiData);\r\n                    } else {\r\n                        resolve(response);\r\n                    }\r\n                } else {\r\n                    reject(xhr);\r\n                }\r\n            }\r\n        } \r\n    }) \r\n};","start":1667202702485,"end":1667202703183}]}
