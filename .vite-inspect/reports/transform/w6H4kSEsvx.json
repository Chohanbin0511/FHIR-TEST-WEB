{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/vuetify/lib/components/VForm/VForm.mjs","transforms":[{"name":"vite:load-fallback","result":"import { createVNode as _createVNode } from \"vue\";\n// Composables\nimport { createForm, makeFormProps } from \"../../composables/form.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\"; // Utilities\n\nimport { ref } from 'vue';\nimport { defineComponent, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const VForm = defineComponent({\n  name: 'VForm',\n  props: { ...makeFormProps()\n  },\n  emits: {\n    'update:modelValue': val => true,\n    submit: e => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots,\n      emit\n    } = _ref;\n    const form = createForm(props);\n    const formRef = ref();\n\n    function onReset(e) {\n      e.preventDefault();\n      form.reset();\n    }\n\n    function onSubmit(_e) {\n      const e = _e;\n      const ready = form.validate();\n      e.then = ready.then.bind(ready);\n      e.catch = ready.catch.bind(ready);\n      e.finally = ready.finally.bind(ready);\n      emit('submit', e);\n\n      if (!e.defaultPrevented) {\n        ready.then(_ref2 => {\n          let {\n            valid\n          } = _ref2;\n\n          if (valid) {\n            var _formRef$value;\n\n            (_formRef$value = formRef.value) == null ? void 0 : _formRef$value.submit();\n          }\n        });\n      }\n\n      e.preventDefault();\n    }\n\n    useRender(() => {\n      var _slots$default;\n\n      return _createVNode(\"form\", {\n        \"ref\": formRef,\n        \"class\": \"v-form\",\n        \"novalidate\": true,\n        \"onReset\": onReset,\n        \"onSubmit\": onSubmit\n      }, [(_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, form)]);\n    });\n    return forwardRefs(form, formRef);\n  }\n\n});\n//# sourceMappingURL=VForm.mjs.map","start":1667202980064,"end":1667202980244}]}
