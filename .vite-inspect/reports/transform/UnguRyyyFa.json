{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/vuetify/lib/components/VDivider/VDivider.mjs","transforms":[{"name":"vite:load-fallback","result":"import { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VDivider.css\"; // Composables\n\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { convertToUnit, defineComponent, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const VDivider = defineComponent({\n  name: 'VDivider',\n  props: {\n    color: String,\n    inset: Boolean,\n    length: [Number, String],\n    thickness: [Number, String],\n    vertical: Boolean,\n    ...makeThemeProps()\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const dividerStyles = computed(() => {\n      const styles = {};\n\n      if (props.length) {\n        styles[props.vertical ? 'maxHeight' : 'maxWidth'] = convertToUnit(props.length);\n      }\n\n      if (props.thickness) {\n        styles[props.vertical ? 'borderRightWidth' : 'borderTopWidth'] = convertToUnit(props.thickness);\n      }\n\n      return styles;\n    });\n    useRender(() => _createVNode(\"hr\", {\n      \"class\": [{\n        'v-divider': true,\n        'v-divider--inset': props.inset,\n        'v-divider--vertical': props.vertical\n      }, themeClasses.value, backgroundColorClasses.value],\n      \"style\": [dividerStyles.value, backgroundColorStyles.value],\n      \"aria-orientation\": !attrs.role || attrs.role === 'separator' ? props.vertical ? 'vertical' : 'horizontal' : undefined,\n      \"role\": `${attrs.role || 'separator'}`\n    }, null));\n    return {};\n  }\n\n});\n//# sourceMappingURL=VDivider.mjs.map","start":1667202982593,"end":1667202982719}]}
