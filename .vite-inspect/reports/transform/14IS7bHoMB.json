{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/request/lib/hawk.js","transforms":[{"name":"vite:load-fallback","result":"'use strict'\n\nvar crypto = require('crypto')\n\nfunction randomString (size) {\n  var bits = (size + 1) * 6\n  var buffer = crypto.randomBytes(Math.ceil(bits / 8))\n  var string = buffer.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '')\n  return string.slice(0, size)\n}\n\nfunction calculatePayloadHash (payload, algorithm, contentType) {\n  var hash = crypto.createHash(algorithm)\n  hash.update('hawk.1.payload\\n')\n  hash.update((contentType ? contentType.split(';')[0].trim().toLowerCase() : '') + '\\n')\n  hash.update(payload || '')\n  hash.update('\\n')\n  return hash.digest('base64')\n}\n\nexports.calculateMac = function (credentials, opts) {\n  var normalized = 'hawk.1.header\\n' +\n    opts.ts + '\\n' +\n    opts.nonce + '\\n' +\n    (opts.method || '').toUpperCase() + '\\n' +\n    opts.resource + '\\n' +\n    opts.host.toLowerCase() + '\\n' +\n    opts.port + '\\n' +\n    (opts.hash || '') + '\\n'\n\n  if (opts.ext) {\n    normalized = normalized + opts.ext.replace('\\\\', '\\\\\\\\').replace('\\n', '\\\\n')\n  }\n\n  normalized = normalized + '\\n'\n\n  if (opts.app) {\n    normalized = normalized + opts.app + '\\n' + (opts.dlg || '') + '\\n'\n  }\n\n  var hmac = crypto.createHmac(credentials.algorithm, credentials.key).update(normalized)\n  var digest = hmac.digest('base64')\n  return digest\n}\n\nexports.header = function (uri, method, opts) {\n  var timestamp = opts.timestamp || Math.floor((Date.now() + (opts.localtimeOffsetMsec || 0)) / 1000)\n  var credentials = opts.credentials\n  if (!credentials || !credentials.id || !credentials.key || !credentials.algorithm) {\n    return ''\n  }\n\n  if (['sha1', 'sha256'].indexOf(credentials.algorithm) === -1) {\n    return ''\n  }\n\n  var artifacts = {\n    ts: timestamp,\n    nonce: opts.nonce || randomString(6),\n    method: method,\n    resource: uri.pathname + (uri.search || ''),\n    host: uri.hostname,\n    port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\n    hash: opts.hash,\n    ext: opts.ext,\n    app: opts.app,\n    dlg: opts.dlg\n  }\n\n  if (!artifacts.hash && (opts.payload || opts.payload === '')) {\n    artifacts.hash = calculatePayloadHash(opts.payload, credentials.algorithm, opts.contentType)\n  }\n\n  var mac = exports.calculateMac(credentials, artifacts)\n\n  var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== ''\n  var header = 'Hawk id=\"' + credentials.id +\n    '\", ts=\"' + artifacts.ts +\n    '\", nonce=\"' + artifacts.nonce +\n    (artifacts.hash ? '\", hash=\"' + artifacts.hash : '') +\n    (hasExt ? '\", ext=\"' + artifacts.ext.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"') : '') +\n    '\", mac=\"' + mac + '\"'\n\n  if (artifacts.app) {\n    header = header + ', app=\"' + artifacts.app + (artifacts.dlg ? '\", dlg=\"' + artifacts.dlg : '') + '\"'\n  }\n\n  return header\n}\n","start":1667202981910,"end":1667202982147},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as hawk } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/request/lib/hawk.js?commonjs-exports\"\nimport require$$0 from \"\\u0000__vite-browser-external?commonjs-proxy\";\n\nvar hasRequiredHawk;\n\nfunction requireHawk () {\n\tif (hasRequiredHawk) return hawk;\n\thasRequiredHawk = 1;\n\t(function (exports) {\n\t\t'use strict'\n\n\t\tvar crypto = require$$0\n\n\t\tfunction randomString (size) {\n\t\t  var bits = (size + 1) * 6\n\t\t  var buffer = crypto.randomBytes(Math.ceil(bits / 8))\n\t\t  var string = buffer.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '')\n\t\t  return string.slice(0, size)\n\t\t}\n\n\t\tfunction calculatePayloadHash (payload, algorithm, contentType) {\n\t\t  var hash = crypto.createHash(algorithm)\n\t\t  hash.update('hawk.1.payload\\n')\n\t\t  hash.update((contentType ? contentType.split(';')[0].trim().toLowerCase() : '') + '\\n')\n\t\t  hash.update(payload || '')\n\t\t  hash.update('\\n')\n\t\t  return hash.digest('base64')\n\t\t}\n\n\t\texports.calculateMac = function (credentials, opts) {\n\t\t  var normalized = 'hawk.1.header\\n' +\n\t\t    opts.ts + '\\n' +\n\t\t    opts.nonce + '\\n' +\n\t\t    (opts.method || '').toUpperCase() + '\\n' +\n\t\t    opts.resource + '\\n' +\n\t\t    opts.host.toLowerCase() + '\\n' +\n\t\t    opts.port + '\\n' +\n\t\t    (opts.hash || '') + '\\n'\n\n\t\t  if (opts.ext) {\n\t\t    normalized = normalized + opts.ext.replace('\\\\', '\\\\\\\\').replace('\\n', '\\\\n')\n\t\t  }\n\n\t\t  normalized = normalized + '\\n'\n\n\t\t  if (opts.app) {\n\t\t    normalized = normalized + opts.app + '\\n' + (opts.dlg || '') + '\\n'\n\t\t  }\n\n\t\t  var hmac = crypto.createHmac(credentials.algorithm, credentials.key).update(normalized)\n\t\t  var digest = hmac.digest('base64')\n\t\t  return digest\n\t\t}\n\n\t\texports.header = function (uri, method, opts) {\n\t\t  var timestamp = opts.timestamp || Math.floor((Date.now() + (opts.localtimeOffsetMsec || 0)) / 1000)\n\t\t  var credentials = opts.credentials\n\t\t  if (!credentials || !credentials.id || !credentials.key || !credentials.algorithm) {\n\t\t    return ''\n\t\t  }\n\n\t\t  if (['sha1', 'sha256'].indexOf(credentials.algorithm) === -1) {\n\t\t    return ''\n\t\t  }\n\n\t\t  var artifacts = {\n\t\t    ts: timestamp,\n\t\t    nonce: opts.nonce || randomString(6),\n\t\t    method: method,\n\t\t    resource: uri.pathname + (uri.search || ''),\n\t\t    host: uri.hostname,\n\t\t    port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\n\t\t    hash: opts.hash,\n\t\t    ext: opts.ext,\n\t\t    app: opts.app,\n\t\t    dlg: opts.dlg\n\t\t  }\n\n\t\t  if (!artifacts.hash && (opts.payload || opts.payload === '')) {\n\t\t    artifacts.hash = calculatePayloadHash(opts.payload, credentials.algorithm, opts.contentType)\n\t\t  }\n\n\t\t  var mac = exports.calculateMac(credentials, artifacts)\n\n\t\t  var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== ''\n\t\t  var header = 'Hawk id=\"' + credentials.id +\n\t\t    '\", ts=\"' + artifacts.ts +\n\t\t    '\", nonce=\"' + artifacts.nonce +\n\t\t    (artifacts.hash ? '\", hash=\"' + artifacts.hash : '') +\n\t\t    (hasExt ? '\", ext=\"' + artifacts.ext.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"') : '') +\n\t\t    '\", mac=\"' + mac + '\"'\n\n\t\t  if (artifacts.app) {\n\t\t    header = header + ', app=\"' + artifacts.app + (artifacts.dlg ? '\", dlg=\"' + artifacts.dlg : '') + '\"'\n\t\t  }\n\n\t\t  return header\n\t\t}\n} (hawk));\n\treturn hawk;\n}\n\nexport { requireHawk as __require };","start":1667202982148,"end":1667202982151,"order":"normal"}]}
