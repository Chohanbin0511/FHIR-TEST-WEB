{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/vuetify/lib/directives/mutate/index.mjs","transforms":[{"name":"vite:load-fallback","result":"// Types\nfunction mounted(el, binding) {\n  const modifiers = binding.modifiers || {};\n  const value = binding.value;\n  const {\n    once,\n    immediate,\n    ...modifierKeys\n  } = modifiers;\n  const defaultValue = !Object.keys(modifierKeys).length;\n  const {\n    handler,\n    options\n  } = typeof value === 'object' ? value : {\n    handler: value,\n    options: {\n      attributes: (modifierKeys == null ? void 0 : modifierKeys.attr) ?? defaultValue,\n      characterData: (modifierKeys == null ? void 0 : modifierKeys.char) ?? defaultValue,\n      childList: (modifierKeys == null ? void 0 : modifierKeys.child) ?? defaultValue,\n      subtree: (modifierKeys == null ? void 0 : modifierKeys.sub) ?? defaultValue\n    }\n  };\n  const observer = new MutationObserver(function () {\n    let mutations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let observer = arguments.length > 1 ? arguments[1] : undefined;\n    handler == null ? void 0 : handler(mutations, observer);\n    if (once) unmounted(el, binding);\n  });\n  if (immediate) handler == null ? void 0 : handler([], observer);\n  el._mutate = Object(el._mutate);\n  el._mutate[binding.instance.$.uid] = {\n    observer\n  };\n  observer.observe(el, options);\n}\n\nfunction unmounted(el, binding) {\n  var _el$_mutate;\n\n  if (!((_el$_mutate = el._mutate) != null && _el$_mutate[binding.instance.$.uid])) return;\n\n  el._mutate[binding.instance.$.uid].observer.disconnect();\n\n  delete el._mutate[binding.instance.$.uid];\n}\n\nexport const Mutate = {\n  mounted,\n  unmounted\n};\nexport default Mutate;\n//# sourceMappingURL=index.mjs.map","start":1667202980913,"end":1667202981188}]}
