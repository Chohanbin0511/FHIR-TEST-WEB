{"resolvedId":"C:/chohbin/Fhir-Test-Web/src/views/sdkSample/FhirView.vue","transforms":[{"name":"vite:load-fallback","result":"<template>\r\n\t<TheViewLayout>\r\n\t\t<template #mainPanel>\r\n\t\t\t<v-container>\r\n\t\t\t\t<h1>FHIR Sample</h1>\r\n\t\t\t</v-container>\r\n\t\t\t<!----------------------   회원가입 API   ---------------------------->\r\n\t\t\t<v-container>\r\n\t\t\t\t<v-card class=\"ma-2 pa-4\">\r\n\t\t\t\t\t<h2 class=\"mb-2\" style=\"width: 250px\">Patient</h2>\r\n\t\t\t\t\t<!-- <v-dialog transition=\"dialog-bottom-transition\"> -->\r\n\t\t\t\t\t<!-- <template v-slot:activator=\"{ props }\"> -->\r\n\t\t\t\t\t<!-- <v-btn\r\n\t\t\t\t\t\tv-bind=\"props\" -->\r\n\t\t\t\t\t<v-btn\r\n\t\t\t\t\t\tclass=\"mb-2 mr-4\"\r\n\t\t\t\t\t\tv-for=\"item in patientFhirApiList\"\r\n\t\t\t\t\t\t:key=\"item\"\r\n\t\t\t\t\t\t@click=\"item.methodsNm(item.title)\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{{ item.title }}\r\n\t\t\t\t\t</v-btn>\r\n\t\t\t\t\t<!-- </template> -->\r\n\t\t\t\t\t<!-- <template v-slot:default=\"{ isActive }\">\r\n\t\t\t\t\t\t\t<v-card>\r\n\t\t\t\t\t\t\t\t<v-toolbar color=\"primary\" class=\"pl-3\">{{\r\n\t\t\t\t\t\t\t\t\tapiName\r\n\t\t\t\t\t\t\t\t}}</v-toolbar>\r\n\t\t\t\t\t\t\t\t<v-card-text>\r\n\t\t\t\t\t\t\t\t\t<div class=\"pa-2\">{{ apiResult }}</div>\r\n\t\t\t\t\t\t\t\t</v-card-text>\r\n\t\t\t\t\t\t\t\t<v-card-actions class=\"justify-end\">\r\n\t\t\t\t\t\t\t\t\t<v-btn text @click=\"isActive.value = false\">닫기</v-btn>\r\n\t\t\t\t\t\t\t\t</v-card-actions>\r\n\t\t\t\t\t\t\t</v-card>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</v-dialog> -->\r\n\t\t\t\t</v-card>\r\n\t\t\t</v-container>\r\n\t\t\t<!-- <h1>Redwood FHIR Library</h1>\r\n\t\t\t<h2>Patient</h2> -->\r\n\t\t\t<h3>Patient Result</h3>\r\n\t\t\t<textarea id=\"patient_display\" cols=\"100\" rows=\"15\"></textarea>\r\n\t\t\t<h2>Observation</h2>\r\n\t\t\t<v-btn @click=\"btnObservationCreate()\">Resource 생성</v-btn>\r\n\t\t\t<v-btn @click=\"btnObservationUpdate()\">Resource 수정</v-btn>\r\n\t\t\t<v-btn @click=\"btnObservationDelete()\">Resource 삭제</v-btn>\r\n\t\t\t<v-btn @click=\"btnObservationRead()\">Resource 조회</v-btn>\r\n\t\t\t<v-btn @click=\"btnObservationReadVersion()\">Resource 버전 조회</v-btn>\r\n\t\t\t<v-btn @click=\"btnObservationSearch()\">Resource 검색</v-btn>\r\n\t\t\t<h3>Observation Result</h3>\r\n\t\t\t<textarea id=\"observation_display\" cols=\"100\" rows=\"15\"></textarea>\r\n\t\t\t<h2>Common</h2>\r\n\t\t\t<v-btn @click=\"btnConformance()\">Conformance</v-btn>\r\n\t\t\t<v-btn @click=\"btnResourceBundle()\">Resource 일괄 처리</v-btn>\r\n\t\t\t<h3>Common Result</h3>\r\n\t\t\t<textarea id=\"common_display\" cols=\"100\" rows=\"15\"></textarea>\r\n\t\t</template>\r\n\t</TheViewLayout>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport TheViewLayout from '@/layouts/TheViewLayout.vue';\r\nimport { getPatient, createPatient, updatePatient } from '@/api/fhirApi.js';\r\n// import fhir from 'fhir.js';\r\nimport * as fhir from 'fhir.js';\r\n// import * as fhir from 'virtual:fhir-module';\r\nimport { useAuthStore } from '@/stores/auth';\r\n// fetchFhirMethods\r\nconst oauth = useAuthStore().oauth;\r\nconst userInfo = useAuthStore().userInfo;\r\n\r\n// // 인증 정보\r\n// const fhirConfig = {\r\n// \tbaseUrl: 'http://fhir.redwoodhealth.kr/fhir',\r\n// \tauth: {\r\n// \t\tbearer: oauth.accessToken,\r\n// \t},\r\n// };\r\n\r\n// const myClient = fhir(fhirConfig.value);\r\n\r\n// Patient 생성\r\nconst btnPatientCreate = async () => {\r\n\tlet resource = {\r\n\t\tresourceType: 'Patient',\r\n\t\tname: [\r\n\t\t\t{\r\n\t\t\t\ttext: userInfo.userName + '생성',\r\n\t\t\t},\r\n\t\t],\r\n\t\ttelecom: [\r\n\t\t\t{\r\n\t\t\t\tsystem: 'phone',\r\n\t\t\t\tvalue: userInfo.mobilePhone,\r\n\t\t\t\tuse: 'mobile',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tsystem: 'email',\r\n\t\t\t\temail: userInfo.email,\r\n\t\t\t},\r\n\t\t],\r\n\t\tgender: 'male',\r\n\t\tbirthDate: userInfo.birthday,\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst response = await createPatient(resource);\r\n\t\tconsole.log('response', response);\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n\t// myClient\r\n\t// \t.create({ resource: resource })\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar resultData = JSON.stringify(response.data);\r\n\t// \t\tdocument.getElementById('patient_display').value = resultData;\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\n\r\n// Patient 수정\r\nconst btnPatientUpdate = async () => {\r\n\tvar resource = {\r\n\t\tresourceType: 'Patient',\r\n\t\tid: '766371',\r\n\t\tname: [\r\n\t\t\t{\r\n\t\t\t\ttext: userInfo.userName + '수정',\r\n\t\t\t},\r\n\t\t],\r\n\t\ttelecom: [\r\n\t\t\t{\r\n\t\t\t\tsystem: 'phone',\r\n\t\t\t\tvalue: userInfo.mobilePhone,\r\n\t\t\t\tuse: 'mobile',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tsystem: 'email',\r\n\t\t\t\temail: userInfo.email,\r\n\t\t\t},\r\n\t\t],\r\n\t\tgender: 'male',\r\n\t\tbirthDate: userInfo.birthday,\r\n\t};\r\n\ttry {\r\n\t\tconst response = await updatePatient(resource, '766371');\r\n\t\tconsole.log('response', response);\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n\t// myClient\r\n\t// \t.update({ type: 'Patient', id: '89937', resource: resource })\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar resultData = JSON.stringify(response.data);\r\n\t// \t\tdocument.getElementById('patient_display').value = resultData;\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\n\r\n// Patient 삭제\r\nconst btnPatientDelete = () => {\r\n\t// myClient\r\n\t// \t.delete({ type: 'Patient', id: '89937' })\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar resultData = response.data.issue[0].diagnostics;\r\n\t// \t\tdocument.getElementById('patient_display').value = resultData;\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\n\r\n// Patient 조회\r\nconst btnPatientRead = async () => {\r\n\ttry {\r\n\t\tconst response = await getPatient('766371');\r\n\t\tconsole.log('response', response);\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n\t// 인증 정보\r\n\t// const fhirConfig = {\r\n\t// \tbaseUrl: 'http://fhir.redwoodhealth.kr/fhir',\r\n\t// \tauth: {\r\n\t// \t\tbearer: oauth.accessToken,\r\n\t// \t},\r\n\t// };\r\n\t// const myClient1 = fhir(fhirConfig);\r\n\t// myClient1\r\n\t// \t.read({ type: 'Patient', id: '766371' })\r\n\t// \t// .conformance({})\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar resultData = response.data;\r\n\t// \t\tdocument.getElementById('patient_display').value =\r\n\t// \t\t\tJSON.stringify(resultData);\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\n\r\n// myClient.conformance({})\r\n// .then(response => {\r\n//  console.log(\"response\", response);\r\n// })\r\n// .catch(error => {\r\n//  console.log(\"error\", error);\r\n// });\r\n\r\n// Patient 버전 조회\r\nconst btnPatientReadVersion = () => {\r\n\t// myClient\r\n\t// \t.vread({ type: 'Patient', id: '89937', versionId: '2' })\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar resultData = response.data;\r\n\t// \t\tdocument.getElementById('patient_display').value =\r\n\t// \t\t\tJSON.stringify(resultData);\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\n\r\n// Pateint 검색\r\nconst btnPatientSearch = () => {\r\n\t// myClient\r\n\t// \t.search({ type: 'Patient', query: { birthdate: '2020-02-20' } })\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar entry = response.data.entry;\r\n\t// \t\tvar resultData = '';\r\n\t// \t\tif (!entry) {\r\n\t// \t\t\tdocument.getElementById('patient_display').value =\r\n\t// \t\t\t\t'검색 결과 없습니다.';\r\n\t// \t\t\treturn undefined;\r\n\t// \t\t}\r\n\t// \t\tfor (var i in entry) {\r\n\t// \t\t\tvar stringEntry = JSON.stringify(entry[i]);\r\n\t// \t\t\tresultData += stringEntry;\r\n\t// \t\t}\r\n\t// \t\tdocument.getElementById('patient_display').value = resultData;\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\nconst patientFhirApiList = ref([\r\n\t{\r\n\t\ttitle: 'Patient 생성',\r\n\t\tmethodsNm: btnPatientCreate,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Patient 수정',\r\n\t\tmethodsNm: btnPatientUpdate,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Patient 삭제',\r\n\t\tmethodsNm: btnPatientDelete,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Patient 조회',\r\n\t\tmethodsNm: btnPatientRead,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Patient 버전 조회',\r\n\t\tmethodsNm: btnPatientReadVersion,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Patient 검색',\r\n\t\tmethodsNm: btnPatientSearch,\r\n\t},\r\n]);\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","start":1667202701276,"end":1667202701829},{"name":"vite:vue","result":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"FHIR Sample\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}, \"Patient\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Patient Result\", -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"textarea\", {\n  id: \"patient_display\",\n  cols: \"100\",\n  rows: \"15\"\n}, null, -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Observation\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Observation Result\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"textarea\", {\n  id: \"observation_display\",\n  cols: \"100\",\n  rows: \"15\"\n}, null, -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Common\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Common Result\", -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"textarea\", {\n  id: \"common_display\",\n  cols: \"100\",\n  rows: \"15\"\n}, null, -1)\n\nimport { ref } from 'vue';\r\nimport TheViewLayout from '@/layouts/TheViewLayout.vue';\r\nimport { getPatient, createPatient, updatePatient } from '@/api/fhirApi.js';\r\n// import fhir from 'fhir.js';\r\nimport * as fhir from 'fhir.js';\r\n// import * as fhir from 'virtual:fhir-module';\r\nimport { useAuthStore } from '@/stores/auth';\r\n// fetchFhirMethods\r\n\nconst _sfc_main = {\n  __name: 'FhirView',\n  setup(__props) {\n\r\nconst oauth = useAuthStore().oauth;\r\nconst userInfo = useAuthStore().userInfo;\r\n\r\n// // 인증 정보\r\n// const fhirConfig = {\r\n// \tbaseUrl: 'http://fhir.redwoodhealth.kr/fhir',\r\n// \tauth: {\r\n// \t\tbearer: oauth.accessToken,\r\n// \t},\r\n// };\r\n\r\n// const myClient = fhir(fhirConfig.value);\r\n\r\n// Patient 생성\r\nconst btnPatientCreate = async () => {\r\n\tlet resource = {\r\n\t\tresourceType: 'Patient',\r\n\t\tname: [\r\n\t\t\t{\r\n\t\t\t\ttext: userInfo.userName + '생성',\r\n\t\t\t},\r\n\t\t],\r\n\t\ttelecom: [\r\n\t\t\t{\r\n\t\t\t\tsystem: 'phone',\r\n\t\t\t\tvalue: userInfo.mobilePhone,\r\n\t\t\t\tuse: 'mobile',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tsystem: 'email',\r\n\t\t\t\temail: userInfo.email,\r\n\t\t\t},\r\n\t\t],\r\n\t\tgender: 'male',\r\n\t\tbirthDate: userInfo.birthday,\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst response = await createPatient(resource);\r\n\t\tconsole.log('response', response);\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n\t// myClient\r\n\t// \t.create({ resource: resource })\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar resultData = JSON.stringify(response.data);\r\n\t// \t\tdocument.getElementById('patient_display').value = resultData;\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\n\r\n// Patient 수정\r\nconst btnPatientUpdate = async () => {\r\n\tvar resource = {\r\n\t\tresourceType: 'Patient',\r\n\t\tid: '766371',\r\n\t\tname: [\r\n\t\t\t{\r\n\t\t\t\ttext: userInfo.userName + '수정',\r\n\t\t\t},\r\n\t\t],\r\n\t\ttelecom: [\r\n\t\t\t{\r\n\t\t\t\tsystem: 'phone',\r\n\t\t\t\tvalue: userInfo.mobilePhone,\r\n\t\t\t\tuse: 'mobile',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tsystem: 'email',\r\n\t\t\t\temail: userInfo.email,\r\n\t\t\t},\r\n\t\t],\r\n\t\tgender: 'male',\r\n\t\tbirthDate: userInfo.birthday,\r\n\t};\r\n\ttry {\r\n\t\tconst response = await updatePatient(resource, '766371');\r\n\t\tconsole.log('response', response);\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n\t// myClient\r\n\t// \t.update({ type: 'Patient', id: '89937', resource: resource })\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar resultData = JSON.stringify(response.data);\r\n\t// \t\tdocument.getElementById('patient_display').value = resultData;\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\n\r\n// Patient 삭제\r\nconst btnPatientDelete = () => {\r\n\t// myClient\r\n\t// \t.delete({ type: 'Patient', id: '89937' })\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar resultData = response.data.issue[0].diagnostics;\r\n\t// \t\tdocument.getElementById('patient_display').value = resultData;\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\n\r\n// Patient 조회\r\nconst btnPatientRead = async () => {\r\n\ttry {\r\n\t\tconst response = await getPatient('766371');\r\n\t\tconsole.log('response', response);\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n\t// 인증 정보\r\n\t// const fhirConfig = {\r\n\t// \tbaseUrl: 'http://fhir.redwoodhealth.kr/fhir',\r\n\t// \tauth: {\r\n\t// \t\tbearer: oauth.accessToken,\r\n\t// \t},\r\n\t// };\r\n\t// const myClient1 = fhir(fhirConfig);\r\n\t// myClient1\r\n\t// \t.read({ type: 'Patient', id: '766371' })\r\n\t// \t// .conformance({})\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar resultData = response.data;\r\n\t// \t\tdocument.getElementById('patient_display').value =\r\n\t// \t\t\tJSON.stringify(resultData);\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\n\r\n// myClient.conformance({})\r\n// .then(response => {\r\n//  console.log(\"response\", response);\r\n// })\r\n// .catch(error => {\r\n//  console.log(\"error\", error);\r\n// });\r\n\r\n// Patient 버전 조회\r\nconst btnPatientReadVersion = () => {\r\n\t// myClient\r\n\t// \t.vread({ type: 'Patient', id: '89937', versionId: '2' })\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar resultData = response.data;\r\n\t// \t\tdocument.getElementById('patient_display').value =\r\n\t// \t\t\tJSON.stringify(resultData);\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\n\r\n// Pateint 검색\r\nconst btnPatientSearch = () => {\r\n\t// myClient\r\n\t// \t.search({ type: 'Patient', query: { birthdate: '2020-02-20' } })\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar entry = response.data.entry;\r\n\t// \t\tvar resultData = '';\r\n\t// \t\tif (!entry) {\r\n\t// \t\t\tdocument.getElementById('patient_display').value =\r\n\t// \t\t\t\t'검색 결과 없습니다.';\r\n\t// \t\t\treturn undefined;\r\n\t// \t\t}\r\n\t// \t\tfor (var i in entry) {\r\n\t// \t\t\tvar stringEntry = JSON.stringify(entry[i]);\r\n\t// \t\t\tresultData += stringEntry;\r\n\t// \t\t}\r\n\t// \t\tdocument.getElementById('patient_display').value = resultData;\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\nconst patientFhirApiList = ref([\r\n\t{\r\n\t\ttitle: 'Patient 생성',\r\n\t\tmethodsNm: btnPatientCreate,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Patient 수정',\r\n\t\tmethodsNm: btnPatientUpdate,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Patient 삭제',\r\n\t\tmethodsNm: btnPatientDelete,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Patient 조회',\r\n\t\tmethodsNm: btnPatientRead,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Patient 버전 조회',\r\n\t\tmethodsNm: btnPatientReadVersion,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Patient 검색',\r\n\t\tmethodsNm: btnPatientSearch,\r\n\t},\r\n]);\r\n\nreturn (_ctx, _cache) => {\n  const _component_v_container = _resolveComponent(\"v-container\")\n  const _component_v_btn = _resolveComponent(\"v-btn\")\n  const _component_v_card = _resolveComponent(\"v-card\")\n\n  return (_openBlock(), _createBlock(TheViewLayout, null, {\n    mainPanel: _withCtx(() => [\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _hoisted_1\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _hoisted_2,\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(patientFhirApiList.value, (item) => {\n                return (_openBlock(), _createBlock(_component_v_btn, {\n                  class: \"mb-2 mr-4\",\n                  key: item,\n                  onClick: $event => (item.methodsNm(item.title))\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(item.title), 1)\n                  ]),\n                  _: 2\n                }, 1032, [\"onClick\"]))\n              }), 128))\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _hoisted_3,\n      _hoisted_4,\n      _hoisted_5,\n      _createVNode(_component_v_btn, {\n        onClick: _cache[0] || (_cache[0] = $event => (_ctx.btnObservationCreate()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Resource 생성\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_btn, {\n        onClick: _cache[1] || (_cache[1] = $event => (_ctx.btnObservationUpdate()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Resource 수정\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_btn, {\n        onClick: _cache[2] || (_cache[2] = $event => (_ctx.btnObservationDelete()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Resource 삭제\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_btn, {\n        onClick: _cache[3] || (_cache[3] = $event => (_ctx.btnObservationRead()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Resource 조회\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_btn, {\n        onClick: _cache[4] || (_cache[4] = $event => (_ctx.btnObservationReadVersion()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Resource 버전 조회\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_btn, {\n        onClick: _cache[5] || (_cache[5] = $event => (_ctx.btnObservationSearch()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Resource 검색\")\n        ]),\n        _: 1\n      }),\n      _hoisted_6,\n      _hoisted_7,\n      _hoisted_8,\n      _createVNode(_component_v_btn, {\n        onClick: _cache[6] || (_cache[6] = $event => (_ctx.btnConformance()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Conformance\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_btn, {\n        onClick: _cache[7] || (_cache[7] = $event => (_ctx.btnResourceBundle()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Resource 일괄 처리\")\n        ]),\n        _: 1\n      }),\n      _hoisted_9,\n      _hoisted_10\n    ]),\n    _: 1\n  }))\n}\n}\n\n}\n\n\n\nexport default _sfc_main","start":1667202701829,"end":1667202701840,"order":"normal"},{"name":"vuetify:import","result":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"FHIR Sample\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}, \"Patient\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Patient Result\", -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"textarea\", {\n  id: \"patient_display\",\n  cols: \"100\",\n  rows: \"15\"\n}, null, -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Observation\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Observation Result\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"textarea\", {\n  id: \"observation_display\",\n  cols: \"100\",\n  rows: \"15\"\n}, null, -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Common\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Common Result\", -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"textarea\", {\n  id: \"common_display\",\n  cols: \"100\",\n  rows: \"15\"\n}, null, -1)\n\nimport { ref } from 'vue';\r\nimport TheViewLayout from '@/layouts/TheViewLayout.vue';\r\nimport { getPatient, createPatient, updatePatient } from '@/api/fhirApi.js';\r\n// import fhir from 'fhir.js';\r\nimport * as fhir from 'fhir.js';\r\n// import * as fhir from 'virtual:fhir-module';\r\nimport { useAuthStore } from '@/stores/auth';\r\n// fetchFhirMethods\r\n\nconst _sfc_main = {\n  __name: 'FhirView',\n  setup(__props) {\n\r\nconst oauth = useAuthStore().oauth;\r\nconst userInfo = useAuthStore().userInfo;\r\n\r\n// // 인증 정보\r\n// const fhirConfig = {\r\n// \tbaseUrl: 'http://fhir.redwoodhealth.kr/fhir',\r\n// \tauth: {\r\n// \t\tbearer: oauth.accessToken,\r\n// \t},\r\n// };\r\n\r\n// const myClient = fhir(fhirConfig.value);\r\n\r\n// Patient 생성\r\nconst btnPatientCreate = async () => {\r\n\tlet resource = {\r\n\t\tresourceType: 'Patient',\r\n\t\tname: [\r\n\t\t\t{\r\n\t\t\t\ttext: userInfo.userName + '생성',\r\n\t\t\t},\r\n\t\t],\r\n\t\ttelecom: [\r\n\t\t\t{\r\n\t\t\t\tsystem: 'phone',\r\n\t\t\t\tvalue: userInfo.mobilePhone,\r\n\t\t\t\tuse: 'mobile',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tsystem: 'email',\r\n\t\t\t\temail: userInfo.email,\r\n\t\t\t},\r\n\t\t],\r\n\t\tgender: 'male',\r\n\t\tbirthDate: userInfo.birthday,\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst response = await createPatient(resource);\r\n\t\tconsole.log('response', response);\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n\t// myClient\r\n\t// \t.create({ resource: resource })\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar resultData = JSON.stringify(response.data);\r\n\t// \t\tdocument.getElementById('patient_display').value = resultData;\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\n\r\n// Patient 수정\r\nconst btnPatientUpdate = async () => {\r\n\tvar resource = {\r\n\t\tresourceType: 'Patient',\r\n\t\tid: '766371',\r\n\t\tname: [\r\n\t\t\t{\r\n\t\t\t\ttext: userInfo.userName + '수정',\r\n\t\t\t},\r\n\t\t],\r\n\t\ttelecom: [\r\n\t\t\t{\r\n\t\t\t\tsystem: 'phone',\r\n\t\t\t\tvalue: userInfo.mobilePhone,\r\n\t\t\t\tuse: 'mobile',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tsystem: 'email',\r\n\t\t\t\temail: userInfo.email,\r\n\t\t\t},\r\n\t\t],\r\n\t\tgender: 'male',\r\n\t\tbirthDate: userInfo.birthday,\r\n\t};\r\n\ttry {\r\n\t\tconst response = await updatePatient(resource, '766371');\r\n\t\tconsole.log('response', response);\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n\t// myClient\r\n\t// \t.update({ type: 'Patient', id: '89937', resource: resource })\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar resultData = JSON.stringify(response.data);\r\n\t// \t\tdocument.getElementById('patient_display').value = resultData;\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\n\r\n// Patient 삭제\r\nconst btnPatientDelete = () => {\r\n\t// myClient\r\n\t// \t.delete({ type: 'Patient', id: '89937' })\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar resultData = response.data.issue[0].diagnostics;\r\n\t// \t\tdocument.getElementById('patient_display').value = resultData;\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\n\r\n// Patient 조회\r\nconst btnPatientRead = async () => {\r\n\ttry {\r\n\t\tconst response = await getPatient('766371');\r\n\t\tconsole.log('response', response);\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t}\r\n\t// 인증 정보\r\n\t// const fhirConfig = {\r\n\t// \tbaseUrl: 'http://fhir.redwoodhealth.kr/fhir',\r\n\t// \tauth: {\r\n\t// \t\tbearer: oauth.accessToken,\r\n\t// \t},\r\n\t// };\r\n\t// const myClient1 = fhir(fhirConfig);\r\n\t// myClient1\r\n\t// \t.read({ type: 'Patient', id: '766371' })\r\n\t// \t// .conformance({})\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar resultData = response.data;\r\n\t// \t\tdocument.getElementById('patient_display').value =\r\n\t// \t\t\tJSON.stringify(resultData);\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\n\r\n// myClient.conformance({})\r\n// .then(response => {\r\n//  console.log(\"response\", response);\r\n// })\r\n// .catch(error => {\r\n//  console.log(\"error\", error);\r\n// });\r\n\r\n// Patient 버전 조회\r\nconst btnPatientReadVersion = () => {\r\n\t// myClient\r\n\t// \t.vread({ type: 'Patient', id: '89937', versionId: '2' })\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar resultData = response.data;\r\n\t// \t\tdocument.getElementById('patient_display').value =\r\n\t// \t\t\tJSON.stringify(resultData);\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\n\r\n// Pateint 검색\r\nconst btnPatientSearch = () => {\r\n\t// myClient\r\n\t// \t.search({ type: 'Patient', query: { birthdate: '2020-02-20' } })\r\n\t// \t.then(response => {\r\n\t// \t\tconsole.log('response', response);\r\n\t// \t\tvar entry = response.data.entry;\r\n\t// \t\tvar resultData = '';\r\n\t// \t\tif (!entry) {\r\n\t// \t\t\tdocument.getElementById('patient_display').value =\r\n\t// \t\t\t\t'검색 결과 없습니다.';\r\n\t// \t\t\treturn undefined;\r\n\t// \t\t}\r\n\t// \t\tfor (var i in entry) {\r\n\t// \t\t\tvar stringEntry = JSON.stringify(entry[i]);\r\n\t// \t\t\tresultData += stringEntry;\r\n\t// \t\t}\r\n\t// \t\tdocument.getElementById('patient_display').value = resultData;\r\n\t// \t})\r\n\t// \t.catch(error => {\r\n\t// \t\tconsole.log('error', error);\r\n\t// \t});\r\n};\r\nconst patientFhirApiList = ref([\r\n\t{\r\n\t\ttitle: 'Patient 생성',\r\n\t\tmethodsNm: btnPatientCreate,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Patient 수정',\r\n\t\tmethodsNm: btnPatientUpdate,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Patient 삭제',\r\n\t\tmethodsNm: btnPatientDelete,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Patient 조회',\r\n\t\tmethodsNm: btnPatientRead,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Patient 버전 조회',\r\n\t\tmethodsNm: btnPatientReadVersion,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Patient 검색',\r\n\t\tmethodsNm: btnPatientSearch,\r\n\t},\r\n]);\r\n\nreturn (_ctx, _cache) => {\n                                                                 \n                                                     \n                                                       \n\n  return (_openBlock(), _createBlock(TheViewLayout, null, {\n    mainPanel: _withCtx(() => [\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _hoisted_1\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _hoisted_2,\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(patientFhirApiList.value, (item) => {\n                return (_openBlock(), _createBlock(_component_v_btn, {\n                  class: \"mb-2 mr-4\",\n                  key: item,\n                  onClick: $event => (item.methodsNm(item.title))\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(item.title), 1)\n                  ]),\n                  _: 2\n                }, 1032, [\"onClick\"]))\n              }), 128))\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _hoisted_3,\n      _hoisted_4,\n      _hoisted_5,\n      _createVNode(_component_v_btn, {\n        onClick: _cache[0] || (_cache[0] = $event => (_ctx.btnObservationCreate()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Resource 생성\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_btn, {\n        onClick: _cache[1] || (_cache[1] = $event => (_ctx.btnObservationUpdate()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Resource 수정\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_btn, {\n        onClick: _cache[2] || (_cache[2] = $event => (_ctx.btnObservationDelete()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Resource 삭제\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_btn, {\n        onClick: _cache[3] || (_cache[3] = $event => (_ctx.btnObservationRead()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Resource 조회\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_btn, {\n        onClick: _cache[4] || (_cache[4] = $event => (_ctx.btnObservationReadVersion()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Resource 버전 조회\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_btn, {\n        onClick: _cache[5] || (_cache[5] = $event => (_ctx.btnObservationSearch()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Resource 검색\")\n        ]),\n        _: 1\n      }),\n      _hoisted_6,\n      _hoisted_7,\n      _hoisted_8,\n      _createVNode(_component_v_btn, {\n        onClick: _cache[6] || (_cache[6] = $event => (_ctx.btnConformance()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Conformance\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_btn, {\n        onClick: _cache[7] || (_cache[7] = $event => (_ctx.btnResourceBundle()))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Resource 일괄 처리\")\n        ]),\n        _: 1\n      }),\n      _hoisted_9,\n      _hoisted_10\n    ]),\n    _: 1\n  }))\n}\n}\n\n}\n\n\n\nexport default _sfc_main\n\n/* Vuetify */\nimport { VBtn as _component_v_btn } from \"vuetify/lib/components/VBtn/index.mjs\"\nimport { VCard as _component_v_card } from \"vuetify/lib/components/VCard/index.mjs\"\nimport { VContainer as _component_v_container } from \"vuetify/lib/components/VGrid/index.mjs\"\n\n","start":1667202701840,"end":1667202701840,"order":"normal"}]}
