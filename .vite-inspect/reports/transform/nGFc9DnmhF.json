{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/caseless/index.js","transforms":[{"name":"vite:load-fallback","result":"function Caseless (dict) {\n  this.dict = dict || {}\n}\nCaseless.prototype.set = function (name, value, clobber) {\n  if (typeof name === 'object') {\n    for (var i in name) {\n      this.set(i, name[i], value)\n    }\n  } else {\n    if (typeof clobber === 'undefined') clobber = true\n    var has = this.has(name)\n\n    if (!clobber && has) this.dict[has] = this.dict[has] + ',' + value\n    else this.dict[has || name] = value\n    return has\n  }\n}\nCaseless.prototype.has = function (name) {\n  var keys = Object.keys(this.dict)\n    , name = name.toLowerCase()\n    ;\n  for (var i=0;i<keys.length;i++) {\n    if (keys[i].toLowerCase() === name) return keys[i]\n  }\n  return false\n}\nCaseless.prototype.get = function (name) {\n  name = name.toLowerCase()\n  var result, _key\n  var headers = this.dict\n  Object.keys(headers).forEach(function (key) {\n    _key = key.toLowerCase()\n    if (name === _key) result = headers[key]\n  })\n  return result\n}\nCaseless.prototype.swap = function (name) {\n  var has = this.has(name)\n  if (has === name) return\n  if (!has) throw new Error('There is no header than matches \"'+name+'\"')\n  this.dict[name] = this.dict[has]\n  delete this.dict[has]\n}\nCaseless.prototype.del = function (name) {\n  var has = this.has(name)\n  return delete this.dict[has || name]\n}\n\nmodule.exports = function (dict) {return new Caseless(dict)}\nmodule.exports.httpify = function (resp, headers) {\n  var c = new Caseless(headers)\n  resp.setHeader = function (key, value, clobber) {\n    if (typeof value === 'undefined') return\n    return c.set(key, value, clobber)\n  }\n  resp.hasHeader = function (key) {\n    return c.has(key)\n  }\n  resp.getHeader = function (key) {\n    return c.get(key)\n  }\n  resp.removeHeader = function (key) {\n    return c.del(key)\n  }\n  resp.headers = c.dict\n  return c\n}\n","start":1667202704634,"end":1667202704880},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __module as caselessModule, exports as caseless } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/caseless/index.js?commonjs-module\"\n\nvar hasRequiredCaseless;\n\nfunction requireCaseless () {\n\tif (hasRequiredCaseless) return caseless;\n\thasRequiredCaseless = 1;\n\tfunction Caseless (dict) {\n\t  this.dict = dict || {}\n\t}\n\tCaseless.prototype.set = function (name, value, clobber) {\n\t  if (typeof name === 'object') {\n\t    for (var i in name) {\n\t      this.set(i, name[i], value)\n\t    }\n\t  } else {\n\t    if (typeof clobber === 'undefined') clobber = true\n\t    var has = this.has(name)\n\n\t    if (!clobber && has) this.dict[has] = this.dict[has] + ',' + value\n\t    else this.dict[has || name] = value\n\t    return has\n\t  }\n\t}\n\tCaseless.prototype.has = function (name) {\n\t  var keys = Object.keys(this.dict)\n\t    , name = name.toLowerCase()\n\t    ;\n\t  for (var i=0;i<keys.length;i++) {\n\t    if (keys[i].toLowerCase() === name) return keys[i]\n\t  }\n\t  return false\n\t}\n\tCaseless.prototype.get = function (name) {\n\t  name = name.toLowerCase()\n\t  var result, _key\n\t  var headers = this.dict\n\t  Object.keys(headers).forEach(function (key) {\n\t    _key = key.toLowerCase()\n\t    if (name === _key) result = headers[key]\n\t  })\n\t  return result\n\t}\n\tCaseless.prototype.swap = function (name) {\n\t  var has = this.has(name)\n\t  if (has === name) return\n\t  if (!has) throw new Error('There is no header than matches \"'+name+'\"')\n\t  this.dict[name] = this.dict[has]\n\t  delete this.dict[has]\n\t}\n\tCaseless.prototype.del = function (name) {\n\t  var has = this.has(name)\n\t  return delete this.dict[has || name]\n\t}\n\n\tcaselessModule.exports = function (dict) {return new Caseless(dict)}\n\tcaseless.httpify = function (resp, headers) {\n\t  var c = new Caseless(headers)\n\t  resp.setHeader = function (key, value, clobber) {\n\t    if (typeof value === 'undefined') return\n\t    return c.set(key, value, clobber)\n\t  }\n\t  resp.hasHeader = function (key) {\n\t    return c.has(key)\n\t  }\n\t  resp.getHeader = function (key) {\n\t    return c.get(key)\n\t  }\n\t  resp.removeHeader = function (key) {\n\t    return c.del(key)\n\t  }\n\t  resp.headers = c.dict\n\t  return c\n\t}\n\treturn caseless;\n}\n\nexport { requireCaseless as __require };","start":1667202704881,"end":1667202704882,"order":"normal"}]}
