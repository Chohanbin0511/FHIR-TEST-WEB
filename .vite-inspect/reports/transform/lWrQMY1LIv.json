{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/for-each/index.js","transforms":[{"name":"vite:load-fallback","result":"'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","start":1667202983360,"end":1667202983504},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __require as require$$0 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/is-callable/index.js?commonjs-wrapped\";\n\nvar forEach_1;\nvar hasRequiredForEach;\n\nfunction requireForEach () {\n\tif (hasRequiredForEach) return forEach_1;\n\thasRequiredForEach = 1;\n\t'use strict';\n\n\tvar isCallable = require$$0();\n\n\tvar toStr = Object.prototype.toString;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\tvar forEachArray = function forEachArray(array, iterator, receiver) {\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t        if (hasOwnProperty.call(array, i)) {\n\t            if (receiver == null) {\n\t                iterator(array[i], i, array);\n\t            } else {\n\t                iterator.call(receiver, array[i], i, array);\n\t            }\n\t        }\n\t    }\n\t};\n\n\tvar forEachString = function forEachString(string, iterator, receiver) {\n\t    for (var i = 0, len = string.length; i < len; i++) {\n\t        // no such thing as a sparse string.\n\t        if (receiver == null) {\n\t            iterator(string.charAt(i), i, string);\n\t        } else {\n\t            iterator.call(receiver, string.charAt(i), i, string);\n\t        }\n\t    }\n\t};\n\n\tvar forEachObject = function forEachObject(object, iterator, receiver) {\n\t    for (var k in object) {\n\t        if (hasOwnProperty.call(object, k)) {\n\t            if (receiver == null) {\n\t                iterator(object[k], k, object);\n\t            } else {\n\t                iterator.call(receiver, object[k], k, object);\n\t            }\n\t        }\n\t    }\n\t};\n\n\tvar forEach = function forEach(list, iterator, thisArg) {\n\t    if (!isCallable(iterator)) {\n\t        throw new TypeError('iterator must be a function');\n\t    }\n\n\t    var receiver;\n\t    if (arguments.length >= 3) {\n\t        receiver = thisArg;\n\t    }\n\n\t    if (toStr.call(list) === '[object Array]') {\n\t        forEachArray(list, iterator, receiver);\n\t    } else if (typeof list === 'string') {\n\t        forEachString(list, iterator, receiver);\n\t    } else {\n\t        forEachObject(list, iterator, receiver);\n\t    }\n\t};\n\n\tforEach_1 = forEach;\n\treturn forEach_1;\n}\n\nexport { requireForEach as __require };","start":1667202983504,"end":1667202983876,"order":"normal"}]}
