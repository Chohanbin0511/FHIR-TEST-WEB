{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/identity.js","transforms":[{"name":"vite:load-fallback","result":"// Copyright 2017 Joyent, Inc.\n\nmodule.exports = Identity;\n\nvar assert = require('assert-plus');\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar Fingerprint = require('./fingerprint');\nvar Signature = require('./signature');\nvar errs = require('./errors');\nvar util = require('util');\nvar utils = require('./utils');\nvar asn1 = require('asn1');\nvar Buffer = require('safer-buffer').Buffer;\n\n/*JSSTYLED*/\nvar DNS_NAME_RE = /^([*]|[a-z0-9][a-z0-9\\-]{0,62})(?:\\.([*]|[a-z0-9][a-z0-9\\-]{0,62}))*$/i;\n\nvar oids = {};\noids.cn = '2.5.4.3';\noids.o = '2.5.4.10';\noids.ou = '2.5.4.11';\noids.l = '2.5.4.7';\noids.s = '2.5.4.8';\noids.c = '2.5.4.6';\noids.sn = '2.5.4.4';\noids.postalCode = '2.5.4.17';\noids.serialNumber = '2.5.4.5';\noids.street = '2.5.4.9';\noids.x500UniqueIdentifier = '2.5.4.45';\noids.role = '2.5.4.72';\noids.telephoneNumber = '2.5.4.20';\noids.description = '2.5.4.13';\noids.dc = '0.9.2342.19200300.100.1.25';\noids.uid = '0.9.2342.19200300.100.1.1';\noids.mail = '0.9.2342.19200300.100.1.3';\noids.title = '2.5.4.12';\noids.gn = '2.5.4.42';\noids.initials = '2.5.4.43';\noids.pseudonym = '2.5.4.65';\noids.emailAddress = '1.2.840.113549.1.9.1';\n\nvar unoids = {};\nObject.keys(oids).forEach(function (k) {\n\tunoids[oids[k]] = k;\n});\n\nfunction Identity(opts) {\n\tvar self = this;\n\tassert.object(opts, 'options');\n\tassert.arrayOfObject(opts.components, 'options.components');\n\tthis.components = opts.components;\n\tthis.componentLookup = {};\n\tthis.components.forEach(function (c) {\n\t\tif (c.name && !c.oid)\n\t\t\tc.oid = oids[c.name];\n\t\tif (c.oid && !c.name)\n\t\t\tc.name = unoids[c.oid];\n\t\tif (self.componentLookup[c.name] === undefined)\n\t\t\tself.componentLookup[c.name] = [];\n\t\tself.componentLookup[c.name].push(c);\n\t});\n\tif (this.componentLookup.cn && this.componentLookup.cn.length > 0) {\n\t\tthis.cn = this.componentLookup.cn[0].value;\n\t}\n\tassert.optionalString(opts.type, 'options.type');\n\tif (opts.type === undefined) {\n\t\tif (this.components.length === 1 &&\n\t\t    this.componentLookup.cn &&\n\t\t    this.componentLookup.cn.length === 1 &&\n\t\t    this.componentLookup.cn[0].value.match(DNS_NAME_RE)) {\n\t\t\tthis.type = 'host';\n\t\t\tthis.hostname = this.componentLookup.cn[0].value;\n\n\t\t} else if (this.componentLookup.dc &&\n\t\t    this.components.length === this.componentLookup.dc.length) {\n\t\t\tthis.type = 'host';\n\t\t\tthis.hostname = this.componentLookup.dc.map(\n\t\t\t    function (c) {\n\t\t\t\treturn (c.value);\n\t\t\t}).join('.');\n\n\t\t} else if (this.componentLookup.uid &&\n\t\t    this.components.length ===\n\t\t    this.componentLookup.uid.length) {\n\t\t\tthis.type = 'user';\n\t\t\tthis.uid = this.componentLookup.uid[0].value;\n\n\t\t} else if (this.componentLookup.cn &&\n\t\t    this.componentLookup.cn.length === 1 &&\n\t\t    this.componentLookup.cn[0].value.match(DNS_NAME_RE)) {\n\t\t\tthis.type = 'host';\n\t\t\tthis.hostname = this.componentLookup.cn[0].value;\n\n\t\t} else if (this.componentLookup.uid &&\n\t\t    this.componentLookup.uid.length === 1) {\n\t\t\tthis.type = 'user';\n\t\t\tthis.uid = this.componentLookup.uid[0].value;\n\n\t\t} else if (this.componentLookup.mail &&\n\t\t    this.componentLookup.mail.length === 1) {\n\t\t\tthis.type = 'email';\n\t\t\tthis.email = this.componentLookup.mail[0].value;\n\n\t\t} else if (this.componentLookup.cn &&\n\t\t    this.componentLookup.cn.length === 1) {\n\t\t\tthis.type = 'user';\n\t\t\tthis.uid = this.componentLookup.cn[0].value;\n\n\t\t} else {\n\t\t\tthis.type = 'unknown';\n\t\t}\n\t} else {\n\t\tthis.type = opts.type;\n\t\tif (this.type === 'host')\n\t\t\tthis.hostname = opts.hostname;\n\t\telse if (this.type === 'user')\n\t\t\tthis.uid = opts.uid;\n\t\telse if (this.type === 'email')\n\t\t\tthis.email = opts.email;\n\t\telse\n\t\t\tthrow (new Error('Unknown type ' + this.type));\n\t}\n}\n\nIdentity.prototype.toString = function () {\n\treturn (this.components.map(function (c) {\n\t\tvar n = c.name.toUpperCase();\n\t\t/*JSSTYLED*/\n\t\tn = n.replace(/=/g, '\\\\=');\n\t\tvar v = c.value;\n\t\t/*JSSTYLED*/\n\t\tv = v.replace(/,/g, '\\\\,');\n\t\treturn (n + '=' + v);\n\t}).join(', '));\n};\n\nIdentity.prototype.get = function (name, asArray) {\n\tassert.string(name, 'name');\n\tvar arr = this.componentLookup[name];\n\tif (arr === undefined || arr.length === 0)\n\t\treturn (undefined);\n\tif (!asArray && arr.length > 1)\n\t\tthrow (new Error('Multiple values for attribute ' + name));\n\tif (!asArray)\n\t\treturn (arr[0].value);\n\treturn (arr.map(function (c) {\n\t\treturn (c.value);\n\t}));\n};\n\nIdentity.prototype.toArray = function (idx) {\n\treturn (this.components.map(function (c) {\n\t\treturn ({\n\t\t\tname: c.name,\n\t\t\tvalue: c.value\n\t\t});\n\t}));\n};\n\n/*\n * These are from X.680 -- PrintableString allowed chars are in section 37.4\n * table 8. Spec for IA5Strings is \"1,6 + SPACE + DEL\" where 1 refers to\n * ISO IR #001 (standard ASCII control characters) and 6 refers to ISO IR #006\n * (the basic ASCII character set).\n */\n/* JSSTYLED */\nvar NOT_PRINTABLE = /[^a-zA-Z0-9 '(),+.\\/:=?-]/;\n/* JSSTYLED */\nvar NOT_IA5 = /[^\\x00-\\x7f]/;\n\nIdentity.prototype.toAsn1 = function (der, tag) {\n\tder.startSequence(tag);\n\tthis.components.forEach(function (c) {\n\t\tder.startSequence(asn1.Ber.Constructor | asn1.Ber.Set);\n\t\tder.startSequence();\n\t\tder.writeOID(c.oid);\n\t\t/*\n\t\t * If we fit in a PrintableString, use that. Otherwise use an\n\t\t * IA5String or UTF8String.\n\t\t *\n\t\t * If this identity was parsed from a DN, use the ASN.1 types\n\t\t * from the original representation (otherwise this might not\n\t\t * be a full match for the original in some validators).\n\t\t */\n\t\tif (c.asn1type === asn1.Ber.Utf8String ||\n\t\t    c.value.match(NOT_IA5)) {\n\t\t\tvar v = Buffer.from(c.value, 'utf8');\n\t\t\tder.writeBuffer(v, asn1.Ber.Utf8String);\n\n\t\t} else if (c.asn1type === asn1.Ber.IA5String ||\n\t\t    c.value.match(NOT_PRINTABLE)) {\n\t\t\tder.writeString(c.value, asn1.Ber.IA5String);\n\n\t\t} else {\n\t\t\tvar type = asn1.Ber.PrintableString;\n\t\t\tif (c.asn1type !== undefined)\n\t\t\t\ttype = c.asn1type;\n\t\t\tder.writeString(c.value, type);\n\t\t}\n\t\tder.endSequence();\n\t\tder.endSequence();\n\t});\n\tder.endSequence();\n};\n\nfunction globMatch(a, b) {\n\tif (a === '**' || b === '**')\n\t\treturn (true);\n\tvar aParts = a.split('.');\n\tvar bParts = b.split('.');\n\tif (aParts.length !== bParts.length)\n\t\treturn (false);\n\tfor (var i = 0; i < aParts.length; ++i) {\n\t\tif (aParts[i] === '*' || bParts[i] === '*')\n\t\t\tcontinue;\n\t\tif (aParts[i] !== bParts[i])\n\t\t\treturn (false);\n\t}\n\treturn (true);\n}\n\nIdentity.prototype.equals = function (other) {\n\tif (!Identity.isIdentity(other, [1, 0]))\n\t\treturn (false);\n\tif (other.components.length !== this.components.length)\n\t\treturn (false);\n\tfor (var i = 0; i < this.components.length; ++i) {\n\t\tif (this.components[i].oid !== other.components[i].oid)\n\t\t\treturn (false);\n\t\tif (!globMatch(this.components[i].value,\n\t\t    other.components[i].value)) {\n\t\t\treturn (false);\n\t\t}\n\t}\n\treturn (true);\n};\n\nIdentity.forHost = function (hostname) {\n\tassert.string(hostname, 'hostname');\n\treturn (new Identity({\n\t\ttype: 'host',\n\t\thostname: hostname,\n\t\tcomponents: [ { name: 'cn', value: hostname } ]\n\t}));\n};\n\nIdentity.forUser = function (uid) {\n\tassert.string(uid, 'uid');\n\treturn (new Identity({\n\t\ttype: 'user',\n\t\tuid: uid,\n\t\tcomponents: [ { name: 'uid', value: uid } ]\n\t}));\n};\n\nIdentity.forEmail = function (email) {\n\tassert.string(email, 'email');\n\treturn (new Identity({\n\t\ttype: 'email',\n\t\temail: email,\n\t\tcomponents: [ { name: 'mail', value: email } ]\n\t}));\n};\n\nIdentity.parseDN = function (dn) {\n\tassert.string(dn, 'dn');\n\tvar parts = [''];\n\tvar idx = 0;\n\tvar rem = dn;\n\twhile (rem.length > 0) {\n\t\tvar m;\n\t\t/*JSSTYLED*/\n\t\tif ((m = /^,/.exec(rem)) !== null) {\n\t\t\tparts[++idx] = '';\n\t\t\trem = rem.slice(m[0].length);\n\t\t/*JSSTYLED*/\n\t\t} else if ((m = /^\\\\,/.exec(rem)) !== null) {\n\t\t\tparts[idx] += ',';\n\t\t\trem = rem.slice(m[0].length);\n\t\t/*JSSTYLED*/\n\t\t} else if ((m = /^\\\\./.exec(rem)) !== null) {\n\t\t\tparts[idx] += m[0];\n\t\t\trem = rem.slice(m[0].length);\n\t\t/*JSSTYLED*/\n\t\t} else if ((m = /^[^\\\\,]+/.exec(rem)) !== null) {\n\t\t\tparts[idx] += m[0];\n\t\t\trem = rem.slice(m[0].length);\n\t\t} else {\n\t\t\tthrow (new Error('Failed to parse DN'));\n\t\t}\n\t}\n\tvar cmps = parts.map(function (c) {\n\t\tc = c.trim();\n\t\tvar eqPos = c.indexOf('=');\n\t\twhile (eqPos > 0 && c.charAt(eqPos - 1) === '\\\\')\n\t\t\teqPos = c.indexOf('=', eqPos + 1);\n\t\tif (eqPos === -1) {\n\t\t\tthrow (new Error('Failed to parse DN'));\n\t\t}\n\t\t/*JSSTYLED*/\n\t\tvar name = c.slice(0, eqPos).toLowerCase().replace(/\\\\=/g, '=');\n\t\tvar value = c.slice(eqPos + 1);\n\t\treturn ({ name: name, value: value });\n\t});\n\treturn (new Identity({ components: cmps }));\n};\n\nIdentity.fromArray = function (components) {\n\tassert.arrayOfObject(components, 'components');\n\tcomponents.forEach(function (cmp) {\n\t\tassert.object(cmp, 'component');\n\t\tassert.string(cmp.name, 'component.name');\n\t\tif (!Buffer.isBuffer(cmp.value) &&\n\t\t    !(typeof (cmp.value) === 'string')) {\n\t\t\tthrow (new Error('Invalid component value'));\n\t\t}\n\t});\n\treturn (new Identity({ components: components }));\n};\n\nIdentity.parseAsn1 = function (der, top) {\n\tvar components = [];\n\tder.readSequence(top);\n\tvar end = der.offset + der.length;\n\twhile (der.offset < end) {\n\t\tder.readSequence(asn1.Ber.Constructor | asn1.Ber.Set);\n\t\tvar after = der.offset + der.length;\n\t\tder.readSequence();\n\t\tvar oid = der.readOID();\n\t\tvar type = der.peek();\n\t\tvar value;\n\t\tswitch (type) {\n\t\tcase asn1.Ber.PrintableString:\n\t\tcase asn1.Ber.IA5String:\n\t\tcase asn1.Ber.OctetString:\n\t\tcase asn1.Ber.T61String:\n\t\t\tvalue = der.readString(type);\n\t\t\tbreak;\n\t\tcase asn1.Ber.Utf8String:\n\t\t\tvalue = der.readString(type, true);\n\t\t\tvalue = value.toString('utf8');\n\t\t\tbreak;\n\t\tcase asn1.Ber.CharacterString:\n\t\tcase asn1.Ber.BMPString:\n\t\t\tvalue = der.readString(type, true);\n\t\t\tvalue = value.toString('utf16le');\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow (new Error('Unknown asn1 type ' + type));\n\t\t}\n\t\tcomponents.push({ oid: oid, asn1type: type, value: value });\n\t\tder._offset = after;\n\t}\n\tder._offset = end;\n\treturn (new Identity({\n\t\tcomponents: components\n\t}));\n};\n\nIdentity.isIdentity = function (obj, ver) {\n\treturn (utils.isCompatible(obj, Identity, ver));\n};\n\n/*\n * API versions for Identity:\n * [1,0] -- initial ver\n */\nIdentity.prototype._sshpkApiVersion = [1, 0];\n\nIdentity._oldVersionDetect = function (obj) {\n\treturn ([1, 0]);\n};\n","start":1667202983419,"end":1667202983611},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __require as require$$0 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/assert-plus/assert.js?commonjs-wrapped\";\nimport { __require as require$$1 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/algs.js?commonjs-wrapped\";\nimport require$$2 from \"\\u0000__vite-browser-external?commonjs-proxy\";\nimport { __require as require$$3 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/fingerprint.js?commonjs-wrapped\";\nimport { __require as require$$4 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/signature.js?commonjs-wrapped\";\nimport { __require as require$$5 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/errors.js?commonjs-wrapped\";\nimport { __require as require$$6 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/util/util.js?commonjs-wrapped\";\nimport { __require as require$$7 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/utils.js?commonjs-wrapped\";\nimport { __require as require$$8 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/asn1/lib/index.js?commonjs-wrapped\";\nimport { __require as require$$9 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/safer-buffer/safer.js?commonjs-wrapped\";\n\nvar identity;\nvar hasRequiredIdentity;\n\nfunction requireIdentity () {\n\tif (hasRequiredIdentity) return identity;\n\thasRequiredIdentity = 1;\n\t// Copyright 2017 Joyent, Inc.\n\n\tidentity = Identity;\n\n\tvar assert = require$$0();\n\tvar algs = require$$1();\n\tvar crypto = require$$2;\n\tvar Fingerprint = require$$3();\n\tvar Signature = require$$4();\n\tvar errs = require$$5();\n\tvar util = require$$6();\n\tvar utils = require$$7();\n\tvar asn1 = require$$8();\n\tvar Buffer = require$$9().Buffer;\n\n\t/*JSSTYLED*/\n\tvar DNS_NAME_RE = /^([*]|[a-z0-9][a-z0-9\\-]{0,62})(?:\\.([*]|[a-z0-9][a-z0-9\\-]{0,62}))*$/i;\n\n\tvar oids = {};\n\toids.cn = '2.5.4.3';\n\toids.o = '2.5.4.10';\n\toids.ou = '2.5.4.11';\n\toids.l = '2.5.4.7';\n\toids.s = '2.5.4.8';\n\toids.c = '2.5.4.6';\n\toids.sn = '2.5.4.4';\n\toids.postalCode = '2.5.4.17';\n\toids.serialNumber = '2.5.4.5';\n\toids.street = '2.5.4.9';\n\toids.x500UniqueIdentifier = '2.5.4.45';\n\toids.role = '2.5.4.72';\n\toids.telephoneNumber = '2.5.4.20';\n\toids.description = '2.5.4.13';\n\toids.dc = '0.9.2342.19200300.100.1.25';\n\toids.uid = '0.9.2342.19200300.100.1.1';\n\toids.mail = '0.9.2342.19200300.100.1.3';\n\toids.title = '2.5.4.12';\n\toids.gn = '2.5.4.42';\n\toids.initials = '2.5.4.43';\n\toids.pseudonym = '2.5.4.65';\n\toids.emailAddress = '1.2.840.113549.1.9.1';\n\n\tvar unoids = {};\n\tObject.keys(oids).forEach(function (k) {\n\t\tunoids[oids[k]] = k;\n\t});\n\n\tfunction Identity(opts) {\n\t\tvar self = this;\n\t\tassert.object(opts, 'options');\n\t\tassert.arrayOfObject(opts.components, 'options.components');\n\t\tthis.components = opts.components;\n\t\tthis.componentLookup = {};\n\t\tthis.components.forEach(function (c) {\n\t\t\tif (c.name && !c.oid)\n\t\t\t\tc.oid = oids[c.name];\n\t\t\tif (c.oid && !c.name)\n\t\t\t\tc.name = unoids[c.oid];\n\t\t\tif (self.componentLookup[c.name] === undefined)\n\t\t\t\tself.componentLookup[c.name] = [];\n\t\t\tself.componentLookup[c.name].push(c);\n\t\t});\n\t\tif (this.componentLookup.cn && this.componentLookup.cn.length > 0) {\n\t\t\tthis.cn = this.componentLookup.cn[0].value;\n\t\t}\n\t\tassert.optionalString(opts.type, 'options.type');\n\t\tif (opts.type === undefined) {\n\t\t\tif (this.components.length === 1 &&\n\t\t\t    this.componentLookup.cn &&\n\t\t\t    this.componentLookup.cn.length === 1 &&\n\t\t\t    this.componentLookup.cn[0].value.match(DNS_NAME_RE)) {\n\t\t\t\tthis.type = 'host';\n\t\t\t\tthis.hostname = this.componentLookup.cn[0].value;\n\n\t\t\t} else if (this.componentLookup.dc &&\n\t\t\t    this.components.length === this.componentLookup.dc.length) {\n\t\t\t\tthis.type = 'host';\n\t\t\t\tthis.hostname = this.componentLookup.dc.map(\n\t\t\t\t    function (c) {\n\t\t\t\t\treturn (c.value);\n\t\t\t\t}).join('.');\n\n\t\t\t} else if (this.componentLookup.uid &&\n\t\t\t    this.components.length ===\n\t\t\t    this.componentLookup.uid.length) {\n\t\t\t\tthis.type = 'user';\n\t\t\t\tthis.uid = this.componentLookup.uid[0].value;\n\n\t\t\t} else if (this.componentLookup.cn &&\n\t\t\t    this.componentLookup.cn.length === 1 &&\n\t\t\t    this.componentLookup.cn[0].value.match(DNS_NAME_RE)) {\n\t\t\t\tthis.type = 'host';\n\t\t\t\tthis.hostname = this.componentLookup.cn[0].value;\n\n\t\t\t} else if (this.componentLookup.uid &&\n\t\t\t    this.componentLookup.uid.length === 1) {\n\t\t\t\tthis.type = 'user';\n\t\t\t\tthis.uid = this.componentLookup.uid[0].value;\n\n\t\t\t} else if (this.componentLookup.mail &&\n\t\t\t    this.componentLookup.mail.length === 1) {\n\t\t\t\tthis.type = 'email';\n\t\t\t\tthis.email = this.componentLookup.mail[0].value;\n\n\t\t\t} else if (this.componentLookup.cn &&\n\t\t\t    this.componentLookup.cn.length === 1) {\n\t\t\t\tthis.type = 'user';\n\t\t\t\tthis.uid = this.componentLookup.cn[0].value;\n\n\t\t\t} else {\n\t\t\t\tthis.type = 'unknown';\n\t\t\t}\n\t\t} else {\n\t\t\tthis.type = opts.type;\n\t\t\tif (this.type === 'host')\n\t\t\t\tthis.hostname = opts.hostname;\n\t\t\telse if (this.type === 'user')\n\t\t\t\tthis.uid = opts.uid;\n\t\t\telse if (this.type === 'email')\n\t\t\t\tthis.email = opts.email;\n\t\t\telse\n\t\t\t\tthrow (new Error('Unknown type ' + this.type));\n\t\t}\n\t}\n\n\tIdentity.prototype.toString = function () {\n\t\treturn (this.components.map(function (c) {\n\t\t\tvar n = c.name.toUpperCase();\n\t\t\t/*JSSTYLED*/\n\t\t\tn = n.replace(/=/g, '\\\\=');\n\t\t\tvar v = c.value;\n\t\t\t/*JSSTYLED*/\n\t\t\tv = v.replace(/,/g, '\\\\,');\n\t\t\treturn (n + '=' + v);\n\t\t}).join(', '));\n\t};\n\n\tIdentity.prototype.get = function (name, asArray) {\n\t\tassert.string(name, 'name');\n\t\tvar arr = this.componentLookup[name];\n\t\tif (arr === undefined || arr.length === 0)\n\t\t\treturn (undefined);\n\t\tif (!asArray && arr.length > 1)\n\t\t\tthrow (new Error('Multiple values for attribute ' + name));\n\t\tif (!asArray)\n\t\t\treturn (arr[0].value);\n\t\treturn (arr.map(function (c) {\n\t\t\treturn (c.value);\n\t\t}));\n\t};\n\n\tIdentity.prototype.toArray = function (idx) {\n\t\treturn (this.components.map(function (c) {\n\t\t\treturn ({\n\t\t\t\tname: c.name,\n\t\t\t\tvalue: c.value\n\t\t\t});\n\t\t}));\n\t};\n\n\t/*\n\t * These are from X.680 -- PrintableString allowed chars are in section 37.4\n\t * table 8. Spec for IA5Strings is \"1,6 + SPACE + DEL\" where 1 refers to\n\t * ISO IR #001 (standard ASCII control characters) and 6 refers to ISO IR #006\n\t * (the basic ASCII character set).\n\t */\n\t/* JSSTYLED */\n\tvar NOT_PRINTABLE = /[^a-zA-Z0-9 '(),+.\\/:=?-]/;\n\t/* JSSTYLED */\n\tvar NOT_IA5 = /[^\\x00-\\x7f]/;\n\n\tIdentity.prototype.toAsn1 = function (der, tag) {\n\t\tder.startSequence(tag);\n\t\tthis.components.forEach(function (c) {\n\t\t\tder.startSequence(asn1.Ber.Constructor | asn1.Ber.Set);\n\t\t\tder.startSequence();\n\t\t\tder.writeOID(c.oid);\n\t\t\t/*\n\t\t\t * If we fit in a PrintableString, use that. Otherwise use an\n\t\t\t * IA5String or UTF8String.\n\t\t\t *\n\t\t\t * If this identity was parsed from a DN, use the ASN.1 types\n\t\t\t * from the original representation (otherwise this might not\n\t\t\t * be a full match for the original in some validators).\n\t\t\t */\n\t\t\tif (c.asn1type === asn1.Ber.Utf8String ||\n\t\t\t    c.value.match(NOT_IA5)) {\n\t\t\t\tvar v = Buffer.from(c.value, 'utf8');\n\t\t\t\tder.writeBuffer(v, asn1.Ber.Utf8String);\n\n\t\t\t} else if (c.asn1type === asn1.Ber.IA5String ||\n\t\t\t    c.value.match(NOT_PRINTABLE)) {\n\t\t\t\tder.writeString(c.value, asn1.Ber.IA5String);\n\n\t\t\t} else {\n\t\t\t\tvar type = asn1.Ber.PrintableString;\n\t\t\t\tif (c.asn1type !== undefined)\n\t\t\t\t\ttype = c.asn1type;\n\t\t\t\tder.writeString(c.value, type);\n\t\t\t}\n\t\t\tder.endSequence();\n\t\t\tder.endSequence();\n\t\t});\n\t\tder.endSequence();\n\t};\n\n\tfunction globMatch(a, b) {\n\t\tif (a === '**' || b === '**')\n\t\t\treturn (true);\n\t\tvar aParts = a.split('.');\n\t\tvar bParts = b.split('.');\n\t\tif (aParts.length !== bParts.length)\n\t\t\treturn (false);\n\t\tfor (var i = 0; i < aParts.length; ++i) {\n\t\t\tif (aParts[i] === '*' || bParts[i] === '*')\n\t\t\t\tcontinue;\n\t\t\tif (aParts[i] !== bParts[i])\n\t\t\t\treturn (false);\n\t\t}\n\t\treturn (true);\n\t}\n\n\tIdentity.prototype.equals = function (other) {\n\t\tif (!Identity.isIdentity(other, [1, 0]))\n\t\t\treturn (false);\n\t\tif (other.components.length !== this.components.length)\n\t\t\treturn (false);\n\t\tfor (var i = 0; i < this.components.length; ++i) {\n\t\t\tif (this.components[i].oid !== other.components[i].oid)\n\t\t\t\treturn (false);\n\t\t\tif (!globMatch(this.components[i].value,\n\t\t\t    other.components[i].value)) {\n\t\t\t\treturn (false);\n\t\t\t}\n\t\t}\n\t\treturn (true);\n\t};\n\n\tIdentity.forHost = function (hostname) {\n\t\tassert.string(hostname, 'hostname');\n\t\treturn (new Identity({\n\t\t\ttype: 'host',\n\t\t\thostname: hostname,\n\t\t\tcomponents: [ { name: 'cn', value: hostname } ]\n\t\t}));\n\t};\n\n\tIdentity.forUser = function (uid) {\n\t\tassert.string(uid, 'uid');\n\t\treturn (new Identity({\n\t\t\ttype: 'user',\n\t\t\tuid: uid,\n\t\t\tcomponents: [ { name: 'uid', value: uid } ]\n\t\t}));\n\t};\n\n\tIdentity.forEmail = function (email) {\n\t\tassert.string(email, 'email');\n\t\treturn (new Identity({\n\t\t\ttype: 'email',\n\t\t\temail: email,\n\t\t\tcomponents: [ { name: 'mail', value: email } ]\n\t\t}));\n\t};\n\n\tIdentity.parseDN = function (dn) {\n\t\tassert.string(dn, 'dn');\n\t\tvar parts = [''];\n\t\tvar idx = 0;\n\t\tvar rem = dn;\n\t\twhile (rem.length > 0) {\n\t\t\tvar m;\n\t\t\t/*JSSTYLED*/\n\t\t\tif ((m = /^,/.exec(rem)) !== null) {\n\t\t\t\tparts[++idx] = '';\n\t\t\t\trem = rem.slice(m[0].length);\n\t\t\t/*JSSTYLED*/\n\t\t\t} else if ((m = /^\\\\,/.exec(rem)) !== null) {\n\t\t\t\tparts[idx] += ',';\n\t\t\t\trem = rem.slice(m[0].length);\n\t\t\t/*JSSTYLED*/\n\t\t\t} else if ((m = /^\\\\./.exec(rem)) !== null) {\n\t\t\t\tparts[idx] += m[0];\n\t\t\t\trem = rem.slice(m[0].length);\n\t\t\t/*JSSTYLED*/\n\t\t\t} else if ((m = /^[^\\\\,]+/.exec(rem)) !== null) {\n\t\t\t\tparts[idx] += m[0];\n\t\t\t\trem = rem.slice(m[0].length);\n\t\t\t} else {\n\t\t\t\tthrow (new Error('Failed to parse DN'));\n\t\t\t}\n\t\t}\n\t\tvar cmps = parts.map(function (c) {\n\t\t\tc = c.trim();\n\t\t\tvar eqPos = c.indexOf('=');\n\t\t\twhile (eqPos > 0 && c.charAt(eqPos - 1) === '\\\\')\n\t\t\t\teqPos = c.indexOf('=', eqPos + 1);\n\t\t\tif (eqPos === -1) {\n\t\t\t\tthrow (new Error('Failed to parse DN'));\n\t\t\t}\n\t\t\t/*JSSTYLED*/\n\t\t\tvar name = c.slice(0, eqPos).toLowerCase().replace(/\\\\=/g, '=');\n\t\t\tvar value = c.slice(eqPos + 1);\n\t\t\treturn ({ name: name, value: value });\n\t\t});\n\t\treturn (new Identity({ components: cmps }));\n\t};\n\n\tIdentity.fromArray = function (components) {\n\t\tassert.arrayOfObject(components, 'components');\n\t\tcomponents.forEach(function (cmp) {\n\t\t\tassert.object(cmp, 'component');\n\t\t\tassert.string(cmp.name, 'component.name');\n\t\t\tif (!Buffer.isBuffer(cmp.value) &&\n\t\t\t    !(typeof (cmp.value) === 'string')) {\n\t\t\t\tthrow (new Error('Invalid component value'));\n\t\t\t}\n\t\t});\n\t\treturn (new Identity({ components: components }));\n\t};\n\n\tIdentity.parseAsn1 = function (der, top) {\n\t\tvar components = [];\n\t\tder.readSequence(top);\n\t\tvar end = der.offset + der.length;\n\t\twhile (der.offset < end) {\n\t\t\tder.readSequence(asn1.Ber.Constructor | asn1.Ber.Set);\n\t\t\tvar after = der.offset + der.length;\n\t\t\tder.readSequence();\n\t\t\tvar oid = der.readOID();\n\t\t\tvar type = der.peek();\n\t\t\tvar value;\n\t\t\tswitch (type) {\n\t\t\tcase asn1.Ber.PrintableString:\n\t\t\tcase asn1.Ber.IA5String:\n\t\t\tcase asn1.Ber.OctetString:\n\t\t\tcase asn1.Ber.T61String:\n\t\t\t\tvalue = der.readString(type);\n\t\t\t\tbreak;\n\t\t\tcase asn1.Ber.Utf8String:\n\t\t\t\tvalue = der.readString(type, true);\n\t\t\t\tvalue = value.toString('utf8');\n\t\t\t\tbreak;\n\t\t\tcase asn1.Ber.CharacterString:\n\t\t\tcase asn1.Ber.BMPString:\n\t\t\t\tvalue = der.readString(type, true);\n\t\t\t\tvalue = value.toString('utf16le');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow (new Error('Unknown asn1 type ' + type));\n\t\t\t}\n\t\t\tcomponents.push({ oid: oid, asn1type: type, value: value });\n\t\t\tder._offset = after;\n\t\t}\n\t\tder._offset = end;\n\t\treturn (new Identity({\n\t\t\tcomponents: components\n\t\t}));\n\t};\n\n\tIdentity.isIdentity = function (obj, ver) {\n\t\treturn (utils.isCompatible(obj, Identity, ver));\n\t};\n\n\t/*\n\t * API versions for Identity:\n\t * [1,0] -- initial ver\n\t */\n\tIdentity.prototype._sshpkApiVersion = [1, 0];\n\n\tIdentity._oldVersionDetect = function (obj) {\n\t\treturn ([1, 0]);\n\t};\n\treturn identity;\n}\n\nexport { requireIdentity as __require };","start":1667202983611,"end":1667202985074,"order":"normal"}]}
