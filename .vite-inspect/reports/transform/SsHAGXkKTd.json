{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/ajv/lib/dotjs/allOf.js","transforms":[{"name":"vite:load-fallback","result":"'use strict';\nmodule.exports = function generate_allOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $allSchemasEmpty = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n        $allSchemasEmpty = false;\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    if ($allSchemasEmpty) {\n      out += ' if (true) { ';\n    } else {\n      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';\n    }\n  }\n  return out;\n}\n","start":1667202984415,"end":1667202984604},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar allOf;\nvar hasRequiredAllOf;\n\nfunction requireAllOf () {\n\tif (hasRequiredAllOf) return allOf;\n\thasRequiredAllOf = 1;\n\t'use strict';\n\tallOf = function generate_allOf(it, $keyword, $ruleType) {\n\t  var out = ' ';\n\t  var $schema = it.schema[$keyword];\n\t  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n\t  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n\t  var $breakOnError = !it.opts.allErrors;\n\t  var $it = it.util.copy(it);\n\t  var $closingBraces = '';\n\t  $it.level++;\n\t  var $nextValid = 'valid' + $it.level;\n\t  var $currentBaseId = $it.baseId,\n\t    $allSchemasEmpty = true;\n\t  var arr1 = $schema;\n\t  if (arr1) {\n\t    var $sch, $i = -1,\n\t      l1 = arr1.length - 1;\n\t    while ($i < l1) {\n\t      $sch = arr1[$i += 1];\n\t      if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n\t        $allSchemasEmpty = false;\n\t        $it.schema = $sch;\n\t        $it.schemaPath = $schemaPath + '[' + $i + ']';\n\t        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n\t        out += '  ' + (it.validate($it)) + ' ';\n\t        $it.baseId = $currentBaseId;\n\t        if ($breakOnError) {\n\t          out += ' if (' + ($nextValid) + ') { ';\n\t          $closingBraces += '}';\n\t        }\n\t      }\n\t    }\n\t  }\n\t  if ($breakOnError) {\n\t    if ($allSchemasEmpty) {\n\t      out += ' if (true) { ';\n\t    } else {\n\t      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';\n\t    }\n\t  }\n\t  return out;\n\t}\n\treturn allOf;\n}\n\nexport { requireAllOf as __require };","start":1667202984605,"end":1667202984606,"order":"normal"}]}
