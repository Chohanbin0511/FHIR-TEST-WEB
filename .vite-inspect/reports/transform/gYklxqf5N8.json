{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/is-callable/index.js","transforms":[{"name":"vite:load-fallback","result":"'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n","start":1667202706828,"end":1667202707193},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar isCallable;\nvar hasRequiredIsCallable;\n\nfunction requireIsCallable () {\n\tif (hasRequiredIsCallable) return isCallable;\n\thasRequiredIsCallable = 1;\n\t'use strict';\n\n\tvar fnToStr = Function.prototype.toString;\n\tvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\n\tvar badArrayLike;\n\tvar isCallableMarker;\n\tif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\t\ttry {\n\t\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\t\tget: function () {\n\t\t\t\t\tthrow isCallableMarker;\n\t\t\t\t}\n\t\t\t});\n\t\t\tisCallableMarker = {};\n\t\t\t// eslint-disable-next-line no-throw-literal\n\t\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t\t} catch (_) {\n\t\t\tif (_ !== isCallableMarker) {\n\t\t\t\treflectApply = null;\n\t\t\t}\n\t\t}\n\t} else {\n\t\treflectApply = null;\n\t}\n\n\tvar constructorRegex = /^\\s*class\\b/;\n\tvar isES6ClassFn = function isES6ClassFunction(value) {\n\t\ttry {\n\t\t\tvar fnStr = fnToStr.call(value);\n\t\t\treturn constructorRegex.test(fnStr);\n\t\t} catch (e) {\n\t\t\treturn false; // not a function\n\t\t}\n\t};\n\n\tvar tryFunctionObject = function tryFunctionToStr(value) {\n\t\ttry {\n\t\t\tif (isES6ClassFn(value)) { return false; }\n\t\t\tfnToStr.call(value);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\tvar toStr = Object.prototype.toString;\n\tvar objectClass = '[object Object]';\n\tvar fnClass = '[object Function]';\n\tvar genClass = '[object GeneratorFunction]';\n\tvar ddaClass = '[object HTMLAllCollection]'; // IE 11\n\tvar ddaClass2 = '[object HTML document.all class]';\n\tvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\n\tvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\n\tvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\n\tvar isDDA = function isDocumentDotAll() { return false; };\n\tif (typeof document === 'object') {\n\t\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\t\tvar all = document.all;\n\t\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t\t/* globals document: false */\n\t\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t\t} catch (e) { /**/ }\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}\n\t}\n\n\tisCallable = reflectApply\n\t\t? function isCallable(value) {\n\t\t\tif (isDDA(value)) { return true; }\n\t\t\tif (!value) { return false; }\n\t\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\t\ttry {\n\t\t\t\treflectApply(value, null, badArrayLike);\n\t\t\t} catch (e) {\n\t\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t\t}\n\t\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t\t}\n\t\t: function isCallable(value) {\n\t\t\tif (isDDA(value)) { return true; }\n\t\t\tif (!value) { return false; }\n\t\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\t\tif (isES6ClassFn(value)) { return false; }\n\t\t\tvar strClass = toStr.call(value);\n\t\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\t\treturn tryFunctionObject(value);\n\t\t};\n\treturn isCallable;\n}\n\nexport { requireIsCallable as __require };","start":1667202707193,"end":1667202707195,"order":"normal"},{"name":"node-polyfills","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar isCallable;\nvar hasRequiredIsCallable;\n\nfunction requireIsCallable () {\n\tif (hasRequiredIsCallable) return isCallable;\n\thasRequiredIsCallable = 1;\n\t'use strict';\n\n\tvar fnToStr = Function.prototype.toString;\n\tvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\n\tvar badArrayLike;\n\tvar isCallableMarker;\n\tif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\t\ttry {\n\t\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\t\tget: function () {\n\t\t\t\t\tthrow isCallableMarker;\n\t\t\t\t}\n\t\t\t});\n\t\t\tisCallableMarker = {};\n\t\t\t// eslint-disable-next-line no-throw-literal\n\t\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t\t} catch (_) {\n\t\t\tif (_ !== isCallableMarker) {\n\t\t\t\treflectApply = null;\n\t\t\t}\n\t\t}\n\t} else {\n\t\treflectApply = null;\n\t}\n\n\tvar constructorRegex = /^\\s*class\\b/;\n\tvar isES6ClassFn = function isES6ClassFunction(value) {\n\t\ttry {\n\t\t\tvar fnStr = fnToStr.call(value);\n\t\t\treturn constructorRegex.test(fnStr);\n\t\t} catch (e) {\n\t\t\treturn false; // not a function\n\t\t}\n\t};\n\n\tvar tryFunctionObject = function tryFunctionToStr(value) {\n\t\ttry {\n\t\t\tif (isES6ClassFn(value)) { return false; }\n\t\t\tfnToStr.call(value);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\tvar toStr = Object.prototype.toString;\n\tvar objectClass = '[object Object]';\n\tvar fnClass = '[object Function]';\n\tvar genClass = '[object GeneratorFunction]';\n\tvar ddaClass = '[object HTMLAllCollection]'; // IE 11\n\tvar ddaClass2 = '[object HTML document.all class]';\n\tvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\n\tvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\n\tvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\n\tvar isDDA = function isDocumentDotAll() { return false; };\n\tif (typeof document === 'object') {\n\t\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\t\tvar all = document.all;\n\t\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t\t/* globals document: false */\n\t\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t\t} catch (e) { /**/ }\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}\n\t}\n\n\tisCallable = reflectApply\n\t\t? function isCallable(value) {\n\t\t\tif (isDDA(value)) { return true; }\n\t\t\tif (!value) { return false; }\n\t\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\t\ttry {\n\t\t\t\treflectApply(value, null, badArrayLike);\n\t\t\t} catch (e) {\n\t\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t\t}\n\t\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t\t}\n\t\t: function isCallable(value) {\n\t\t\tif (isDDA(value)) { return true; }\n\t\t\tif (!value) { return false; }\n\t\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\t\tif (isES6ClassFn(value)) { return false; }\n\t\t\tvar strClass = toStr.call(value);\n\t\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\t\treturn tryFunctionObject(value);\n\t\t};\n\treturn isCallable;\n}\n\nexport { requireIsCallable as __require };","start":1667202707195,"end":1667202707196,"order":"normal"}]}
