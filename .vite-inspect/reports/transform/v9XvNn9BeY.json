{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/util/support/types.js","transforms":[{"name":"vite:load-fallback","result":"// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","start":1667202982372,"end":1667202982463},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as types } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/util/support/types.js?commonjs-exports\"\nimport { __require as require$$0 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/is-arguments/index.js?commonjs-wrapped\";\nimport { __require as require$$1 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/is-generator-function/index.js?commonjs-wrapped\";\nimport { __require as require$$2 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/which-typed-array/index.js?commonjs-wrapped\";\nimport { __require as require$$3 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/is-typed-array/index.js?commonjs-wrapped\";\n\nvar hasRequiredTypes;\n\nfunction requireTypes () {\n\tif (hasRequiredTypes) return types;\n\thasRequiredTypes = 1;\n\t(function (exports) {\n\t\t// Currently in sync with Node.js lib/internal/util/types.js\n\t\t// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n\t\t'use strict';\n\n\t\tvar isArgumentsObject = require$$0();\n\t\tvar isGeneratorFunction = require$$1();\n\t\tvar whichTypedArray = require$$2();\n\t\tvar isTypedArray = require$$3();\n\n\t\tfunction uncurryThis(f) {\n\t\t  return f.call.bind(f);\n\t\t}\n\n\t\tvar BigIntSupported = typeof BigInt !== 'undefined';\n\t\tvar SymbolSupported = typeof Symbol !== 'undefined';\n\n\t\tvar ObjectToString = uncurryThis(Object.prototype.toString);\n\n\t\tvar numberValue = uncurryThis(Number.prototype.valueOf);\n\t\tvar stringValue = uncurryThis(String.prototype.valueOf);\n\t\tvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\n\t\tif (BigIntSupported) {\n\t\t  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n\t\t}\n\n\t\tif (SymbolSupported) {\n\t\t  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n\t\t}\n\n\t\tfunction checkBoxedPrimitive(value, prototypeValueOf) {\n\t\t  if (typeof value !== 'object') {\n\t\t    return false;\n\t\t  }\n\t\t  try {\n\t\t    prototypeValueOf(value);\n\t\t    return true;\n\t\t  } catch(e) {\n\t\t    return false;\n\t\t  }\n\t\t}\n\n\t\texports.isArgumentsObject = isArgumentsObject;\n\t\texports.isGeneratorFunction = isGeneratorFunction;\n\t\texports.isTypedArray = isTypedArray;\n\n\t\t// Taken from here and modified for better browser support\n\t\t// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\n\t\tfunction isPromise(input) {\n\t\t\treturn (\n\t\t\t\t(\n\t\t\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\t\t\tinput instanceof Promise\n\t\t\t\t) ||\n\t\t\t\t(\n\t\t\t\t\tinput !== null &&\n\t\t\t\t\ttypeof input === 'object' &&\n\t\t\t\t\ttypeof input.then === 'function' &&\n\t\t\t\t\ttypeof input.catch === 'function'\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\texports.isPromise = isPromise;\n\n\t\tfunction isArrayBufferView(value) {\n\t\t  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n\t\t    return ArrayBuffer.isView(value);\n\t\t  }\n\n\t\t  return (\n\t\t    isTypedArray(value) ||\n\t\t    isDataView(value)\n\t\t  );\n\t\t}\n\t\texports.isArrayBufferView = isArrayBufferView;\n\n\n\t\tfunction isUint8Array(value) {\n\t\t  return whichTypedArray(value) === 'Uint8Array';\n\t\t}\n\t\texports.isUint8Array = isUint8Array;\n\n\t\tfunction isUint8ClampedArray(value) {\n\t\t  return whichTypedArray(value) === 'Uint8ClampedArray';\n\t\t}\n\t\texports.isUint8ClampedArray = isUint8ClampedArray;\n\n\t\tfunction isUint16Array(value) {\n\t\t  return whichTypedArray(value) === 'Uint16Array';\n\t\t}\n\t\texports.isUint16Array = isUint16Array;\n\n\t\tfunction isUint32Array(value) {\n\t\t  return whichTypedArray(value) === 'Uint32Array';\n\t\t}\n\t\texports.isUint32Array = isUint32Array;\n\n\t\tfunction isInt8Array(value) {\n\t\t  return whichTypedArray(value) === 'Int8Array';\n\t\t}\n\t\texports.isInt8Array = isInt8Array;\n\n\t\tfunction isInt16Array(value) {\n\t\t  return whichTypedArray(value) === 'Int16Array';\n\t\t}\n\t\texports.isInt16Array = isInt16Array;\n\n\t\tfunction isInt32Array(value) {\n\t\t  return whichTypedArray(value) === 'Int32Array';\n\t\t}\n\t\texports.isInt32Array = isInt32Array;\n\n\t\tfunction isFloat32Array(value) {\n\t\t  return whichTypedArray(value) === 'Float32Array';\n\t\t}\n\t\texports.isFloat32Array = isFloat32Array;\n\n\t\tfunction isFloat64Array(value) {\n\t\t  return whichTypedArray(value) === 'Float64Array';\n\t\t}\n\t\texports.isFloat64Array = isFloat64Array;\n\n\t\tfunction isBigInt64Array(value) {\n\t\t  return whichTypedArray(value) === 'BigInt64Array';\n\t\t}\n\t\texports.isBigInt64Array = isBigInt64Array;\n\n\t\tfunction isBigUint64Array(value) {\n\t\t  return whichTypedArray(value) === 'BigUint64Array';\n\t\t}\n\t\texports.isBigUint64Array = isBigUint64Array;\n\n\t\tfunction isMapToString(value) {\n\t\t  return ObjectToString(value) === '[object Map]';\n\t\t}\n\t\tisMapToString.working = (\n\t\t  typeof Map !== 'undefined' &&\n\t\t  isMapToString(new Map())\n\t\t);\n\n\t\tfunction isMap(value) {\n\t\t  if (typeof Map === 'undefined') {\n\t\t    return false;\n\t\t  }\n\n\t\t  return isMapToString.working\n\t\t    ? isMapToString(value)\n\t\t    : value instanceof Map;\n\t\t}\n\t\texports.isMap = isMap;\n\n\t\tfunction isSetToString(value) {\n\t\t  return ObjectToString(value) === '[object Set]';\n\t\t}\n\t\tisSetToString.working = (\n\t\t  typeof Set !== 'undefined' &&\n\t\t  isSetToString(new Set())\n\t\t);\n\t\tfunction isSet(value) {\n\t\t  if (typeof Set === 'undefined') {\n\t\t    return false;\n\t\t  }\n\n\t\t  return isSetToString.working\n\t\t    ? isSetToString(value)\n\t\t    : value instanceof Set;\n\t\t}\n\t\texports.isSet = isSet;\n\n\t\tfunction isWeakMapToString(value) {\n\t\t  return ObjectToString(value) === '[object WeakMap]';\n\t\t}\n\t\tisWeakMapToString.working = (\n\t\t  typeof WeakMap !== 'undefined' &&\n\t\t  isWeakMapToString(new WeakMap())\n\t\t);\n\t\tfunction isWeakMap(value) {\n\t\t  if (typeof WeakMap === 'undefined') {\n\t\t    return false;\n\t\t  }\n\n\t\t  return isWeakMapToString.working\n\t\t    ? isWeakMapToString(value)\n\t\t    : value instanceof WeakMap;\n\t\t}\n\t\texports.isWeakMap = isWeakMap;\n\n\t\tfunction isWeakSetToString(value) {\n\t\t  return ObjectToString(value) === '[object WeakSet]';\n\t\t}\n\t\tisWeakSetToString.working = (\n\t\t  typeof WeakSet !== 'undefined' &&\n\t\t  isWeakSetToString(new WeakSet())\n\t\t);\n\t\tfunction isWeakSet(value) {\n\t\t  return isWeakSetToString(value);\n\t\t}\n\t\texports.isWeakSet = isWeakSet;\n\n\t\tfunction isArrayBufferToString(value) {\n\t\t  return ObjectToString(value) === '[object ArrayBuffer]';\n\t\t}\n\t\tisArrayBufferToString.working = (\n\t\t  typeof ArrayBuffer !== 'undefined' &&\n\t\t  isArrayBufferToString(new ArrayBuffer())\n\t\t);\n\t\tfunction isArrayBuffer(value) {\n\t\t  if (typeof ArrayBuffer === 'undefined') {\n\t\t    return false;\n\t\t  }\n\n\t\t  return isArrayBufferToString.working\n\t\t    ? isArrayBufferToString(value)\n\t\t    : value instanceof ArrayBuffer;\n\t\t}\n\t\texports.isArrayBuffer = isArrayBuffer;\n\n\t\tfunction isDataViewToString(value) {\n\t\t  return ObjectToString(value) === '[object DataView]';\n\t\t}\n\t\tisDataViewToString.working = (\n\t\t  typeof ArrayBuffer !== 'undefined' &&\n\t\t  typeof DataView !== 'undefined' &&\n\t\t  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n\t\t);\n\t\tfunction isDataView(value) {\n\t\t  if (typeof DataView === 'undefined') {\n\t\t    return false;\n\t\t  }\n\n\t\t  return isDataViewToString.working\n\t\t    ? isDataViewToString(value)\n\t\t    : value instanceof DataView;\n\t\t}\n\t\texports.isDataView = isDataView;\n\n\t\t// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\n\t\tvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\n\t\tfunction isSharedArrayBufferToString(value) {\n\t\t  return ObjectToString(value) === '[object SharedArrayBuffer]';\n\t\t}\n\t\tfunction isSharedArrayBuffer(value) {\n\t\t  if (typeof SharedArrayBufferCopy === 'undefined') {\n\t\t    return false;\n\t\t  }\n\n\t\t  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n\t\t    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n\t\t  }\n\n\t\t  return isSharedArrayBufferToString.working\n\t\t    ? isSharedArrayBufferToString(value)\n\t\t    : value instanceof SharedArrayBufferCopy;\n\t\t}\n\t\texports.isSharedArrayBuffer = isSharedArrayBuffer;\n\n\t\tfunction isAsyncFunction(value) {\n\t\t  return ObjectToString(value) === '[object AsyncFunction]';\n\t\t}\n\t\texports.isAsyncFunction = isAsyncFunction;\n\n\t\tfunction isMapIterator(value) {\n\t\t  return ObjectToString(value) === '[object Map Iterator]';\n\t\t}\n\t\texports.isMapIterator = isMapIterator;\n\n\t\tfunction isSetIterator(value) {\n\t\t  return ObjectToString(value) === '[object Set Iterator]';\n\t\t}\n\t\texports.isSetIterator = isSetIterator;\n\n\t\tfunction isGeneratorObject(value) {\n\t\t  return ObjectToString(value) === '[object Generator]';\n\t\t}\n\t\texports.isGeneratorObject = isGeneratorObject;\n\n\t\tfunction isWebAssemblyCompiledModule(value) {\n\t\t  return ObjectToString(value) === '[object WebAssembly.Module]';\n\t\t}\n\t\texports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\n\t\tfunction isNumberObject(value) {\n\t\t  return checkBoxedPrimitive(value, numberValue);\n\t\t}\n\t\texports.isNumberObject = isNumberObject;\n\n\t\tfunction isStringObject(value) {\n\t\t  return checkBoxedPrimitive(value, stringValue);\n\t\t}\n\t\texports.isStringObject = isStringObject;\n\n\t\tfunction isBooleanObject(value) {\n\t\t  return checkBoxedPrimitive(value, booleanValue);\n\t\t}\n\t\texports.isBooleanObject = isBooleanObject;\n\n\t\tfunction isBigIntObject(value) {\n\t\t  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n\t\t}\n\t\texports.isBigIntObject = isBigIntObject;\n\n\t\tfunction isSymbolObject(value) {\n\t\t  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n\t\t}\n\t\texports.isSymbolObject = isSymbolObject;\n\n\t\tfunction isBoxedPrimitive(value) {\n\t\t  return (\n\t\t    isNumberObject(value) ||\n\t\t    isStringObject(value) ||\n\t\t    isBooleanObject(value) ||\n\t\t    isBigIntObject(value) ||\n\t\t    isSymbolObject(value)\n\t\t  );\n\t\t}\n\t\texports.isBoxedPrimitive = isBoxedPrimitive;\n\n\t\tfunction isAnyArrayBuffer(value) {\n\t\t  return typeof Uint8Array !== 'undefined' && (\n\t\t    isArrayBuffer(value) ||\n\t\t    isSharedArrayBuffer(value)\n\t\t  );\n\t\t}\n\t\texports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n\t\t['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n\t\t  Object.defineProperty(exports, method, {\n\t\t    enumerable: false,\n\t\t    value: function() {\n\t\t      throw new Error(method + ' is not supported in userland');\n\t\t    }\n\t\t  });\n\t\t});\n} (types));\n\treturn types;\n}\n\nexport { requireTypes as __require };","start":1667202982464,"end":1667202984787,"order":"normal"}]}
