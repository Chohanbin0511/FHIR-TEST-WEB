{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/vuetify/lib/composables/lazy.mjs","transforms":[{"name":"vite:load-fallback","result":"// Utilities\nimport { computed, ref, watch } from 'vue'; // Types\n\nimport { propsFactory } from \"../util/index.mjs\";\nexport const makeLazyProps = propsFactory({\n  eager: Boolean\n}, 'lazy');\nexport function useLazy(props, active) {\n  const isBooted = ref(false);\n  const hasContent = computed(() => isBooted.value || props.eager || active.value);\n  watch(active, () => isBooted.value = true);\n\n  function onAfterLeave() {\n    if (!props.eager) isBooted.value = false;\n  }\n\n  return {\n    isBooted,\n    hasContent,\n    onAfterLeave\n  };\n}\n//# sourceMappingURL=lazy.mjs.map","start":1667202705001,"end":1667202705123}]}
