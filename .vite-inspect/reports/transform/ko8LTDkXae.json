{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/vuetify/lib/composables/loader.mjs","transforms":[{"name":"vite:load-fallback","result":"import { createVNode as _createVNode } from \"vue\";\n// Components\nimport { VProgressLinear } from \"../components/VProgressLinear/index.mjs\"; // Utilities\n\nimport { computed } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\n\n// Composables\nexport const makeLoaderProps = propsFactory({\n  loading: Boolean\n}, 'loader');\nexport function useLoader(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const loaderClasses = computed(() => ({\n    [`${name}--loading`]: props.loading\n  }));\n  return {\n    loaderClasses\n  };\n}\nexport function LoaderSlot(props, _ref) {\n  var _slots$default;\n\n  let {\n    slots\n  } = _ref;\n  return _createVNode(\"div\", {\n    \"class\": `${props.name}__loader`\n  }, [((_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, {\n    color: props.color,\n    isActive: props.active\n  })) || _createVNode(VProgressLinear, {\n    \"active\": props.active,\n    \"color\": props.color,\n    \"height\": \"2\",\n    \"indeterminate\": true\n  }, null)]);\n}\n//# sourceMappingURL=loader.mjs.map","start":1667202704005,"end":1667202704056}]}
