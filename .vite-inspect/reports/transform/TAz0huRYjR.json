{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/formats/x509-pem.js","transforms":[{"name":"vite:load-fallback","result":"// Copyright 2016 Joyent, Inc.\n\nvar x509 = require('./x509');\n\nmodule.exports = {\n\tread: read,\n\tverify: x509.verify,\n\tsign: x509.sign,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar asn1 = require('asn1');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar pem = require('./pem');\nvar Identity = require('../identity');\nvar Signature = require('../signature');\nvar Certificate = require('../certificate');\n\nfunction read(buf, options) {\n\tif (typeof (buf) !== 'string') {\n\t\tassert.buffer(buf, 'buf');\n\t\tbuf = buf.toString('ascii');\n\t}\n\n\tvar lines = buf.trim().split(/[\\r\\n]+/g);\n\n\tvar m;\n\tvar si = -1;\n\twhile (!m && si < lines.length) {\n\t\tm = lines[++si].match(/*JSSTYLED*/\n\t\t    /[-]+[ ]*BEGIN CERTIFICATE[ ]*[-]+/);\n\t}\n\tassert.ok(m, 'invalid PEM header');\n\n\tvar m2;\n\tvar ei = lines.length;\n\twhile (!m2 && ei > 0) {\n\t\tm2 = lines[--ei].match(/*JSSTYLED*/\n\t\t    /[-]+[ ]*END CERTIFICATE[ ]*[-]+/);\n\t}\n\tassert.ok(m2, 'invalid PEM footer');\n\n\tlines = lines.slice(si, ei + 1);\n\n\tvar headers = {};\n\twhile (true) {\n\t\tlines = lines.slice(1);\n\t\tm = lines[0].match(/*JSSTYLED*/\n\t\t    /^([A-Za-z0-9-]+): (.+)$/);\n\t\tif (!m)\n\t\t\tbreak;\n\t\theaders[m[1].toLowerCase()] = m[2];\n\t}\n\n\t/* Chop off the first and last lines */\n\tlines = lines.slice(0, -1).join('');\n\tbuf = Buffer.from(lines, 'base64');\n\n\treturn (x509.read(buf, options));\n}\n\nfunction write(cert, options) {\n\tvar dbuf = x509.write(cert, options);\n\n\tvar header = 'CERTIFICATE';\n\tvar tmp = dbuf.toString('base64');\n\tvar len = tmp.length + (tmp.length / 64) +\n\t    18 + 16 + header.length*2 + 10;\n\tvar buf = Buffer.alloc(len);\n\tvar o = 0;\n\to += buf.write('-----BEGIN ' + header + '-----\\n', o);\n\tfor (var i = 0; i < tmp.length; ) {\n\t\tvar limit = i + 64;\n\t\tif (limit > tmp.length)\n\t\t\tlimit = tmp.length;\n\t\to += buf.write(tmp.slice(i, limit), o);\n\t\tbuf[o++] = 10;\n\t\ti = limit;\n\t}\n\to += buf.write('-----END ' + header + '-----\\n', o);\n\n\treturn (buf.slice(0, o));\n}\n","start":1667202983883,"end":1667202984205},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __require as require$$0 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/formats/x509.js?commonjs-wrapped\";\nimport { __require as require$$1 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/assert-plus/assert.js?commonjs-wrapped\";\nimport { __require as require$$2 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/asn1/lib/index.js?commonjs-wrapped\";\nimport { __require as require$$3 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/safer-buffer/safer.js?commonjs-wrapped\";\nimport { __require as require$$4 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/algs.js?commonjs-wrapped\";\nimport { __require as require$$5 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/utils.js?commonjs-wrapped\";\nimport { __require as require$$6 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/key.js?commonjs-wrapped\";\nimport { __require as require$$7 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/private-key.js?commonjs-wrapped\";\nimport { __require as require$$8 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/formats/pem.js?commonjs-wrapped\";\nimport { __require as require$$9 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/identity.js?commonjs-wrapped\";\nimport { __require as require$$10 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/signature.js?commonjs-wrapped\";\nimport { __require as require$$11 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/sshpk/lib/certificate.js?commonjs-wrapped\";\n\nvar x509Pem;\nvar hasRequiredX509Pem;\n\nfunction requireX509Pem () {\n\tif (hasRequiredX509Pem) return x509Pem;\n\thasRequiredX509Pem = 1;\n\t// Copyright 2016 Joyent, Inc.\n\n\tvar x509 = require$$0();\n\n\tx509Pem = {\n\t\tread: read,\n\t\tverify: x509.verify,\n\t\tsign: x509.sign,\n\t\twrite: write\n\t};\n\n\tvar assert = require$$1();\n\tvar asn1 = require$$2();\n\tvar Buffer = require$$3().Buffer;\n\tvar algs = require$$4();\n\tvar utils = require$$5();\n\tvar Key = require$$6();\n\tvar PrivateKey = require$$7();\n\tvar pem = require$$8();\n\tvar Identity = require$$9();\n\tvar Signature = require$$10();\n\tvar Certificate = require$$11();\n\n\tfunction read(buf, options) {\n\t\tif (typeof (buf) !== 'string') {\n\t\t\tassert.buffer(buf, 'buf');\n\t\t\tbuf = buf.toString('ascii');\n\t\t}\n\n\t\tvar lines = buf.trim().split(/[\\r\\n]+/g);\n\n\t\tvar m;\n\t\tvar si = -1;\n\t\twhile (!m && si < lines.length) {\n\t\t\tm = lines[++si].match(/*JSSTYLED*/\n\t\t\t    /[-]+[ ]*BEGIN CERTIFICATE[ ]*[-]+/);\n\t\t}\n\t\tassert.ok(m, 'invalid PEM header');\n\n\t\tvar m2;\n\t\tvar ei = lines.length;\n\t\twhile (!m2 && ei > 0) {\n\t\t\tm2 = lines[--ei].match(/*JSSTYLED*/\n\t\t\t    /[-]+[ ]*END CERTIFICATE[ ]*[-]+/);\n\t\t}\n\t\tassert.ok(m2, 'invalid PEM footer');\n\n\t\tlines = lines.slice(si, ei + 1);\n\n\t\tvar headers = {};\n\t\twhile (true) {\n\t\t\tlines = lines.slice(1);\n\t\t\tm = lines[0].match(/*JSSTYLED*/\n\t\t\t    /^([A-Za-z0-9-]+): (.+)$/);\n\t\t\tif (!m)\n\t\t\t\tbreak;\n\t\t\theaders[m[1].toLowerCase()] = m[2];\n\t\t}\n\n\t\t/* Chop off the first and last lines */\n\t\tlines = lines.slice(0, -1).join('');\n\t\tbuf = Buffer.from(lines, 'base64');\n\n\t\treturn (x509.read(buf, options));\n\t}\n\n\tfunction write(cert, options) {\n\t\tvar dbuf = x509.write(cert, options);\n\n\t\tvar header = 'CERTIFICATE';\n\t\tvar tmp = dbuf.toString('base64');\n\t\tvar len = tmp.length + (tmp.length / 64) +\n\t\t    18 + 16 + header.length*2 + 10;\n\t\tvar buf = Buffer.alloc(len);\n\t\tvar o = 0;\n\t\to += buf.write('-----BEGIN ' + header + '-----\\n', o);\n\t\tfor (var i = 0; i < tmp.length; ) {\n\t\t\tvar limit = i + 64;\n\t\t\tif (limit > tmp.length)\n\t\t\t\tlimit = tmp.length;\n\t\t\to += buf.write(tmp.slice(i, limit), o);\n\t\t\tbuf[o++] = 10;\n\t\t\ti = limit;\n\t\t}\n\t\to += buf.write('-----END ' + header + '-----\\n', o);\n\n\t\treturn (buf.slice(0, o));\n\t}\n\treturn x509Pem;\n}\n\nexport { requireX509Pem as __require };","start":1667202984211,"end":1667202985001,"order":"normal"}]}
