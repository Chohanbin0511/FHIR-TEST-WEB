{"resolvedId":"C:/chohbin/Fhir-Test-Web/src/api/common/interceptors.js","transforms":[{"name":"vite:load-fallback","result":"import { useAuthStore } from '@/stores/auth';\r\nimport { handleError } from './common.js';\r\nimport router from '@/router/index.js';\r\n\r\nfunction setInterceptors(instance) {\r\n\t// Add a request interceptor\r\n\tinstance.interceptors.request.use(\r\n\t\tfunction (config) {\r\n\t\t\t// Do something before request is sent\r\n\t\t\tconfig.headers = {\r\n\t\t\t\t'Content-Type': 'application/json;charset=utf-8',\r\n\t\t\t};\r\n\t\t\treturn config;\r\n\t\t},\r\n\t\tfunction (error) {\r\n\t\t\t// Do something with request error\r\n\t\t\treturn Promise.reject(error);\r\n\t\t},\r\n\t);\r\n\r\n\t// Add a response interceptor\r\n\tinstance.interceptors.response.use(\r\n\t\tfunction (response) {\r\n\t\t\t// Any status code that lie within the range of 2xx cause this function to trigger\r\n\t\t\t// Do something with response data\r\n\t\t\treturn response;\r\n\t\t},\r\n\t\tfunction (error) {\r\n\t\t\t// Any status codes that falls outside the range of 2xx cause this function to trigger\r\n\t\t\t// Do something with response error\r\n\t\t\thandleError(error);\r\n\t\t\trouter.go(-1);\r\n\t\t\treturn Promise.reject(error);\r\n\t\t},\r\n\t);\r\n\treturn instance;\r\n}\r\n\r\nfunction setAuthInterceptors(instance) {\r\n\t// Add a request interceptor\r\n\tinstance.interceptors.request.use(\r\n\t\tfunction (config) {\r\n\t\t\tconst store = useAuthStore();\r\n\t\t\t// Do something before request is sent\r\n\t\t\tconsole.log('vv', store.oauth.accessToken);\r\n\t\t\tconfig.headers = {\r\n\t\t\t\t'Content-Type': 'application/json;charset=utf-8',\r\n\t\t\t\tAuthorization: `Bearer ${store.oauth.accessToken}`,\r\n\t\t\t};\r\n\t\t\treturn config;\r\n\t\t},\r\n\t\tfunction (error) {\r\n\t\t\t// Do something with request error\r\n\r\n\t\t\treturn Promise.reject(error);\r\n\t\t},\r\n\t);\r\n\r\n\t// Add a response interceptor\r\n\tinstance.interceptors.response.use(\r\n\t\tfunction (response) {\r\n\t\t\t// Any status code that lie within the range of 2xx cause this function to trigger\r\n\t\t\t// Do something with response data\r\n\t\t\treturn response;\r\n\t\t},\r\n\t\tfunction (error) {\r\n\t\t\t// Any status codes that falls outside the range of 2xx cause this function to trigger\r\n\t\t\t// Do something with response error\r\n\t\t\thandleError(error);\r\n\t\t\treturn Promise.reject(error);\r\n\t\t},\r\n\t);\r\n\treturn instance;\r\n}\r\n\r\nexport { setInterceptors, setAuthInterceptors };\r\n","start":1667202704330,"end":1667202704481}]}
