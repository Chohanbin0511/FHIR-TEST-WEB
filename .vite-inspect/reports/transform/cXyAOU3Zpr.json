{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/request/lib/helpers.js","transforms":[{"name":"vite:load-fallback","result":"'use strict'\n\nvar jsonSafeStringify = require('json-stringify-safe')\nvar crypto = require('crypto')\nvar Buffer = require('safe-buffer').Buffer\n\nvar defer = typeof setImmediate === 'undefined'\n  ? process.nextTick\n  : setImmediate\n\nfunction paramsHaveRequestBody (params) {\n  return (\n    params.body ||\n    params.requestBodyStream ||\n    (params.json && typeof params.json !== 'boolean') ||\n    params.multipart\n  )\n}\n\nfunction safeStringify (obj, replacer) {\n  var ret\n  try {\n    ret = JSON.stringify(obj, replacer)\n  } catch (e) {\n    ret = jsonSafeStringify(obj, replacer)\n  }\n  return ret\n}\n\nfunction md5 (str) {\n  return crypto.createHash('md5').update(str).digest('hex')\n}\n\nfunction isReadStream (rs) {\n  return rs.readable && rs.path && rs.mode\n}\n\nfunction toBase64 (str) {\n  return Buffer.from(str || '', 'utf8').toString('base64')\n}\n\nfunction copy (obj) {\n  var o = {}\n  Object.keys(obj).forEach(function (i) {\n    o[i] = obj[i]\n  })\n  return o\n}\n\nfunction version () {\n  var numbers = process.version.replace('v', '').split('.')\n  return {\n    major: parseInt(numbers[0], 10),\n    minor: parseInt(numbers[1], 10),\n    patch: parseInt(numbers[2], 10)\n  }\n}\n\nexports.paramsHaveRequestBody = paramsHaveRequestBody\nexports.safeStringify = safeStringify\nexports.md5 = md5\nexports.isReadStream = isReadStream\nexports.toBase64 = toBase64\nexports.copy = copy\nexports.version = version\nexports.defer = defer\n","start":1667202704311,"end":1667202704392},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as helpers } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/request/lib/helpers.js?commonjs-exports\"\nimport { __require as require$$0 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/json-stringify-safe/stringify.js?commonjs-wrapped\";\nimport require$$1 from \"\\u0000__vite-browser-external?commonjs-proxy\";\nimport { __require as require$$2 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/safe-buffer/index.js?commonjs-wrapped\";\n\nvar hasRequiredHelpers;\n\nfunction requireHelpers () {\n\tif (hasRequiredHelpers) return helpers;\n\thasRequiredHelpers = 1;\n\t'use strict'\n\n\tvar jsonSafeStringify = require$$0()\n\tvar crypto = require$$1\n\tvar Buffer = require$$2().Buffer\n\n\tvar defer = typeof setImmediate === 'undefined'\n\t  ? process.nextTick\n\t  : setImmediate\n\n\tfunction paramsHaveRequestBody (params) {\n\t  return (\n\t    params.body ||\n\t    params.requestBodyStream ||\n\t    (params.json && typeof params.json !== 'boolean') ||\n\t    params.multipart\n\t  )\n\t}\n\n\tfunction safeStringify (obj, replacer) {\n\t  var ret\n\t  try {\n\t    ret = JSON.stringify(obj, replacer)\n\t  } catch (e) {\n\t    ret = jsonSafeStringify(obj, replacer)\n\t  }\n\t  return ret\n\t}\n\n\tfunction md5 (str) {\n\t  return crypto.createHash('md5').update(str).digest('hex')\n\t}\n\n\tfunction isReadStream (rs) {\n\t  return rs.readable && rs.path && rs.mode\n\t}\n\n\tfunction toBase64 (str) {\n\t  return Buffer.from(str || '', 'utf8').toString('base64')\n\t}\n\n\tfunction copy (obj) {\n\t  var o = {}\n\t  Object.keys(obj).forEach(function (i) {\n\t    o[i] = obj[i]\n\t  })\n\t  return o\n\t}\n\n\tfunction version () {\n\t  var numbers = process.version.replace('v', '').split('.')\n\t  return {\n\t    major: parseInt(numbers[0], 10),\n\t    minor: parseInt(numbers[1], 10),\n\t    patch: parseInt(numbers[2], 10)\n\t  }\n\t}\n\n\thelpers.paramsHaveRequestBody = paramsHaveRequestBody\n\thelpers.safeStringify = safeStringify\n\thelpers.md5 = md5\n\thelpers.isReadStream = isReadStream\n\thelpers.toBase64 = toBase64\n\thelpers.copy = copy\n\thelpers.version = version\n\thelpers.defer = defer\n\treturn helpers;\n}\n\nexport { requireHelpers as __require };","start":1667202704392,"end":1667202705225,"order":"normal"},{"name":"node-polyfills","result":"import { default as process } from 'process';\n\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as helpers } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/request/lib/helpers.js?commonjs-exports\"\nimport { __require as require$$0 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/json-stringify-safe/stringify.js?commonjs-wrapped\";\nimport require$$1 from \"\\u0000__vite-browser-external?commonjs-proxy\";\nimport { __require as require$$2 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/safe-buffer/index.js?commonjs-wrapped\";\n\nvar hasRequiredHelpers;\n\nfunction requireHelpers () {\n\tif (hasRequiredHelpers) return helpers;\n\thasRequiredHelpers = 1;\n\t'use strict'\n\n\tvar jsonSafeStringify = require$$0()\n\tvar crypto = require$$1\n\tvar Buffer = require$$2().Buffer\n\n\tvar defer = typeof setImmediate === 'undefined'\n\t  ? process.nextTick\n\t  : setImmediate\n\n\tfunction paramsHaveRequestBody (params) {\n\t  return (\n\t    params.body ||\n\t    params.requestBodyStream ||\n\t    (params.json && typeof params.json !== 'boolean') ||\n\t    params.multipart\n\t  )\n\t}\n\n\tfunction safeStringify (obj, replacer) {\n\t  var ret\n\t  try {\n\t    ret = JSON.stringify(obj, replacer)\n\t  } catch (e) {\n\t    ret = jsonSafeStringify(obj, replacer)\n\t  }\n\t  return ret\n\t}\n\n\tfunction md5 (str) {\n\t  return crypto.createHash('md5').update(str).digest('hex')\n\t}\n\n\tfunction isReadStream (rs) {\n\t  return rs.readable && rs.path && rs.mode\n\t}\n\n\tfunction toBase64 (str) {\n\t  return Buffer.from(str || '', 'utf8').toString('base64')\n\t}\n\n\tfunction copy (obj) {\n\t  var o = {}\n\t  Object.keys(obj).forEach(function (i) {\n\t    o[i] = obj[i]\n\t  })\n\t  return o\n\t}\n\n\tfunction version () {\n\t  var numbers = process.version.replace('v', '').split('.')\n\t  return {\n\t    major: parseInt(numbers[0], 10),\n\t    minor: parseInt(numbers[1], 10),\n\t    patch: parseInt(numbers[2], 10)\n\t  }\n\t}\n\n\thelpers.paramsHaveRequestBody = paramsHaveRequestBody\n\thelpers.safeStringify = safeStringify\n\thelpers.md5 = md5\n\thelpers.isReadStream = isReadStream\n\thelpers.toBase64 = toBase64\n\thelpers.copy = copy\n\thelpers.version = version\n\thelpers.defer = defer\n\treturn helpers;\n}\n\nexport { requireHelpers as __require };","start":1667202705225,"end":1667202705226,"order":"normal"}]}
