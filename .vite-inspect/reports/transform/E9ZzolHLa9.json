{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/ajv/lib/dotjs/properties.js","transforms":[{"name":"vite:load-fallback","result":"'use strict';\nmodule.exports = function generate_properties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $key = 'key' + $lvl,\n    $idx = 'idx' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $dataProperties = 'dataProperties' + $lvl;\n  var $schemaKeys = Object.keys($schema || {}).filter(notProto),\n    $pProperties = it.schema.patternProperties || {},\n    $pPropertyKeys = Object.keys($pProperties).filter(notProto),\n    $aProperties = it.schema.additionalProperties,\n    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\n    $noAdditional = $aProperties === false,\n    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\n    $removeAdditional = it.opts.removeAdditional,\n    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\n    $ownProperties = it.opts.ownProperties,\n    $currentBaseId = it.baseId;\n  var $required = it.schema.required;\n  if ($required && !(it.opts.$data && $required.$data) && $required.length < it.opts.loopRequired) {\n    var $requiredHash = it.util.toHash($required);\n  }\n\n  function notProto(p) {\n    return p !== '__proto__';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';\n  if ($ownProperties) {\n    out += ' var ' + ($dataProperties) + ' = undefined;';\n  }\n  if ($checkAdditional) {\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    if ($someProperties) {\n      out += ' var isAdditional' + ($lvl) + ' = !(false ';\n      if ($schemaKeys.length) {\n        if ($schemaKeys.length > 8) {\n          out += ' || validate.schema' + ($schemaPath) + '.hasOwnProperty(' + ($key) + ') ';\n        } else {\n          var arr1 = $schemaKeys;\n          if (arr1) {\n            var $propertyKey, i1 = -1,\n              l1 = arr1.length - 1;\n            while (i1 < l1) {\n              $propertyKey = arr1[i1 += 1];\n              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';\n            }\n          }\n        }\n      }\n      if ($pPropertyKeys.length) {\n        var arr2 = $pPropertyKeys;\n        if (arr2) {\n          var $pProperty, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $pProperty = arr2[$i += 1];\n            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      out += ' ); if (isAdditional' + ($lvl) + ') { ';\n    }\n    if ($removeAdditional == 'all') {\n      out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n    } else {\n      var $currentErrorPath = it.errorPath;\n      var $additionalProperty = '\\' + ' + $key + ' + \\'';\n      if (it.opts._errorDataPathProperty) {\n        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n      }\n      if ($noAdditional) {\n        if ($removeAdditional) {\n          out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n        } else {\n          out += ' ' + ($nextValid) + ' = false; ';\n          var $currErrSchemaPath = $errSchemaPath;\n          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          var $$outStack = $$outStack || [];\n          $$outStack.push(out);\n          out = ''; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('additionalProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \\'' + ($additionalProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is an invalid additional property';\n              } else {\n                out += 'should NOT have additional properties';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          var __err = out;\n          out = $$outStack.pop();\n          if (!it.compositeRule && $breakOnError) {\n            /* istanbul ignore if */\n            if (it.async) {\n              out += ' throw new ValidationError([' + (__err) + ']); ';\n            } else {\n              out += ' validate.errors = [' + (__err) + ']; return false; ';\n            }\n          } else {\n            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n          }\n          $errSchemaPath = $currErrSchemaPath;\n          if ($breakOnError) {\n            out += ' break; ';\n          }\n        }\n      } else if ($additionalIsSchema) {\n        if ($removeAdditional == 'failing') {\n          out += ' var ' + ($errs) + ' = errors;  ';\n          var $wasComposite = it.compositeRule;\n          it.compositeRule = $it.compositeRule = true;\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';\n          it.compositeRule = $it.compositeRule = $wasComposite;\n        } else {\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n        }\n      }\n      it.errorPath = $currentErrorPath;\n    }\n    if ($someProperties) {\n      out += ' } ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      out += ' if (' + ($nextValid) + ') { ';\n      $closingBraces += '}';\n    }\n  }\n  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\n  if ($schemaKeys.length) {\n    var arr3 = $schemaKeys;\n    if (arr3) {\n      var $propertyKey, i3 = -1,\n        l3 = arr3.length - 1;\n      while (i3 < l3) {\n        $propertyKey = arr3[i3 += 1];\n        var $sch = $schema[$propertyKey];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          var $prop = it.util.getProperty($propertyKey),\n            $passData = $data + $prop,\n            $hasDefault = $useDefaults && $sch.default !== undefined;\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + $prop;\n          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\n          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\n          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            $code = it.util.varReplace($code, $nextData, $passData);\n            var $useData = $passData;\n          } else {\n            var $useData = $nextData;\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';\n          }\n          if ($hasDefault) {\n            out += ' ' + ($code) + ' ';\n          } else {\n            if ($requiredHash && $requiredHash[$propertyKey]) {\n              out += ' if ( ' + ($useData) + ' === undefined ';\n              if ($ownProperties) {\n                out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n              }\n              out += ') { ' + ($nextValid) + ' = false; ';\n              var $currentErrorPath = it.errorPath,\n                $currErrSchemaPath = $errSchemaPath,\n                $missingProperty = it.util.escapeQuotes($propertyKey);\n              if (it.opts._errorDataPathProperty) {\n                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n              }\n              $errSchemaPath = it.errSchemaPath + '/required';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'';\n                  if (it.opts._errorDataPathProperty) {\n                    out += 'is a required property';\n                  } else {\n                    out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              $errSchemaPath = $currErrSchemaPath;\n              it.errorPath = $currentErrorPath;\n              out += ' } else { ';\n            } else {\n              if ($breakOnError) {\n                out += ' if ( ' + ($useData) + ' === undefined ';\n                if ($ownProperties) {\n                  out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ') { ' + ($nextValid) + ' = true; } else { ';\n              } else {\n                out += ' if (' + ($useData) + ' !== undefined ';\n                if ($ownProperties) {\n                  out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ' ) { ';\n              }\n            }\n            out += ' ' + ($code) + ' } ';\n          }\n        }\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($pPropertyKeys.length) {\n    var arr4 = $pPropertyKeys;\n    if (arr4) {\n      var $pProperty, i4 = -1,\n        l4 = arr4.length - 1;\n      while (i4 < l4) {\n        $pProperty = arr4[i4 += 1];\n        var $sch = $pProperties[$pProperty];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\n          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\n          if ($ownProperties) {\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n          } else {\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n          }\n          out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + ($nextValid) + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n","start":1667202707280,"end":1667202707359},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar properties;\nvar hasRequiredProperties;\n\nfunction requireProperties () {\n\tif (hasRequiredProperties) return properties;\n\thasRequiredProperties = 1;\n\t'use strict';\n\tproperties = function generate_properties(it, $keyword, $ruleType) {\n\t  var out = ' ';\n\t  var $lvl = it.level;\n\t  var $dataLvl = it.dataLevel;\n\t  var $schema = it.schema[$keyword];\n\t  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n\t  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n\t  var $breakOnError = !it.opts.allErrors;\n\t  var $data = 'data' + ($dataLvl || '');\n\t  var $errs = 'errs__' + $lvl;\n\t  var $it = it.util.copy(it);\n\t  var $closingBraces = '';\n\t  $it.level++;\n\t  var $nextValid = 'valid' + $it.level;\n\t  var $key = 'key' + $lvl,\n\t    $idx = 'idx' + $lvl,\n\t    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n\t    $nextData = 'data' + $dataNxt,\n\t    $dataProperties = 'dataProperties' + $lvl;\n\t  var $schemaKeys = Object.keys($schema || {}).filter(notProto),\n\t    $pProperties = it.schema.patternProperties || {},\n\t    $pPropertyKeys = Object.keys($pProperties).filter(notProto),\n\t    $aProperties = it.schema.additionalProperties,\n\t    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\n\t    $noAdditional = $aProperties === false,\n\t    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\n\t    $removeAdditional = it.opts.removeAdditional,\n\t    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\n\t    $ownProperties = it.opts.ownProperties,\n\t    $currentBaseId = it.baseId;\n\t  var $required = it.schema.required;\n\t  if ($required && !(it.opts.$data && $required.$data) && $required.length < it.opts.loopRequired) {\n\t    var $requiredHash = it.util.toHash($required);\n\t  }\n\n\t  function notProto(p) {\n\t    return p !== '__proto__';\n\t  }\n\t  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';\n\t  if ($ownProperties) {\n\t    out += ' var ' + ($dataProperties) + ' = undefined;';\n\t  }\n\t  if ($checkAdditional) {\n\t    if ($ownProperties) {\n\t      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n\t    } else {\n\t      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n\t    }\n\t    if ($someProperties) {\n\t      out += ' var isAdditional' + ($lvl) + ' = !(false ';\n\t      if ($schemaKeys.length) {\n\t        if ($schemaKeys.length > 8) {\n\t          out += ' || validate.schema' + ($schemaPath) + '.hasOwnProperty(' + ($key) + ') ';\n\t        } else {\n\t          var arr1 = $schemaKeys;\n\t          if (arr1) {\n\t            var $propertyKey, i1 = -1,\n\t              l1 = arr1.length - 1;\n\t            while (i1 < l1) {\n\t              $propertyKey = arr1[i1 += 1];\n\t              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';\n\t            }\n\t          }\n\t        }\n\t      }\n\t      if ($pPropertyKeys.length) {\n\t        var arr2 = $pPropertyKeys;\n\t        if (arr2) {\n\t          var $pProperty, $i = -1,\n\t            l2 = arr2.length - 1;\n\t          while ($i < l2) {\n\t            $pProperty = arr2[$i += 1];\n\t            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';\n\t          }\n\t        }\n\t      }\n\t      out += ' ); if (isAdditional' + ($lvl) + ') { ';\n\t    }\n\t    if ($removeAdditional == 'all') {\n\t      out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n\t    } else {\n\t      var $currentErrorPath = it.errorPath;\n\t      var $additionalProperty = '\\' + ' + $key + ' + \\'';\n\t      if (it.opts._errorDataPathProperty) {\n\t        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n\t      }\n\t      if ($noAdditional) {\n\t        if ($removeAdditional) {\n\t          out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n\t        } else {\n\t          out += ' ' + ($nextValid) + ' = false; ';\n\t          var $currErrSchemaPath = $errSchemaPath;\n\t          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\n\t          var $$outStack = $$outStack || [];\n\t          $$outStack.push(out);\n\t          out = ''; /* istanbul ignore else */\n\t          if (it.createErrors !== false) {\n\t            out += ' { keyword: \\'' + ('additionalProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \\'' + ($additionalProperty) + '\\' } ';\n\t            if (it.opts.messages !== false) {\n\t              out += ' , message: \\'';\n\t              if (it.opts._errorDataPathProperty) {\n\t                out += 'is an invalid additional property';\n\t              } else {\n\t                out += 'should NOT have additional properties';\n\t              }\n\t              out += '\\' ';\n\t            }\n\t            if (it.opts.verbose) {\n\t              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n\t            }\n\t            out += ' } ';\n\t          } else {\n\t            out += ' {} ';\n\t          }\n\t          var __err = out;\n\t          out = $$outStack.pop();\n\t          if (!it.compositeRule && $breakOnError) {\n\t            /* istanbul ignore if */\n\t            if (it.async) {\n\t              out += ' throw new ValidationError([' + (__err) + ']); ';\n\t            } else {\n\t              out += ' validate.errors = [' + (__err) + ']; return false; ';\n\t            }\n\t          } else {\n\t            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n\t          }\n\t          $errSchemaPath = $currErrSchemaPath;\n\t          if ($breakOnError) {\n\t            out += ' break; ';\n\t          }\n\t        }\n\t      } else if ($additionalIsSchema) {\n\t        if ($removeAdditional == 'failing') {\n\t          out += ' var ' + ($errs) + ' = errors;  ';\n\t          var $wasComposite = it.compositeRule;\n\t          it.compositeRule = $it.compositeRule = true;\n\t          $it.schema = $aProperties;\n\t          $it.schemaPath = it.schemaPath + '.additionalProperties';\n\t          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n\t          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n\t          var $passData = $data + '[' + $key + ']';\n\t          $it.dataPathArr[$dataNxt] = $key;\n\t          var $code = it.validate($it);\n\t          $it.baseId = $currentBaseId;\n\t          if (it.util.varOccurences($code, $nextData) < 2) {\n\t            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n\t          } else {\n\t            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n\t          }\n\t          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';\n\t          it.compositeRule = $it.compositeRule = $wasComposite;\n\t        } else {\n\t          $it.schema = $aProperties;\n\t          $it.schemaPath = it.schemaPath + '.additionalProperties';\n\t          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n\t          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n\t          var $passData = $data + '[' + $key + ']';\n\t          $it.dataPathArr[$dataNxt] = $key;\n\t          var $code = it.validate($it);\n\t          $it.baseId = $currentBaseId;\n\t          if (it.util.varOccurences($code, $nextData) < 2) {\n\t            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n\t          } else {\n\t            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n\t          }\n\t          if ($breakOnError) {\n\t            out += ' if (!' + ($nextValid) + ') break; ';\n\t          }\n\t        }\n\t      }\n\t      it.errorPath = $currentErrorPath;\n\t    }\n\t    if ($someProperties) {\n\t      out += ' } ';\n\t    }\n\t    out += ' }  ';\n\t    if ($breakOnError) {\n\t      out += ' if (' + ($nextValid) + ') { ';\n\t      $closingBraces += '}';\n\t    }\n\t  }\n\t  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\n\t  if ($schemaKeys.length) {\n\t    var arr3 = $schemaKeys;\n\t    if (arr3) {\n\t      var $propertyKey, i3 = -1,\n\t        l3 = arr3.length - 1;\n\t      while (i3 < l3) {\n\t        $propertyKey = arr3[i3 += 1];\n\t        var $sch = $schema[$propertyKey];\n\t        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n\t          var $prop = it.util.getProperty($propertyKey),\n\t            $passData = $data + $prop,\n\t            $hasDefault = $useDefaults && $sch.default !== undefined;\n\t          $it.schema = $sch;\n\t          $it.schemaPath = $schemaPath + $prop;\n\t          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\n\t          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\n\t          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\n\t          var $code = it.validate($it);\n\t          $it.baseId = $currentBaseId;\n\t          if (it.util.varOccurences($code, $nextData) < 2) {\n\t            $code = it.util.varReplace($code, $nextData, $passData);\n\t            var $useData = $passData;\n\t          } else {\n\t            var $useData = $nextData;\n\t            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';\n\t          }\n\t          if ($hasDefault) {\n\t            out += ' ' + ($code) + ' ';\n\t          } else {\n\t            if ($requiredHash && $requiredHash[$propertyKey]) {\n\t              out += ' if ( ' + ($useData) + ' === undefined ';\n\t              if ($ownProperties) {\n\t                out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n\t              }\n\t              out += ') { ' + ($nextValid) + ' = false; ';\n\t              var $currentErrorPath = it.errorPath,\n\t                $currErrSchemaPath = $errSchemaPath,\n\t                $missingProperty = it.util.escapeQuotes($propertyKey);\n\t              if (it.opts._errorDataPathProperty) {\n\t                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n\t              }\n\t              $errSchemaPath = it.errSchemaPath + '/required';\n\t              var $$outStack = $$outStack || [];\n\t              $$outStack.push(out);\n\t              out = ''; /* istanbul ignore else */\n\t              if (it.createErrors !== false) {\n\t                out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n\t                if (it.opts.messages !== false) {\n\t                  out += ' , message: \\'';\n\t                  if (it.opts._errorDataPathProperty) {\n\t                    out += 'is a required property';\n\t                  } else {\n\t                    out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n\t                  }\n\t                  out += '\\' ';\n\t                }\n\t                if (it.opts.verbose) {\n\t                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n\t                }\n\t                out += ' } ';\n\t              } else {\n\t                out += ' {} ';\n\t              }\n\t              var __err = out;\n\t              out = $$outStack.pop();\n\t              if (!it.compositeRule && $breakOnError) {\n\t                /* istanbul ignore if */\n\t                if (it.async) {\n\t                  out += ' throw new ValidationError([' + (__err) + ']); ';\n\t                } else {\n\t                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n\t                }\n\t              } else {\n\t                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n\t              }\n\t              $errSchemaPath = $currErrSchemaPath;\n\t              it.errorPath = $currentErrorPath;\n\t              out += ' } else { ';\n\t            } else {\n\t              if ($breakOnError) {\n\t                out += ' if ( ' + ($useData) + ' === undefined ';\n\t                if ($ownProperties) {\n\t                  out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n\t                }\n\t                out += ') { ' + ($nextValid) + ' = true; } else { ';\n\t              } else {\n\t                out += ' if (' + ($useData) + ' !== undefined ';\n\t                if ($ownProperties) {\n\t                  out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n\t                }\n\t                out += ' ) { ';\n\t              }\n\t            }\n\t            out += ' ' + ($code) + ' } ';\n\t          }\n\t        }\n\t        if ($breakOnError) {\n\t          out += ' if (' + ($nextValid) + ') { ';\n\t          $closingBraces += '}';\n\t        }\n\t      }\n\t    }\n\t  }\n\t  if ($pPropertyKeys.length) {\n\t    var arr4 = $pPropertyKeys;\n\t    if (arr4) {\n\t      var $pProperty, i4 = -1,\n\t        l4 = arr4.length - 1;\n\t      while (i4 < l4) {\n\t        $pProperty = arr4[i4 += 1];\n\t        var $sch = $pProperties[$pProperty];\n\t        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n\t          $it.schema = $sch;\n\t          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\n\t          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\n\t          if ($ownProperties) {\n\t            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n\t          } else {\n\t            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n\t          }\n\t          out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';\n\t          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n\t          var $passData = $data + '[' + $key + ']';\n\t          $it.dataPathArr[$dataNxt] = $key;\n\t          var $code = it.validate($it);\n\t          $it.baseId = $currentBaseId;\n\t          if (it.util.varOccurences($code, $nextData) < 2) {\n\t            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n\t          } else {\n\t            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n\t          }\n\t          if ($breakOnError) {\n\t            out += ' if (!' + ($nextValid) + ') break; ';\n\t          }\n\t          out += ' } ';\n\t          if ($breakOnError) {\n\t            out += ' else ' + ($nextValid) + ' = true; ';\n\t          }\n\t          out += ' }  ';\n\t          if ($breakOnError) {\n\t            out += ' if (' + ($nextValid) + ') { ';\n\t            $closingBraces += '}';\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t  if ($breakOnError) {\n\t    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n\t  }\n\t  return out;\n\t}\n\treturn properties;\n}\n\nexport { requireProperties as __require };","start":1667202707359,"end":1667202707364,"order":"normal"}]}
