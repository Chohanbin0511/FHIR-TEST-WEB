{"resolvedId":"C:/chohbin/Fhir-Test-Web/src/views/sdkSample/OpenApiView.vue","transforms":[{"name":"vite:load-fallback","result":"<template>\r\n\t<TheViewLayout>\r\n\t\t<template #mainPanel>\r\n\t\t\t<v-container>\r\n\t\t\t\t<h1>OPEN API Sample</h1>\r\n\t\t\t</v-container>\r\n\t\t\t<!----------------------   회원가입 API   ---------------------------->\r\n\t\t\t<v-container>\r\n\t\t\t\t<v-card class=\"ma-2 pa-4\">\r\n\t\t\t\t\t<h2 class=\"mb-2\" style=\"width: 250px\">회원가입 API</h2>\r\n\t\t\t\t\t<v-dialog transition=\"dialog-bottom-transition\">\r\n\t\t\t\t\t\t<template v-slot:activator=\"{ props }\">\r\n\t\t\t\t\t\t\t<v-btn\r\n\t\t\t\t\t\t\t\tv-bind=\"props\"\r\n\t\t\t\t\t\t\t\tclass=\"mb-2 mr-4\"\r\n\t\t\t\t\t\t\t\tv-for=\"item in userPartOpenApiList\"\r\n\t\t\t\t\t\t\t\t:key=\"item\"\r\n\t\t\t\t\t\t\t\t@click=\"item.methodsNm(item.title)\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{{ item.title }}\r\n\t\t\t\t\t\t\t</v-btn>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-slot:default=\"{ isActive }\">\r\n\t\t\t\t\t\t\t<v-card>\r\n\t\t\t\t\t\t\t\t<v-toolbar color=\"primary\" class=\"pl-3\">{{\r\n\t\t\t\t\t\t\t\t\tapiName\r\n\t\t\t\t\t\t\t\t}}</v-toolbar>\r\n\t\t\t\t\t\t\t\t<v-card-text>\r\n\t\t\t\t\t\t\t\t\t<div class=\"pa-2\">{{ apiResult }}</div>\r\n\t\t\t\t\t\t\t\t</v-card-text>\r\n\t\t\t\t\t\t\t\t<v-card-actions class=\"justify-end\">\r\n\t\t\t\t\t\t\t\t\t<v-btn text @click=\"isActive.value = false\">닫기</v-btn>\r\n\t\t\t\t\t\t\t\t</v-card-actions>\r\n\t\t\t\t\t\t\t</v-card>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</v-dialog>\r\n\t\t\t\t</v-card>\r\n\t\t\t</v-container>\r\n\r\n\t\t\t<!----------------------   회원정보관리 API   ---------------------------->\r\n\t\t\t<v-container>\r\n\t\t\t\t<v-card class=\"ma-2 pa-4\">\r\n\t\t\t\t\t<h2 class=\"mb-2\" style=\"width: 250px\">\r\n\t\t\t\t\t\t<v-tooltip activator=\"parent\" location=\"bottom\"\r\n\t\t\t\t\t\t\t>AccessToken 발급 후 코드 저장하여 사용 가능함</v-tooltip\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t회원정보관리 API\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<v-dialog transition=\"dialog-bottom-transition\">\r\n\t\t\t\t\t\t<template v-slot:activator=\"{ props }\">\r\n\t\t\t\t\t\t\t<v-btn\r\n\t\t\t\t\t\t\t\tv-bind=\"props\"\r\n\t\t\t\t\t\t\t\tclass=\"mb-2 mr-4\"\r\n\t\t\t\t\t\t\t\tv-for=\"item in userInfoPartOpenApiList\"\r\n\t\t\t\t\t\t\t\t:key=\"item\"\r\n\t\t\t\t\t\t\t\t@click=\"item.methodsNm(item.title)\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{{ item.title }}\r\n\t\t\t\t\t\t\t</v-btn>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-slot:default=\"{ isActive }\">\r\n\t\t\t\t\t\t\t<v-card>\r\n\t\t\t\t\t\t\t\t<v-toolbar color=\"primary\" class=\"pl-3\">{{\r\n\t\t\t\t\t\t\t\t\tapiName\r\n\t\t\t\t\t\t\t\t}}</v-toolbar>\r\n\t\t\t\t\t\t\t\t<v-card-text>\r\n\t\t\t\t\t\t\t\t\t<div class=\"pa-2\">{{ apiResult }}</div>\r\n\t\t\t\t\t\t\t\t</v-card-text>\r\n\t\t\t\t\t\t\t\t<v-card-actions class=\"justify-end\">\r\n\t\t\t\t\t\t\t\t\t<v-btn text @click=\"isActive.value = false\">닫기</v-btn>\r\n\t\t\t\t\t\t\t\t</v-card-actions>\r\n\t\t\t\t\t\t\t</v-card>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</v-dialog>\r\n\t\t\t\t</v-card>\r\n\t\t\t</v-container>\r\n\t\t\t<!----------------------   건강 예측 API   ---------------------------->\r\n\t\t\t<v-container>\r\n\t\t\t\t<v-card class=\"ma-2 pa-4\">\r\n\t\t\t\t\t<h2 class=\"mb-2\" style=\"width: 250px\">\r\n\t\t\t\t\t\t건강 예측 API\r\n\t\t\t\t\t\t<v-tooltip activator=\"parent\" location=\"bottom\"\r\n\t\t\t\t\t\t\t>AccessToken 발급 후 코드 저장하여 사용 가능함</v-tooltip\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<v-dialog transition=\"dialog-bottom-transition\">\r\n\t\t\t\t\t\t<template v-slot:activator=\"{ props }\">\r\n\t\t\t\t\t\t\t<v-btn\r\n\t\t\t\t\t\t\t\tv-bind=\"props\"\r\n\t\t\t\t\t\t\t\tclass=\"mb-2 mr-4\"\r\n\t\t\t\t\t\t\t\tv-for=\"item in healthPredictOpenApiList\"\r\n\t\t\t\t\t\t\t\t:key=\"item\"\r\n\t\t\t\t\t\t\t\t@click=\"item.methodsNm(item.title)\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{{ item.title }}\r\n\t\t\t\t\t\t\t</v-btn>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-slot:default=\"{ isActive }\">\r\n\t\t\t\t\t\t\t<v-card>\r\n\t\t\t\t\t\t\t\t<v-toolbar color=\"primary\" class=\"pl-3\">{{\r\n\t\t\t\t\t\t\t\t\tapiName\r\n\t\t\t\t\t\t\t\t}}</v-toolbar>\r\n\t\t\t\t\t\t\t\t<v-card-text>\r\n\t\t\t\t\t\t\t\t\t<div class=\"pa-2\">{{ apiResult }}</div>\r\n\t\t\t\t\t\t\t\t</v-card-text>\r\n\t\t\t\t\t\t\t\t<v-card-actions class=\"justify-end\">\r\n\t\t\t\t\t\t\t\t\t<v-btn text @click=\"isActive.value = false\">닫기</v-btn>\r\n\t\t\t\t\t\t\t\t</v-card-actions>\r\n\t\t\t\t\t\t\t</v-card>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</v-dialog>\r\n\t\t\t\t</v-card>\r\n\t\t\t</v-container>\r\n\t\t\t<!----------------------  Blockchain API   ---------------------------->\r\n\t\t\t<v-container>\r\n\t\t\t\t<v-card class=\"ma-2 pa-4\">\r\n\t\t\t\t\t<h2 class=\"mb-2\" style=\"width: 250px\">\r\n\t\t\t\t\t\tBlockchain API\r\n\t\t\t\t\t\t<v-tooltip activator=\"parent\" location=\"bottom\"\r\n\t\t\t\t\t\t\t>AccessToken 발급 후, token과 PatientId를 저장하여 사용\r\n\t\t\t\t\t\t\t가능함</v-tooltip\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<v-dialog transition=\"dialog-bottom-transition\">\r\n\t\t\t\t\t\t<template v-slot:activator=\"{ props }\">\r\n\t\t\t\t\t\t\t<v-btn\r\n\t\t\t\t\t\t\t\tv-bind=\"props\"\r\n\t\t\t\t\t\t\t\tclass=\"mb-2 mr-4\"\r\n\t\t\t\t\t\t\t\tv-for=\"item in blockchainOpenApiList\"\r\n\t\t\t\t\t\t\t\t:key=\"item\"\r\n\t\t\t\t\t\t\t\t@click=\"item.methodsNm(item.title)\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{{ item.title }}\r\n\t\t\t\t\t\t\t</v-btn>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-slot:default=\"{ isActive }\">\r\n\t\t\t\t\t\t\t<v-card>\r\n\t\t\t\t\t\t\t\t<v-toolbar color=\"primary\" class=\"pl-3\">{{\r\n\t\t\t\t\t\t\t\t\tapiName\r\n\t\t\t\t\t\t\t\t}}</v-toolbar>\r\n\t\t\t\t\t\t\t\t<v-card-text>\r\n\t\t\t\t\t\t\t\t\t<div class=\"pa-2\">{{ apiResult }}</div>\r\n\t\t\t\t\t\t\t\t</v-card-text>\r\n\t\t\t\t\t\t\t\t<v-card-actions class=\"justify-end\">\r\n\t\t\t\t\t\t\t\t\t<v-btn text @click=\"isActive.value = false\">닫기</v-btn>\r\n\t\t\t\t\t\t\t\t</v-card-actions>\r\n\t\t\t\t\t\t\t</v-card>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</v-dialog>\r\n\t\t\t\t</v-card>\r\n\t\t\t</v-container>\r\n\t\t\t<!----------------------  기타 API   ---------------------------->\r\n\t\t\t<v-container>\r\n\t\t\t\t<v-card class=\"ma-2 pa-4\">\r\n\t\t\t\t\t<h2 class=\"mb-2\" style=\"width: 250px\">기타 API</h2>\r\n\t\t\t\t\t<v-dialog transition=\"dialog-bottom-transition\">\r\n\t\t\t\t\t\t<template v-slot:activator=\"{ props }\">\r\n\t\t\t\t\t\t\t<v-btn\r\n\t\t\t\t\t\t\t\tv-bind=\"props\"\r\n\t\t\t\t\t\t\t\tclass=\"mb-2 mr-4\"\r\n\t\t\t\t\t\t\t\tv-for=\"item in etcOpenApiList\"\r\n\t\t\t\t\t\t\t\t:key=\"item\"\r\n\t\t\t\t\t\t\t\t@click=\"item.methodsNm(item.title)\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{{ item.title }}\r\n\t\t\t\t\t\t\t</v-btn>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<template v-slot:default=\"{ isActive }\">\r\n\t\t\t\t\t\t\t<v-card>\r\n\t\t\t\t\t\t\t\t<v-toolbar color=\"primary\" class=\"pl-3\">{{\r\n\t\t\t\t\t\t\t\t\tapiName\r\n\t\t\t\t\t\t\t\t}}</v-toolbar>\r\n\t\t\t\t\t\t\t\t<v-card-text>\r\n\t\t\t\t\t\t\t\t\t<div class=\"pa-2\">{{ apiResult }}</div>\r\n\t\t\t\t\t\t\t\t</v-card-text>\r\n\t\t\t\t\t\t\t\t<v-card-actions class=\"justify-end\">\r\n\t\t\t\t\t\t\t\t\t<v-btn text @click=\"isActive.value = false\">닫기</v-btn>\r\n\t\t\t\t\t\t\t\t</v-card-actions>\r\n\t\t\t\t\t\t\t</v-card>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</v-dialog>\r\n\t\t\t\t</v-card>\r\n\t\t\t</v-container>\r\n\t\t</template>\r\n\t</TheViewLayout>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport TheViewLayout from '@/layouts/TheViewLayout.vue';\r\nimport * as OpenAPI from '@/assets/js/sdk/openApi';\r\nimport { useAuthStore } from '@/stores/auth';\r\n\r\nconst oauth = useAuthStore().oauth;\r\nconst userInfo = useAuthStore().userInfo;\r\n\r\n// 회원가입 API, 모바일 앱 버전 API에 필요한 인증정보\r\nconst config = {\r\n\tbaseUrl: 'https://api.redwoodhealth.kr',\r\n\tclient_id: `${import.meta.env.VITE_APP_OAUTH_CLIENT_ID}`,\r\n\tclient_secret: `${import.meta.env.VITE_APP_OAUTH_CLIENT_SECRET}`,\r\n};\r\n\r\nconst apiName = ref(null);\r\nconst apiResult = ref(null);\r\n\r\nconst resetDialogContent = () => {\r\n\tapiName.value = null;\r\n\tapiResult.value = null;\r\n};\r\n///////////////////////////////////////////////////////////////// 회원가입 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 회원 아이디 중복 확인\r\nconst btnCheckExistUserId = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: userInfo.userId,\r\n\t};\r\n\r\n\tOpenAPI.checkExistUserId(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 핸드폰번호 인증(SMS)\r\nconst btnIdentifyMobilePhone = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t};\r\n\r\n\tOpenAPI.identifyMobilePhone(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 플랫폼 약관 목록 조회\r\nconst btnFetchStplat = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchStplat(config)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 신규 회원 가입\r\nconst btnRegister = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${import.meta.env.VITE_APP_OAUTH_CLIENT_ID}`,\r\n\t\tuserId: 'chohbin2',\r\n\t\tuserName: '테스트2',\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t\tbirthday: '2020-06-09',\r\n\t\tweddingAnniversary: '2020-06-09',\r\n\t\tgender: 'M',\r\n\t\temail: 'test@test.com',\r\n\t\tmobilePhone: '01000004249',\r\n\t\tcablePhone: '020000000',\r\n\t\tzip: '07327',\r\n\t\taddress: '서울 영등포구 여의나루로 71 동화빌딩',\r\n\t\tdetailAddress: '502호',\r\n\t\tidLostQuestion: '일하는곳은 어디입니까?',\r\n\t\tidLostAnswer: '디케이아이테크놀로지',\r\n\t\tplatformStplat: [\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '1',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '2',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '3',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '4',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tOpenAPI.register(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 기존 회원 서비스 가입\r\nconst btnRegisterService = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${import.meta.env.VITE_APP_OAUTH_CLIENT_ID}`,\r\n\t\tuserId: 'test',\r\n\t};\r\n\r\n\tOpenAPI.registerService(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 이메일/핸드폰번호로 아이디 찾기\r\nconst btnSearchUserId = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserName: userInfo.userName,\r\n\t\ttype: 'email',\r\n\t\temail: userInfo.email,\r\n\t};\r\n\r\n\tOpenAPI.searchUserId(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 질문/답변으로 아이디 찾기\r\nconst btnSearchUserIdByQuestion = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserName: '테스트사용자',\r\n\t\ttype: 'question',\r\n\t\tidLostQuestion: '일하는곳은 어디입니까?',\r\n\t\tidLostAnswer: '디케이아이테크놀로지',\r\n\t};\r\n\r\n\tOpenAPI.searchUserId(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 이메일/핸드폰번호로 비밀번호 찾기\r\nconst btnSearchPassword = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: userInfo.userId,\r\n\t\ttype: 'mobile',\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t};\r\n\r\n\tOpenAPI.searchPassword(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 인증코드 확인\r\nconst btnCheckAuthCode = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: 'test',\r\n\t\tauthCode: '755xz7',\r\n\t};\r\n\r\n\tOpenAPI.checkAuthCode(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 업데이트 패스워드\r\nconst btnUpdatePassword = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: 'chohbin1',\r\n\t\tauthCode: '755xz7',\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t};\r\n\r\n\tOpenAPI.updatePassword(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst userPartOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '회원 아이디 중복 확인',\r\n\t\tmethodsNm: btnCheckExistUserId,\r\n\t},\r\n\t{\r\n\t\ttitle: '핸드폰번호 인증(SMS)',\r\n\t\tmethodsNm: btnIdentifyMobilePhone,\r\n\t},\r\n\t{\r\n\t\ttitle: '플랫폼 약관 목록 조회',\r\n\t\tmethodsNm: btnFetchStplat,\r\n\t},\r\n\t{\r\n\t\ttitle: '신규 회원가입',\r\n\t\tmethodsNm: btnRegister,\r\n\t},\r\n\t{\r\n\t\ttitle: '기존 회원 서비스 가입',\r\n\t\tmethodsNm: btnRegisterService,\r\n\t},\r\n\t{\r\n\t\ttitle: '이메일/핸드폰번호로 아이디 찾기',\r\n\t\tmethodsNm: btnSearchUserId,\r\n\t},\r\n\t{\r\n\t\ttitle: '질문/답변으로 아이디 찾기',\r\n\t\tmethodsNm: btnSearchUserIdByQuestion,\r\n\t},\r\n\t{\r\n\t\ttitle: '이메일/핸드폰번호로 비밀번호 찾기',\r\n\t\tmethodsNm: btnSearchPassword,\r\n\t},\r\n\t{\r\n\t\ttitle: '인증코드 확인',\r\n\t\tmethodsNm: btnCheckAuthCode,\r\n\t},\r\n\t{\r\n\t\ttitle: '업데이트 패스워드',\r\n\t\tmethodsNm: btnUpdatePassword,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// 회원정보관리 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 회원정보관리 API, 건강 예측 API, Blockchain API에 필요한 인증정보\r\nconst configToken = {\r\n\tbaseUrl: 'https://api.redwoodhealth.kr',\r\n\taccessToken: oauth.accessToken,\r\n};\r\n\r\n// 회원 정보 조회\r\nconst btnFetchUserInfo = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchUserInfo(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 패스워드 확인\r\nconst btnCheckPassword = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t};\r\n\r\n\tOpenAPI.checkPassword(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 수정\r\nconst btnModifyUserInfo = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${import.meta.env.VITE_APP_OAUTH_CLIENT_ID}`,\r\n\t\tuserId: userInfo.userId,\r\n\t\tuserName: '테스트사용자수정',\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t\tbirthday: '2020-06-09',\r\n\t\tweddingAnniversary: '2020-06-09',\r\n\t\tgender: 'M',\r\n\t\temail: 'test@test.com',\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t\tcablePhone: '020000000',\r\n\t\tzip: '07327',\r\n\t\taddress: '서울 영등포구 여의나루로 71 동화빌딩',\r\n\t\tdetailAddress: '905호',\r\n\t\tidLostQuestion: '일하는곳은 어디입니까?',\r\n\t\tidLostAnswer: '디케이아이테크놀로지',\r\n\t};\r\n\r\n\tOpenAPI.modifyUserInfo(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 탈퇴\r\nconst btnUnregister = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${import.meta.env.VITE_APP_OAUTH_CLIENT_ID}`,\r\n\t\treason: '테스트로 인한 회원탈퇴',\r\n\t};\r\n\r\n\tOpenAPI.unregister(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 추가\r\nconst btnAddPHRSharedUser = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tsharedUserId: 'test02',\r\n\t};\r\n\r\n\tOpenAPI.addPHRSharedUser(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 조회\r\nconst btnFetchPHRSharedUserList = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchPHRSharedUserList(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 삭제\r\nconst btnRemovePHRSharedUser = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tsharedUserId: 'test02',\r\n\t};\r\n\r\n\tOpenAPI.removePHRSharedUser(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 변경\r\nconst btnModifyPHRSharedUsers = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tsharedUserIds: ['test02', 'test03'],\r\n\t};\r\n\r\n\tOpenAPI.modifyPHRSharedUsers(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst userInfoPartOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '회원 정보 조회',\r\n\t\tmethodsNm: btnFetchUserInfo,\r\n\t},\r\n\t{\r\n\t\ttitle: '패스워드 확인',\r\n\t\tmethodsNm: btnCheckPassword,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 수정',\r\n\t\tmethodsNm: btnModifyUserInfo,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 탈퇴',\r\n\t\tmethodsNm: btnUnregister,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 추가',\r\n\t\tmethodsNm: btnAddPHRSharedUser,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 조회',\r\n\t\tmethodsNm: btnFetchPHRSharedUserList,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 삭제',\r\n\t\tmethodsNm: btnRemovePHRSharedUser,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 수정',\r\n\t\tmethodsNm: btnModifyPHRSharedUsers,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// 건강예측 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 관상동맥질환 예측\r\nconst btnCoronaryArtery = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [49, 2, 3, 69.566, 226.199556, 0, 172.757878],\r\n\t};\r\n\r\n\tOpenAPI.coronaryArtery(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 당뇨병 질환 예측\r\nconst btnDiabetes = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [\r\n\t\t\t56, 2, 0, 3, 0, 1, 5, 1, 0, 1, 26.613037, 124.023, 175.355477, 129.333,\r\n\t\t\t46.123809,\r\n\t\t],\r\n\t};\r\n\r\n\tOpenAPI.diabetes(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 뇌졸중 질환 예측\r\nconst btnStroke = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [\r\n\t\t\t1.0, 79.0, 0.0, 0.0, 149.3, 53.6, 24.046129, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0,\r\n\t\t\t2.0, 4.0, 1.0, 6.0,\r\n\t\t],\r\n\t};\r\n\r\n\tOpenAPI.stroke(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 신체나이 예측\r\nconst btnBodyAge = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [41, 180.6, 72.8, 118, 79, 92, 14.5],\r\n\t};\r\n\r\n\tOpenAPI.bodyAge(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 동맥경화성 심혈관질환 예측\r\nconst btnASCVD = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [49, 2, 3, 69.566, 226.199556, 0, 172.757878],\r\n\t};\r\n\r\n\tOpenAPI.ASCVD(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 당뇨병 발병 예측\r\nconst btnDiabetesIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_learning: 0,\r\n\t\tb_atypicalantipsy: 0,\r\n\t\tb_manicschiz: 0,\r\n\t\tb_statin: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tfh_diab: 1,\r\n\t\tfbs: 100,\r\n\t\thba1c: 18,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.diabetesIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 심장마비 발병 예측\r\nconst btnHeartAttackIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tdiabetes_cat: 1,\r\n\t\tfh_cvd: 0,\r\n\t\tb_renal: 0,\r\n\t\tb_AF: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tb_migraine: 1,\r\n\t\tb_ra: 0,\r\n\t\tb_sle: 0,\r\n\t\tb_semi: 0,\r\n\t\tb_atypicalantipsy: 0,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_impotence2: 0,\r\n\t\trati: 5,\r\n\t\tsbp: 100,\r\n\t\tsbps5: 20,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.heartAttackIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 11종 암 발병 예측\r\nconst btnCancersIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\talcohol_cat6: 1,\r\n\t\tb_asbestos: 0,\r\n\t\tb_asthma: 0,\r\n\t\tb_barratts: 0,\r\n\t\tb_bloodcancer: 0,\r\n\t\tb_chronicpan: 0,\r\n\t\tb_colitis: 0,\r\n\t\tb_colorectal: 0,\r\n\t\tb_copd: 0,\r\n\t\tb_lungcancer: 0,\r\n\t\tb_manicschiz: 0,\r\n\t\tb_oesgastric: 0,\r\n\t\tb_oralcancer: 0,\r\n\t\tb_pancreascancer: 0,\r\n\t\tb_peptic: 0,\r\n\t\tb_polyp: 0,\r\n\t\tb_prostatecancer: 0,\r\n\t\tb_renalcancer: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_bloodcancer: 0,\r\n\t\tfh_gicancer: 0,\r\n\t\tfh_lungcancer: 0,\r\n\t\tfh_prostatecancer: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.cancersIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 5년내 정맥 혈전 색전증(DVT) 발병 예측\r\nconst btnDvtIn5Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 29,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_CCF: 0,\r\n\t\tb_admit: 0,\r\n\t\tb_antipsychotic: 0,\r\n\t\tb_anycancer: 0,\r\n\t\tb_cop: 0,\r\n\t\tb_copd: 0,\r\n\t\tb_hrt: 0,\r\n\t\tb_ibd: 0,\r\n\t\tb_renal: 0,\r\n\t\tb_tamoxifen: 0,\r\n\t\tb_varicosevein: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.dvtIn5Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 5년내 중증도의 만성 신장 질환(CKD) 발병 예측\r\nconst btnCkdIn5Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 35,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_CCF: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_pvd: 0,\r\n\t\tb_ra: 0,\r\n\t\tb_renalstones: 0,\r\n\t\tb_sle: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_kidney: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.ckdIn5Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 5년내 말기 신부전 신장 질환(ESRD) 발병 예측\r\nconst btnEsrdIn5Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 35,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_CCF: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_pvd: 0,\r\n\t\tb_ra: 0,\r\n\t\tb_renalstones: 0,\r\n\t\tb_sle: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_kidney: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.esrdIn5Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 골다공증 골절 발병 예측\r\nconst btnOsteoporoticFractureIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\talcohol_cat6: 0,\r\n\t\tb_antidepressant: 0,\r\n\t\tb_anycancer: 0,\r\n\t\tb_asthmacopd: 0,\r\n\t\tb_carehome: 0,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_dementia: 0,\r\n\t\tb_endocrine: 0,\r\n\t\tb_epilepsy2: 0,\r\n\t\tb_falls: 0,\r\n\t\tb_fracture4: 0,\r\n\t\tb_hrt_oest: 0,\r\n\t\tb_liver: 0,\r\n\t\tb_malabsorption: 0,\r\n\t\tb_parkinsons: 0,\r\n\t\tb_ra_sle: 0,\r\n\t\tb_renal: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_osteoporosis: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.osteoporoticFractureIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 고관절 골절 발병 예측\r\nconst btnHipFractureIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\talcohol_cat6: 0,\r\n\t\tb_antidepressant: 0,\r\n\t\tb_anycancer: 0,\r\n\t\tb_asthmacopd: 0,\r\n\t\tb_carehome: 0,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_dementia: 0,\r\n\t\tb_endocrine: 0,\r\n\t\tb_epilepsy2: 0,\r\n\t\tb_falls: 0,\r\n\t\tb_fracture4: 0,\r\n\t\tb_hrt_oest: 0,\r\n\t\tb_liver: 0,\r\n\t\tb_parkinsons: 0,\r\n\t\tb_ra_sle: 0,\r\n\t\tb_renal: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_osteoporosis: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.hipFractureIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 사용자의 예측모델별 마지막 예측결과값 조회\r\nconst btnFetchLatestPredict = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 예측모델 아이디\r\n\tconst data = {\r\n\t\tmodelId: '15',\r\n\t};\r\n\r\n\tOpenAPI.fetchLatestPredict(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst healthPredictOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '관상동맥질환 예측',\r\n\t\tmethodsNm: btnCoronaryArtery,\r\n\t},\r\n\t{\r\n\t\ttitle: '당뇨병 질환 예측',\r\n\t\tmethodsNm: btnDiabetes,\r\n\t},\r\n\t{\r\n\t\ttitle: '뇌졸중 질환 예측',\r\n\t\tmethodsNm: btnStroke,\r\n\t},\r\n\t{\r\n\t\ttitle: '신체나이 예측',\r\n\t\tmethodsNm: btnBodyAge,\r\n\t},\r\n\t{\r\n\t\ttitle: '동맥경화성 심혈관질환(ASCVD) 예측',\r\n\t\tmethodsNm: btnASCVD,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 당뇨병 발병 예측',\r\n\t\tmethodsNm: btnDiabetesIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 심장마비 발병 예측',\r\n\t\tmethodsNm: btnHeartAttackIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 11종 암 발병 예측',\r\n\t\tmethodsNm: btnCancersIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '5년내 정맥 혈전 색전증 발병 예측',\r\n\t\tmethodsNm: btnDvtIn5Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '5년내 중증도의 만성 신장 질환 발병 예측',\r\n\t\tmethodsNm: btnCkdIn5Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '5년내 말기 신부전 신장 질환 발병 예측',\r\n\t\tmethodsNm: btnEsrdIn5Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 골다공증 골절 발병 예측',\r\n\t\tmethodsNm: btnOsteoporoticFractureIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 고관절 골절 발병 예측',\r\n\t\tmethodsNm: btnHipFractureIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '사용자의 예측모델별 마지막 예측값 조회',\r\n\t\tmethodsNm: btnFetchLatestPredict,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// Blockchain API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 회원 정보 Block 생성\r\nconst btnCreateBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\turl: 'http://localhost:8080/fhir/Patient/89937',\r\n\t};\r\n\r\n\tOpenAPI.createBlockchain(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// Resource 추가\r\nconst btnAddResource = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\ttype: 'Observation',\r\n\t\turl: 'http://localhost:8080/fhir/Observation/90009',\r\n\t\tlastUpdated: '2020-02-20 23:59:59',\r\n\t};\r\n\r\n\tOpenAPI.addResource(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 Block 수정\r\nconst btnUpdateBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\turl: 'http://localhost:8080/fhir/Patient/89938',\r\n\t};\r\n\r\n\tOpenAPI.updateBlockchain(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 Block 조회\r\nconst btnFetchBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchBlockchain(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 Block 삭제\r\nconst btnDeleteBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.deleteBlockchain(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tconst answer = '블록을 삭제했습니다.';\r\n\t\t\tdocument.getElementById('openAPI_display').value = answer;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst blockchainOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '회원 정보 Block 생성',\r\n\t\tmethodsNm: btnCreateBlockchain,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Resource 추가',\r\n\t\tmethodsNm: btnAddResource,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 Block 수정',\r\n\t\tmethodsNm: btnUpdateBlockchain,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 Block 조회',\r\n\t\tmethodsNm: btnFetchBlockchain,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 Block 삭제',\r\n\t\tmethodsNm: btnDeleteBlockchain,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// 모바일 앱 버전 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 모바일 앱 최신 버전정보 조회\r\nconst btnPHRApp = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tappSn: '1',\r\n\t};\r\n\r\n\tOpenAPI.PHRApp(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n///////////////////////////////////////////////////////////////// 문자 메시지 발송 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 문자 메시지 발송\r\nconst btnSendSMSMsg = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t\tmessage: '안녕하세요.\\n테스트 메시지입니다.',\r\n\t};\r\n\r\n\tOpenAPI.sendSMSMsg(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 유저 문자 메시지 발송\r\nconst btnSendUserSMSMsg = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t\tmessage: '안녕하세요.\\n테스트 메시지입니다.',\r\n\t};\r\n\r\n\tOpenAPI.sendUserSMSMsg(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst etcOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '모바일 앱 최신 버전정보 조회',\r\n\t\tmethodsNm: btnPHRApp,\r\n\t},\r\n\t{\r\n\t\ttitle: '문자 메시지 발송',\r\n\t\tmethodsNm: btnSendSMSMsg,\r\n\t},\r\n\t{\r\n\t\ttitle: '유저 문자 메시지 발송',\r\n\t\tmethodsNm: btnSendUserSMSMsg,\r\n\t},\r\n]);\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","start":1667202701276,"end":1667202702012},{"name":"vite:vue","result":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, mergeProps as _mergeProps, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"OPEN API Sample\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}, \"회원가입 API\", -1)\nconst _hoisted_3 = { class: \"pa-2\" }\nconst _hoisted_4 = {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}\nconst _hoisted_5 = { class: \"pa-2\" }\nconst _hoisted_6 = {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}\nconst _hoisted_7 = { class: \"pa-2\" }\nconst _hoisted_8 = {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}\nconst _hoisted_9 = { class: \"pa-2\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}, \"기타 API\", -1)\nconst _hoisted_11 = { class: \"pa-2\" }\n\nimport { ref } from 'vue';\r\nimport TheViewLayout from '@/layouts/TheViewLayout.vue';\r\nimport * as OpenAPI from '@/assets/js/sdk/openApi';\r\nimport { useAuthStore } from '@/stores/auth';\r\n\r\n\nconst _sfc_main = {\n  __name: 'OpenApiView',\n  setup(__props) {\n\r\nconst oauth = useAuthStore().oauth;\r\nconst userInfo = useAuthStore().userInfo;\r\n\r\n// 회원가입 API, 모바일 앱 버전 API에 필요한 인증정보\r\nconst config = {\r\n\tbaseUrl: 'https://api.redwoodhealth.kr',\r\n\tclient_id: `${import.meta.env.VITE_APP_OAUTH_CLIENT_ID}`,\r\n\tclient_secret: `${import.meta.env.VITE_APP_OAUTH_CLIENT_SECRET}`,\r\n};\r\n\r\nconst apiName = ref(null);\r\nconst apiResult = ref(null);\r\n\r\nconst resetDialogContent = () => {\r\n\tapiName.value = null;\r\n\tapiResult.value = null;\r\n};\r\n///////////////////////////////////////////////////////////////// 회원가입 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 회원 아이디 중복 확인\r\nconst btnCheckExistUserId = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: userInfo.userId,\r\n\t};\r\n\r\n\tOpenAPI.checkExistUserId(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 핸드폰번호 인증(SMS)\r\nconst btnIdentifyMobilePhone = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t};\r\n\r\n\tOpenAPI.identifyMobilePhone(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 플랫폼 약관 목록 조회\r\nconst btnFetchStplat = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchStplat(config)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 신규 회원 가입\r\nconst btnRegister = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${import.meta.env.VITE_APP_OAUTH_CLIENT_ID}`,\r\n\t\tuserId: 'chohbin2',\r\n\t\tuserName: '테스트2',\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t\tbirthday: '2020-06-09',\r\n\t\tweddingAnniversary: '2020-06-09',\r\n\t\tgender: 'M',\r\n\t\temail: 'test@test.com',\r\n\t\tmobilePhone: '01000004249',\r\n\t\tcablePhone: '020000000',\r\n\t\tzip: '07327',\r\n\t\taddress: '서울 영등포구 여의나루로 71 동화빌딩',\r\n\t\tdetailAddress: '502호',\r\n\t\tidLostQuestion: '일하는곳은 어디입니까?',\r\n\t\tidLostAnswer: '디케이아이테크놀로지',\r\n\t\tplatformStplat: [\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '1',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '2',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '3',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '4',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tOpenAPI.register(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 기존 회원 서비스 가입\r\nconst btnRegisterService = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${import.meta.env.VITE_APP_OAUTH_CLIENT_ID}`,\r\n\t\tuserId: 'test',\r\n\t};\r\n\r\n\tOpenAPI.registerService(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 이메일/핸드폰번호로 아이디 찾기\r\nconst btnSearchUserId = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserName: userInfo.userName,\r\n\t\ttype: 'email',\r\n\t\temail: userInfo.email,\r\n\t};\r\n\r\n\tOpenAPI.searchUserId(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 질문/답변으로 아이디 찾기\r\nconst btnSearchUserIdByQuestion = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserName: '테스트사용자',\r\n\t\ttype: 'question',\r\n\t\tidLostQuestion: '일하는곳은 어디입니까?',\r\n\t\tidLostAnswer: '디케이아이테크놀로지',\r\n\t};\r\n\r\n\tOpenAPI.searchUserId(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 이메일/핸드폰번호로 비밀번호 찾기\r\nconst btnSearchPassword = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: userInfo.userId,\r\n\t\ttype: 'mobile',\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t};\r\n\r\n\tOpenAPI.searchPassword(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 인증코드 확인\r\nconst btnCheckAuthCode = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: 'test',\r\n\t\tauthCode: '755xz7',\r\n\t};\r\n\r\n\tOpenAPI.checkAuthCode(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 업데이트 패스워드\r\nconst btnUpdatePassword = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: 'chohbin1',\r\n\t\tauthCode: '755xz7',\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t};\r\n\r\n\tOpenAPI.updatePassword(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst userPartOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '회원 아이디 중복 확인',\r\n\t\tmethodsNm: btnCheckExistUserId,\r\n\t},\r\n\t{\r\n\t\ttitle: '핸드폰번호 인증(SMS)',\r\n\t\tmethodsNm: btnIdentifyMobilePhone,\r\n\t},\r\n\t{\r\n\t\ttitle: '플랫폼 약관 목록 조회',\r\n\t\tmethodsNm: btnFetchStplat,\r\n\t},\r\n\t{\r\n\t\ttitle: '신규 회원가입',\r\n\t\tmethodsNm: btnRegister,\r\n\t},\r\n\t{\r\n\t\ttitle: '기존 회원 서비스 가입',\r\n\t\tmethodsNm: btnRegisterService,\r\n\t},\r\n\t{\r\n\t\ttitle: '이메일/핸드폰번호로 아이디 찾기',\r\n\t\tmethodsNm: btnSearchUserId,\r\n\t},\r\n\t{\r\n\t\ttitle: '질문/답변으로 아이디 찾기',\r\n\t\tmethodsNm: btnSearchUserIdByQuestion,\r\n\t},\r\n\t{\r\n\t\ttitle: '이메일/핸드폰번호로 비밀번호 찾기',\r\n\t\tmethodsNm: btnSearchPassword,\r\n\t},\r\n\t{\r\n\t\ttitle: '인증코드 확인',\r\n\t\tmethodsNm: btnCheckAuthCode,\r\n\t},\r\n\t{\r\n\t\ttitle: '업데이트 패스워드',\r\n\t\tmethodsNm: btnUpdatePassword,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// 회원정보관리 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 회원정보관리 API, 건강 예측 API, Blockchain API에 필요한 인증정보\r\nconst configToken = {\r\n\tbaseUrl: 'https://api.redwoodhealth.kr',\r\n\taccessToken: oauth.accessToken,\r\n};\r\n\r\n// 회원 정보 조회\r\nconst btnFetchUserInfo = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchUserInfo(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 패스워드 확인\r\nconst btnCheckPassword = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t};\r\n\r\n\tOpenAPI.checkPassword(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 수정\r\nconst btnModifyUserInfo = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${import.meta.env.VITE_APP_OAUTH_CLIENT_ID}`,\r\n\t\tuserId: userInfo.userId,\r\n\t\tuserName: '테스트사용자수정',\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t\tbirthday: '2020-06-09',\r\n\t\tweddingAnniversary: '2020-06-09',\r\n\t\tgender: 'M',\r\n\t\temail: 'test@test.com',\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t\tcablePhone: '020000000',\r\n\t\tzip: '07327',\r\n\t\taddress: '서울 영등포구 여의나루로 71 동화빌딩',\r\n\t\tdetailAddress: '905호',\r\n\t\tidLostQuestion: '일하는곳은 어디입니까?',\r\n\t\tidLostAnswer: '디케이아이테크놀로지',\r\n\t};\r\n\r\n\tOpenAPI.modifyUserInfo(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 탈퇴\r\nconst btnUnregister = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${import.meta.env.VITE_APP_OAUTH_CLIENT_ID}`,\r\n\t\treason: '테스트로 인한 회원탈퇴',\r\n\t};\r\n\r\n\tOpenAPI.unregister(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 추가\r\nconst btnAddPHRSharedUser = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tsharedUserId: 'test02',\r\n\t};\r\n\r\n\tOpenAPI.addPHRSharedUser(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 조회\r\nconst btnFetchPHRSharedUserList = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchPHRSharedUserList(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 삭제\r\nconst btnRemovePHRSharedUser = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tsharedUserId: 'test02',\r\n\t};\r\n\r\n\tOpenAPI.removePHRSharedUser(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 변경\r\nconst btnModifyPHRSharedUsers = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tsharedUserIds: ['test02', 'test03'],\r\n\t};\r\n\r\n\tOpenAPI.modifyPHRSharedUsers(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst userInfoPartOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '회원 정보 조회',\r\n\t\tmethodsNm: btnFetchUserInfo,\r\n\t},\r\n\t{\r\n\t\ttitle: '패스워드 확인',\r\n\t\tmethodsNm: btnCheckPassword,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 수정',\r\n\t\tmethodsNm: btnModifyUserInfo,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 탈퇴',\r\n\t\tmethodsNm: btnUnregister,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 추가',\r\n\t\tmethodsNm: btnAddPHRSharedUser,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 조회',\r\n\t\tmethodsNm: btnFetchPHRSharedUserList,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 삭제',\r\n\t\tmethodsNm: btnRemovePHRSharedUser,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 수정',\r\n\t\tmethodsNm: btnModifyPHRSharedUsers,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// 건강예측 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 관상동맥질환 예측\r\nconst btnCoronaryArtery = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [49, 2, 3, 69.566, 226.199556, 0, 172.757878],\r\n\t};\r\n\r\n\tOpenAPI.coronaryArtery(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 당뇨병 질환 예측\r\nconst btnDiabetes = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [\r\n\t\t\t56, 2, 0, 3, 0, 1, 5, 1, 0, 1, 26.613037, 124.023, 175.355477, 129.333,\r\n\t\t\t46.123809,\r\n\t\t],\r\n\t};\r\n\r\n\tOpenAPI.diabetes(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 뇌졸중 질환 예측\r\nconst btnStroke = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [\r\n\t\t\t1.0, 79.0, 0.0, 0.0, 149.3, 53.6, 24.046129, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0,\r\n\t\t\t2.0, 4.0, 1.0, 6.0,\r\n\t\t],\r\n\t};\r\n\r\n\tOpenAPI.stroke(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 신체나이 예측\r\nconst btnBodyAge = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [41, 180.6, 72.8, 118, 79, 92, 14.5],\r\n\t};\r\n\r\n\tOpenAPI.bodyAge(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 동맥경화성 심혈관질환 예측\r\nconst btnASCVD = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [49, 2, 3, 69.566, 226.199556, 0, 172.757878],\r\n\t};\r\n\r\n\tOpenAPI.ASCVD(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 당뇨병 발병 예측\r\nconst btnDiabetesIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_learning: 0,\r\n\t\tb_atypicalantipsy: 0,\r\n\t\tb_manicschiz: 0,\r\n\t\tb_statin: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tfh_diab: 1,\r\n\t\tfbs: 100,\r\n\t\thba1c: 18,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.diabetesIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 심장마비 발병 예측\r\nconst btnHeartAttackIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tdiabetes_cat: 1,\r\n\t\tfh_cvd: 0,\r\n\t\tb_renal: 0,\r\n\t\tb_AF: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tb_migraine: 1,\r\n\t\tb_ra: 0,\r\n\t\tb_sle: 0,\r\n\t\tb_semi: 0,\r\n\t\tb_atypicalantipsy: 0,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_impotence2: 0,\r\n\t\trati: 5,\r\n\t\tsbp: 100,\r\n\t\tsbps5: 20,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.heartAttackIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 11종 암 발병 예측\r\nconst btnCancersIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\talcohol_cat6: 1,\r\n\t\tb_asbestos: 0,\r\n\t\tb_asthma: 0,\r\n\t\tb_barratts: 0,\r\n\t\tb_bloodcancer: 0,\r\n\t\tb_chronicpan: 0,\r\n\t\tb_colitis: 0,\r\n\t\tb_colorectal: 0,\r\n\t\tb_copd: 0,\r\n\t\tb_lungcancer: 0,\r\n\t\tb_manicschiz: 0,\r\n\t\tb_oesgastric: 0,\r\n\t\tb_oralcancer: 0,\r\n\t\tb_pancreascancer: 0,\r\n\t\tb_peptic: 0,\r\n\t\tb_polyp: 0,\r\n\t\tb_prostatecancer: 0,\r\n\t\tb_renalcancer: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_bloodcancer: 0,\r\n\t\tfh_gicancer: 0,\r\n\t\tfh_lungcancer: 0,\r\n\t\tfh_prostatecancer: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.cancersIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 5년내 정맥 혈전 색전증(DVT) 발병 예측\r\nconst btnDvtIn5Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 29,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_CCF: 0,\r\n\t\tb_admit: 0,\r\n\t\tb_antipsychotic: 0,\r\n\t\tb_anycancer: 0,\r\n\t\tb_cop: 0,\r\n\t\tb_copd: 0,\r\n\t\tb_hrt: 0,\r\n\t\tb_ibd: 0,\r\n\t\tb_renal: 0,\r\n\t\tb_tamoxifen: 0,\r\n\t\tb_varicosevein: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.dvtIn5Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 5년내 중증도의 만성 신장 질환(CKD) 발병 예측\r\nconst btnCkdIn5Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 35,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_CCF: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_pvd: 0,\r\n\t\tb_ra: 0,\r\n\t\tb_renalstones: 0,\r\n\t\tb_sle: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_kidney: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.ckdIn5Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 5년내 말기 신부전 신장 질환(ESRD) 발병 예측\r\nconst btnEsrdIn5Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 35,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_CCF: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_pvd: 0,\r\n\t\tb_ra: 0,\r\n\t\tb_renalstones: 0,\r\n\t\tb_sle: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_kidney: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.esrdIn5Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 골다공증 골절 발병 예측\r\nconst btnOsteoporoticFractureIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\talcohol_cat6: 0,\r\n\t\tb_antidepressant: 0,\r\n\t\tb_anycancer: 0,\r\n\t\tb_asthmacopd: 0,\r\n\t\tb_carehome: 0,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_dementia: 0,\r\n\t\tb_endocrine: 0,\r\n\t\tb_epilepsy2: 0,\r\n\t\tb_falls: 0,\r\n\t\tb_fracture4: 0,\r\n\t\tb_hrt_oest: 0,\r\n\t\tb_liver: 0,\r\n\t\tb_malabsorption: 0,\r\n\t\tb_parkinsons: 0,\r\n\t\tb_ra_sle: 0,\r\n\t\tb_renal: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_osteoporosis: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.osteoporoticFractureIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 고관절 골절 발병 예측\r\nconst btnHipFractureIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\talcohol_cat6: 0,\r\n\t\tb_antidepressant: 0,\r\n\t\tb_anycancer: 0,\r\n\t\tb_asthmacopd: 0,\r\n\t\tb_carehome: 0,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_dementia: 0,\r\n\t\tb_endocrine: 0,\r\n\t\tb_epilepsy2: 0,\r\n\t\tb_falls: 0,\r\n\t\tb_fracture4: 0,\r\n\t\tb_hrt_oest: 0,\r\n\t\tb_liver: 0,\r\n\t\tb_parkinsons: 0,\r\n\t\tb_ra_sle: 0,\r\n\t\tb_renal: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_osteoporosis: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.hipFractureIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 사용자의 예측모델별 마지막 예측결과값 조회\r\nconst btnFetchLatestPredict = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 예측모델 아이디\r\n\tconst data = {\r\n\t\tmodelId: '15',\r\n\t};\r\n\r\n\tOpenAPI.fetchLatestPredict(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst healthPredictOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '관상동맥질환 예측',\r\n\t\tmethodsNm: btnCoronaryArtery,\r\n\t},\r\n\t{\r\n\t\ttitle: '당뇨병 질환 예측',\r\n\t\tmethodsNm: btnDiabetes,\r\n\t},\r\n\t{\r\n\t\ttitle: '뇌졸중 질환 예측',\r\n\t\tmethodsNm: btnStroke,\r\n\t},\r\n\t{\r\n\t\ttitle: '신체나이 예측',\r\n\t\tmethodsNm: btnBodyAge,\r\n\t},\r\n\t{\r\n\t\ttitle: '동맥경화성 심혈관질환(ASCVD) 예측',\r\n\t\tmethodsNm: btnASCVD,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 당뇨병 발병 예측',\r\n\t\tmethodsNm: btnDiabetesIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 심장마비 발병 예측',\r\n\t\tmethodsNm: btnHeartAttackIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 11종 암 발병 예측',\r\n\t\tmethodsNm: btnCancersIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '5년내 정맥 혈전 색전증 발병 예측',\r\n\t\tmethodsNm: btnDvtIn5Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '5년내 중증도의 만성 신장 질환 발병 예측',\r\n\t\tmethodsNm: btnCkdIn5Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '5년내 말기 신부전 신장 질환 발병 예측',\r\n\t\tmethodsNm: btnEsrdIn5Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 골다공증 골절 발병 예측',\r\n\t\tmethodsNm: btnOsteoporoticFractureIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 고관절 골절 발병 예측',\r\n\t\tmethodsNm: btnHipFractureIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '사용자의 예측모델별 마지막 예측값 조회',\r\n\t\tmethodsNm: btnFetchLatestPredict,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// Blockchain API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 회원 정보 Block 생성\r\nconst btnCreateBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\turl: 'http://localhost:8080/fhir/Patient/89937',\r\n\t};\r\n\r\n\tOpenAPI.createBlockchain(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// Resource 추가\r\nconst btnAddResource = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\ttype: 'Observation',\r\n\t\turl: 'http://localhost:8080/fhir/Observation/90009',\r\n\t\tlastUpdated: '2020-02-20 23:59:59',\r\n\t};\r\n\r\n\tOpenAPI.addResource(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 Block 수정\r\nconst btnUpdateBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\turl: 'http://localhost:8080/fhir/Patient/89938',\r\n\t};\r\n\r\n\tOpenAPI.updateBlockchain(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 Block 조회\r\nconst btnFetchBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchBlockchain(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 Block 삭제\r\nconst btnDeleteBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.deleteBlockchain(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tconst answer = '블록을 삭제했습니다.';\r\n\t\t\tdocument.getElementById('openAPI_display').value = answer;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst blockchainOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '회원 정보 Block 생성',\r\n\t\tmethodsNm: btnCreateBlockchain,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Resource 추가',\r\n\t\tmethodsNm: btnAddResource,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 Block 수정',\r\n\t\tmethodsNm: btnUpdateBlockchain,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 Block 조회',\r\n\t\tmethodsNm: btnFetchBlockchain,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 Block 삭제',\r\n\t\tmethodsNm: btnDeleteBlockchain,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// 모바일 앱 버전 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 모바일 앱 최신 버전정보 조회\r\nconst btnPHRApp = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tappSn: '1',\r\n\t};\r\n\r\n\tOpenAPI.PHRApp(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n///////////////////////////////////////////////////////////////// 문자 메시지 발송 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 문자 메시지 발송\r\nconst btnSendSMSMsg = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t\tmessage: '안녕하세요.\\n테스트 메시지입니다.',\r\n\t};\r\n\r\n\tOpenAPI.sendSMSMsg(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 유저 문자 메시지 발송\r\nconst btnSendUserSMSMsg = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t\tmessage: '안녕하세요.\\n테스트 메시지입니다.',\r\n\t};\r\n\r\n\tOpenAPI.sendUserSMSMsg(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst etcOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '모바일 앱 최신 버전정보 조회',\r\n\t\tmethodsNm: btnPHRApp,\r\n\t},\r\n\t{\r\n\t\ttitle: '문자 메시지 발송',\r\n\t\tmethodsNm: btnSendSMSMsg,\r\n\t},\r\n\t{\r\n\t\ttitle: '유저 문자 메시지 발송',\r\n\t\tmethodsNm: btnSendUserSMSMsg,\r\n\t},\r\n]);\r\n\nreturn (_ctx, _cache) => {\n  const _component_v_container = _resolveComponent(\"v-container\")\n  const _component_v_btn = _resolveComponent(\"v-btn\")\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\")\n  const _component_v_card_text = _resolveComponent(\"v-card-text\")\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\")\n  const _component_v_card = _resolveComponent(\"v-card\")\n  const _component_v_dialog = _resolveComponent(\"v-dialog\")\n  const _component_v_tooltip = _resolveComponent(\"v-tooltip\")\n\n  return (_openBlock(), _createBlock(TheViewLayout, null, {\n    mainPanel: _withCtx(() => [\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _hoisted_1\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _hoisted_2,\n              _createVNode(_component_v_dialog, { transition: \"dialog-bottom-transition\" }, {\n                activator: _withCtx(({ props }) => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userPartOpenApiList.value, (item) => {\n                    return (_openBlock(), _createBlock(_component_v_btn, _mergeProps(props, {\n                      class: \"mb-2 mr-4\",\n                      key: item,\n                      onClick: $event => (item.methodsNm(item.title))\n                    }), {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.title), 1)\n                      ]),\n                      _: 2\n                    }, 1040, [\"onClick\"]))\n                  }), 128))\n                ]),\n                default: _withCtx(({ isActive }) => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_toolbar, {\n                        color: \"primary\",\n                        class: \"pl-3\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(apiName.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", _hoisted_3, _toDisplayString(apiResult.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_actions, { class: \"justify-end\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_btn, {\n                            text: \"\",\n                            onClick: $event => (isActive.value = false)\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"닫기\")\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _createElementVNode(\"h2\", _hoisted_4, [\n                _createVNode(_component_v_tooltip, {\n                  activator: \"parent\",\n                  location: \"bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"AccessToken 발급 후 코드 저장하여 사용 가능함\")\n                  ]),\n                  _: 1\n                }),\n                _createTextVNode(\" 회원정보관리 API \")\n              ]),\n              _createVNode(_component_v_dialog, { transition: \"dialog-bottom-transition\" }, {\n                activator: _withCtx(({ props }) => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userInfoPartOpenApiList.value, (item) => {\n                    return (_openBlock(), _createBlock(_component_v_btn, _mergeProps(props, {\n                      class: \"mb-2 mr-4\",\n                      key: item,\n                      onClick: $event => (item.methodsNm(item.title))\n                    }), {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.title), 1)\n                      ]),\n                      _: 2\n                    }, 1040, [\"onClick\"]))\n                  }), 128))\n                ]),\n                default: _withCtx(({ isActive }) => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_toolbar, {\n                        color: \"primary\",\n                        class: \"pl-3\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(apiName.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", _hoisted_5, _toDisplayString(apiResult.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_actions, { class: \"justify-end\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_btn, {\n                            text: \"\",\n                            onClick: $event => (isActive.value = false)\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"닫기\")\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _createElementVNode(\"h2\", _hoisted_6, [\n                _createTextVNode(\" 건강 예측 API \"),\n                _createVNode(_component_v_tooltip, {\n                  activator: \"parent\",\n                  location: \"bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"AccessToken 발급 후 코드 저장하여 사용 가능함\")\n                  ]),\n                  _: 1\n                })\n              ]),\n              _createVNode(_component_v_dialog, { transition: \"dialog-bottom-transition\" }, {\n                activator: _withCtx(({ props }) => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(healthPredictOpenApiList.value, (item) => {\n                    return (_openBlock(), _createBlock(_component_v_btn, _mergeProps(props, {\n                      class: \"mb-2 mr-4\",\n                      key: item,\n                      onClick: $event => (item.methodsNm(item.title))\n                    }), {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.title), 1)\n                      ]),\n                      _: 2\n                    }, 1040, [\"onClick\"]))\n                  }), 128))\n                ]),\n                default: _withCtx(({ isActive }) => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_toolbar, {\n                        color: \"primary\",\n                        class: \"pl-3\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(apiName.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", _hoisted_7, _toDisplayString(apiResult.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_actions, { class: \"justify-end\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_btn, {\n                            text: \"\",\n                            onClick: $event => (isActive.value = false)\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"닫기\")\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _createElementVNode(\"h2\", _hoisted_8, [\n                _createTextVNode(\" Blockchain API \"),\n                _createVNode(_component_v_tooltip, {\n                  activator: \"parent\",\n                  location: \"bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"AccessToken 발급 후, token과 PatientId를 저장하여 사용 가능함\")\n                  ]),\n                  _: 1\n                })\n              ]),\n              _createVNode(_component_v_dialog, { transition: \"dialog-bottom-transition\" }, {\n                activator: _withCtx(({ props }) => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(blockchainOpenApiList.value, (item) => {\n                    return (_openBlock(), _createBlock(_component_v_btn, _mergeProps(props, {\n                      class: \"mb-2 mr-4\",\n                      key: item,\n                      onClick: $event => (item.methodsNm(item.title))\n                    }), {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.title), 1)\n                      ]),\n                      _: 2\n                    }, 1040, [\"onClick\"]))\n                  }), 128))\n                ]),\n                default: _withCtx(({ isActive }) => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_toolbar, {\n                        color: \"primary\",\n                        class: \"pl-3\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(apiName.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", _hoisted_9, _toDisplayString(apiResult.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_actions, { class: \"justify-end\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_btn, {\n                            text: \"\",\n                            onClick: $event => (isActive.value = false)\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"닫기\")\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _hoisted_10,\n              _createVNode(_component_v_dialog, { transition: \"dialog-bottom-transition\" }, {\n                activator: _withCtx(({ props }) => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(etcOpenApiList.value, (item) => {\n                    return (_openBlock(), _createBlock(_component_v_btn, _mergeProps(props, {\n                      class: \"mb-2 mr-4\",\n                      key: item,\n                      onClick: $event => (item.methodsNm(item.title))\n                    }), {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.title), 1)\n                      ]),\n                      _: 2\n                    }, 1040, [\"onClick\"]))\n                  }), 128))\n                ]),\n                default: _withCtx(({ isActive }) => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_toolbar, {\n                        color: \"primary\",\n                        class: \"pl-3\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(apiName.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", _hoisted_11, _toDisplayString(apiResult.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_actions, { class: \"justify-end\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_btn, {\n                            text: \"\",\n                            onClick: $event => (isActive.value = false)\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"닫기\")\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}\n}\n\n}\n\n\n\nexport default _sfc_main","start":1667202702012,"end":1667202702098,"order":"normal"},{"name":"vuetify:import","result":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, mergeProps as _mergeProps, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"OPEN API Sample\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}, \"회원가입 API\", -1)\nconst _hoisted_3 = { class: \"pa-2\" }\nconst _hoisted_4 = {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}\nconst _hoisted_5 = { class: \"pa-2\" }\nconst _hoisted_6 = {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}\nconst _hoisted_7 = { class: \"pa-2\" }\nconst _hoisted_8 = {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}\nconst _hoisted_9 = { class: \"pa-2\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}, \"기타 API\", -1)\nconst _hoisted_11 = { class: \"pa-2\" }\n\nimport { ref } from 'vue';\r\nimport TheViewLayout from '@/layouts/TheViewLayout.vue';\r\nimport * as OpenAPI from '@/assets/js/sdk/openApi';\r\nimport { useAuthStore } from '@/stores/auth';\r\n\r\n\nconst _sfc_main = {\n  __name: 'OpenApiView',\n  setup(__props) {\n\r\nconst oauth = useAuthStore().oauth;\r\nconst userInfo = useAuthStore().userInfo;\r\n\r\n// 회원가입 API, 모바일 앱 버전 API에 필요한 인증정보\r\nconst config = {\r\n\tbaseUrl: 'https://api.redwoodhealth.kr',\r\n\tclient_id: `${import.meta.env.VITE_APP_OAUTH_CLIENT_ID}`,\r\n\tclient_secret: `${import.meta.env.VITE_APP_OAUTH_CLIENT_SECRET}`,\r\n};\r\n\r\nconst apiName = ref(null);\r\nconst apiResult = ref(null);\r\n\r\nconst resetDialogContent = () => {\r\n\tapiName.value = null;\r\n\tapiResult.value = null;\r\n};\r\n///////////////////////////////////////////////////////////////// 회원가입 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 회원 아이디 중복 확인\r\nconst btnCheckExistUserId = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: userInfo.userId,\r\n\t};\r\n\r\n\tOpenAPI.checkExistUserId(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 핸드폰번호 인증(SMS)\r\nconst btnIdentifyMobilePhone = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t};\r\n\r\n\tOpenAPI.identifyMobilePhone(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 플랫폼 약관 목록 조회\r\nconst btnFetchStplat = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchStplat(config)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 신규 회원 가입\r\nconst btnRegister = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${import.meta.env.VITE_APP_OAUTH_CLIENT_ID}`,\r\n\t\tuserId: 'chohbin2',\r\n\t\tuserName: '테스트2',\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t\tbirthday: '2020-06-09',\r\n\t\tweddingAnniversary: '2020-06-09',\r\n\t\tgender: 'M',\r\n\t\temail: 'test@test.com',\r\n\t\tmobilePhone: '01000004249',\r\n\t\tcablePhone: '020000000',\r\n\t\tzip: '07327',\r\n\t\taddress: '서울 영등포구 여의나루로 71 동화빌딩',\r\n\t\tdetailAddress: '502호',\r\n\t\tidLostQuestion: '일하는곳은 어디입니까?',\r\n\t\tidLostAnswer: '디케이아이테크놀로지',\r\n\t\tplatformStplat: [\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '1',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '2',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '3',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '4',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tOpenAPI.register(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 기존 회원 서비스 가입\r\nconst btnRegisterService = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${import.meta.env.VITE_APP_OAUTH_CLIENT_ID}`,\r\n\t\tuserId: 'test',\r\n\t};\r\n\r\n\tOpenAPI.registerService(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 이메일/핸드폰번호로 아이디 찾기\r\nconst btnSearchUserId = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserName: userInfo.userName,\r\n\t\ttype: 'email',\r\n\t\temail: userInfo.email,\r\n\t};\r\n\r\n\tOpenAPI.searchUserId(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 질문/답변으로 아이디 찾기\r\nconst btnSearchUserIdByQuestion = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserName: '테스트사용자',\r\n\t\ttype: 'question',\r\n\t\tidLostQuestion: '일하는곳은 어디입니까?',\r\n\t\tidLostAnswer: '디케이아이테크놀로지',\r\n\t};\r\n\r\n\tOpenAPI.searchUserId(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 이메일/핸드폰번호로 비밀번호 찾기\r\nconst btnSearchPassword = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: userInfo.userId,\r\n\t\ttype: 'mobile',\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t};\r\n\r\n\tOpenAPI.searchPassword(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 인증코드 확인\r\nconst btnCheckAuthCode = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: 'test',\r\n\t\tauthCode: '755xz7',\r\n\t};\r\n\r\n\tOpenAPI.checkAuthCode(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 업데이트 패스워드\r\nconst btnUpdatePassword = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: 'chohbin1',\r\n\t\tauthCode: '755xz7',\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t};\r\n\r\n\tOpenAPI.updatePassword(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst userPartOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '회원 아이디 중복 확인',\r\n\t\tmethodsNm: btnCheckExistUserId,\r\n\t},\r\n\t{\r\n\t\ttitle: '핸드폰번호 인증(SMS)',\r\n\t\tmethodsNm: btnIdentifyMobilePhone,\r\n\t},\r\n\t{\r\n\t\ttitle: '플랫폼 약관 목록 조회',\r\n\t\tmethodsNm: btnFetchStplat,\r\n\t},\r\n\t{\r\n\t\ttitle: '신규 회원가입',\r\n\t\tmethodsNm: btnRegister,\r\n\t},\r\n\t{\r\n\t\ttitle: '기존 회원 서비스 가입',\r\n\t\tmethodsNm: btnRegisterService,\r\n\t},\r\n\t{\r\n\t\ttitle: '이메일/핸드폰번호로 아이디 찾기',\r\n\t\tmethodsNm: btnSearchUserId,\r\n\t},\r\n\t{\r\n\t\ttitle: '질문/답변으로 아이디 찾기',\r\n\t\tmethodsNm: btnSearchUserIdByQuestion,\r\n\t},\r\n\t{\r\n\t\ttitle: '이메일/핸드폰번호로 비밀번호 찾기',\r\n\t\tmethodsNm: btnSearchPassword,\r\n\t},\r\n\t{\r\n\t\ttitle: '인증코드 확인',\r\n\t\tmethodsNm: btnCheckAuthCode,\r\n\t},\r\n\t{\r\n\t\ttitle: '업데이트 패스워드',\r\n\t\tmethodsNm: btnUpdatePassword,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// 회원정보관리 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 회원정보관리 API, 건강 예측 API, Blockchain API에 필요한 인증정보\r\nconst configToken = {\r\n\tbaseUrl: 'https://api.redwoodhealth.kr',\r\n\taccessToken: oauth.accessToken,\r\n};\r\n\r\n// 회원 정보 조회\r\nconst btnFetchUserInfo = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchUserInfo(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 패스워드 확인\r\nconst btnCheckPassword = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t};\r\n\r\n\tOpenAPI.checkPassword(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 수정\r\nconst btnModifyUserInfo = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${import.meta.env.VITE_APP_OAUTH_CLIENT_ID}`,\r\n\t\tuserId: userInfo.userId,\r\n\t\tuserName: '테스트사용자수정',\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t\tbirthday: '2020-06-09',\r\n\t\tweddingAnniversary: '2020-06-09',\r\n\t\tgender: 'M',\r\n\t\temail: 'test@test.com',\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t\tcablePhone: '020000000',\r\n\t\tzip: '07327',\r\n\t\taddress: '서울 영등포구 여의나루로 71 동화빌딩',\r\n\t\tdetailAddress: '905호',\r\n\t\tidLostQuestion: '일하는곳은 어디입니까?',\r\n\t\tidLostAnswer: '디케이아이테크놀로지',\r\n\t};\r\n\r\n\tOpenAPI.modifyUserInfo(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 탈퇴\r\nconst btnUnregister = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${import.meta.env.VITE_APP_OAUTH_CLIENT_ID}`,\r\n\t\treason: '테스트로 인한 회원탈퇴',\r\n\t};\r\n\r\n\tOpenAPI.unregister(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 추가\r\nconst btnAddPHRSharedUser = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tsharedUserId: 'test02',\r\n\t};\r\n\r\n\tOpenAPI.addPHRSharedUser(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 조회\r\nconst btnFetchPHRSharedUserList = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchPHRSharedUserList(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 삭제\r\nconst btnRemovePHRSharedUser = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tsharedUserId: 'test02',\r\n\t};\r\n\r\n\tOpenAPI.removePHRSharedUser(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 변경\r\nconst btnModifyPHRSharedUsers = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tsharedUserIds: ['test02', 'test03'],\r\n\t};\r\n\r\n\tOpenAPI.modifyPHRSharedUsers(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst userInfoPartOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '회원 정보 조회',\r\n\t\tmethodsNm: btnFetchUserInfo,\r\n\t},\r\n\t{\r\n\t\ttitle: '패스워드 확인',\r\n\t\tmethodsNm: btnCheckPassword,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 수정',\r\n\t\tmethodsNm: btnModifyUserInfo,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 탈퇴',\r\n\t\tmethodsNm: btnUnregister,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 추가',\r\n\t\tmethodsNm: btnAddPHRSharedUser,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 조회',\r\n\t\tmethodsNm: btnFetchPHRSharedUserList,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 삭제',\r\n\t\tmethodsNm: btnRemovePHRSharedUser,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 수정',\r\n\t\tmethodsNm: btnModifyPHRSharedUsers,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// 건강예측 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 관상동맥질환 예측\r\nconst btnCoronaryArtery = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [49, 2, 3, 69.566, 226.199556, 0, 172.757878],\r\n\t};\r\n\r\n\tOpenAPI.coronaryArtery(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 당뇨병 질환 예측\r\nconst btnDiabetes = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [\r\n\t\t\t56, 2, 0, 3, 0, 1, 5, 1, 0, 1, 26.613037, 124.023, 175.355477, 129.333,\r\n\t\t\t46.123809,\r\n\t\t],\r\n\t};\r\n\r\n\tOpenAPI.diabetes(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 뇌졸중 질환 예측\r\nconst btnStroke = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [\r\n\t\t\t1.0, 79.0, 0.0, 0.0, 149.3, 53.6, 24.046129, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0,\r\n\t\t\t2.0, 4.0, 1.0, 6.0,\r\n\t\t],\r\n\t};\r\n\r\n\tOpenAPI.stroke(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 신체나이 예측\r\nconst btnBodyAge = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [41, 180.6, 72.8, 118, 79, 92, 14.5],\r\n\t};\r\n\r\n\tOpenAPI.bodyAge(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 동맥경화성 심혈관질환 예측\r\nconst btnASCVD = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [49, 2, 3, 69.566, 226.199556, 0, 172.757878],\r\n\t};\r\n\r\n\tOpenAPI.ASCVD(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 당뇨병 발병 예측\r\nconst btnDiabetesIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_learning: 0,\r\n\t\tb_atypicalantipsy: 0,\r\n\t\tb_manicschiz: 0,\r\n\t\tb_statin: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tfh_diab: 1,\r\n\t\tfbs: 100,\r\n\t\thba1c: 18,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.diabetesIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 심장마비 발병 예측\r\nconst btnHeartAttackIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tdiabetes_cat: 1,\r\n\t\tfh_cvd: 0,\r\n\t\tb_renal: 0,\r\n\t\tb_AF: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tb_migraine: 1,\r\n\t\tb_ra: 0,\r\n\t\tb_sle: 0,\r\n\t\tb_semi: 0,\r\n\t\tb_atypicalantipsy: 0,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_impotence2: 0,\r\n\t\trati: 5,\r\n\t\tsbp: 100,\r\n\t\tsbps5: 20,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.heartAttackIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 11종 암 발병 예측\r\nconst btnCancersIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\talcohol_cat6: 1,\r\n\t\tb_asbestos: 0,\r\n\t\tb_asthma: 0,\r\n\t\tb_barratts: 0,\r\n\t\tb_bloodcancer: 0,\r\n\t\tb_chronicpan: 0,\r\n\t\tb_colitis: 0,\r\n\t\tb_colorectal: 0,\r\n\t\tb_copd: 0,\r\n\t\tb_lungcancer: 0,\r\n\t\tb_manicschiz: 0,\r\n\t\tb_oesgastric: 0,\r\n\t\tb_oralcancer: 0,\r\n\t\tb_pancreascancer: 0,\r\n\t\tb_peptic: 0,\r\n\t\tb_polyp: 0,\r\n\t\tb_prostatecancer: 0,\r\n\t\tb_renalcancer: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_bloodcancer: 0,\r\n\t\tfh_gicancer: 0,\r\n\t\tfh_lungcancer: 0,\r\n\t\tfh_prostatecancer: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.cancersIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 5년내 정맥 혈전 색전증(DVT) 발병 예측\r\nconst btnDvtIn5Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 29,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_CCF: 0,\r\n\t\tb_admit: 0,\r\n\t\tb_antipsychotic: 0,\r\n\t\tb_anycancer: 0,\r\n\t\tb_cop: 0,\r\n\t\tb_copd: 0,\r\n\t\tb_hrt: 0,\r\n\t\tb_ibd: 0,\r\n\t\tb_renal: 0,\r\n\t\tb_tamoxifen: 0,\r\n\t\tb_varicosevein: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.dvtIn5Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 5년내 중증도의 만성 신장 질환(CKD) 발병 예측\r\nconst btnCkdIn5Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 35,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_CCF: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_pvd: 0,\r\n\t\tb_ra: 0,\r\n\t\tb_renalstones: 0,\r\n\t\tb_sle: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_kidney: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.ckdIn5Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 5년내 말기 신부전 신장 질환(ESRD) 발병 예측\r\nconst btnEsrdIn5Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 35,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_CCF: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_pvd: 0,\r\n\t\tb_ra: 0,\r\n\t\tb_renalstones: 0,\r\n\t\tb_sle: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_kidney: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.esrdIn5Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 골다공증 골절 발병 예측\r\nconst btnOsteoporoticFractureIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\talcohol_cat6: 0,\r\n\t\tb_antidepressant: 0,\r\n\t\tb_anycancer: 0,\r\n\t\tb_asthmacopd: 0,\r\n\t\tb_carehome: 0,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_dementia: 0,\r\n\t\tb_endocrine: 0,\r\n\t\tb_epilepsy2: 0,\r\n\t\tb_falls: 0,\r\n\t\tb_fracture4: 0,\r\n\t\tb_hrt_oest: 0,\r\n\t\tb_liver: 0,\r\n\t\tb_malabsorption: 0,\r\n\t\tb_parkinsons: 0,\r\n\t\tb_ra_sle: 0,\r\n\t\tb_renal: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_osteoporosis: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.osteoporoticFractureIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 고관절 골절 발병 예측\r\nconst btnHipFractureIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\talcohol_cat6: 0,\r\n\t\tb_antidepressant: 0,\r\n\t\tb_anycancer: 0,\r\n\t\tb_asthmacopd: 0,\r\n\t\tb_carehome: 0,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_dementia: 0,\r\n\t\tb_endocrine: 0,\r\n\t\tb_epilepsy2: 0,\r\n\t\tb_falls: 0,\r\n\t\tb_fracture4: 0,\r\n\t\tb_hrt_oest: 0,\r\n\t\tb_liver: 0,\r\n\t\tb_parkinsons: 0,\r\n\t\tb_ra_sle: 0,\r\n\t\tb_renal: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_osteoporosis: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.hipFractureIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 사용자의 예측모델별 마지막 예측결과값 조회\r\nconst btnFetchLatestPredict = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 예측모델 아이디\r\n\tconst data = {\r\n\t\tmodelId: '15',\r\n\t};\r\n\r\n\tOpenAPI.fetchLatestPredict(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst healthPredictOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '관상동맥질환 예측',\r\n\t\tmethodsNm: btnCoronaryArtery,\r\n\t},\r\n\t{\r\n\t\ttitle: '당뇨병 질환 예측',\r\n\t\tmethodsNm: btnDiabetes,\r\n\t},\r\n\t{\r\n\t\ttitle: '뇌졸중 질환 예측',\r\n\t\tmethodsNm: btnStroke,\r\n\t},\r\n\t{\r\n\t\ttitle: '신체나이 예측',\r\n\t\tmethodsNm: btnBodyAge,\r\n\t},\r\n\t{\r\n\t\ttitle: '동맥경화성 심혈관질환(ASCVD) 예측',\r\n\t\tmethodsNm: btnASCVD,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 당뇨병 발병 예측',\r\n\t\tmethodsNm: btnDiabetesIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 심장마비 발병 예측',\r\n\t\tmethodsNm: btnHeartAttackIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 11종 암 발병 예측',\r\n\t\tmethodsNm: btnCancersIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '5년내 정맥 혈전 색전증 발병 예측',\r\n\t\tmethodsNm: btnDvtIn5Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '5년내 중증도의 만성 신장 질환 발병 예측',\r\n\t\tmethodsNm: btnCkdIn5Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '5년내 말기 신부전 신장 질환 발병 예측',\r\n\t\tmethodsNm: btnEsrdIn5Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 골다공증 골절 발병 예측',\r\n\t\tmethodsNm: btnOsteoporoticFractureIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 고관절 골절 발병 예측',\r\n\t\tmethodsNm: btnHipFractureIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '사용자의 예측모델별 마지막 예측값 조회',\r\n\t\tmethodsNm: btnFetchLatestPredict,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// Blockchain API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 회원 정보 Block 생성\r\nconst btnCreateBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\turl: 'http://localhost:8080/fhir/Patient/89937',\r\n\t};\r\n\r\n\tOpenAPI.createBlockchain(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// Resource 추가\r\nconst btnAddResource = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\ttype: 'Observation',\r\n\t\turl: 'http://localhost:8080/fhir/Observation/90009',\r\n\t\tlastUpdated: '2020-02-20 23:59:59',\r\n\t};\r\n\r\n\tOpenAPI.addResource(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 Block 수정\r\nconst btnUpdateBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\turl: 'http://localhost:8080/fhir/Patient/89938',\r\n\t};\r\n\r\n\tOpenAPI.updateBlockchain(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 Block 조회\r\nconst btnFetchBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchBlockchain(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 Block 삭제\r\nconst btnDeleteBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.deleteBlockchain(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tconst answer = '블록을 삭제했습니다.';\r\n\t\t\tdocument.getElementById('openAPI_display').value = answer;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst blockchainOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '회원 정보 Block 생성',\r\n\t\tmethodsNm: btnCreateBlockchain,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Resource 추가',\r\n\t\tmethodsNm: btnAddResource,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 Block 수정',\r\n\t\tmethodsNm: btnUpdateBlockchain,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 Block 조회',\r\n\t\tmethodsNm: btnFetchBlockchain,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 Block 삭제',\r\n\t\tmethodsNm: btnDeleteBlockchain,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// 모바일 앱 버전 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 모바일 앱 최신 버전정보 조회\r\nconst btnPHRApp = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tappSn: '1',\r\n\t};\r\n\r\n\tOpenAPI.PHRApp(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n///////////////////////////////////////////////////////////////// 문자 메시지 발송 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 문자 메시지 발송\r\nconst btnSendSMSMsg = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t\tmessage: '안녕하세요.\\n테스트 메시지입니다.',\r\n\t};\r\n\r\n\tOpenAPI.sendSMSMsg(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 유저 문자 메시지 발송\r\nconst btnSendUserSMSMsg = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t\tmessage: '안녕하세요.\\n테스트 메시지입니다.',\r\n\t};\r\n\r\n\tOpenAPI.sendUserSMSMsg(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst etcOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '모바일 앱 최신 버전정보 조회',\r\n\t\tmethodsNm: btnPHRApp,\r\n\t},\r\n\t{\r\n\t\ttitle: '문자 메시지 발송',\r\n\t\tmethodsNm: btnSendSMSMsg,\r\n\t},\r\n\t{\r\n\t\ttitle: '유저 문자 메시지 발송',\r\n\t\tmethodsNm: btnSendUserSMSMsg,\r\n\t},\r\n]);\r\n\nreturn (_ctx, _cache) => {\n                                                                 \n                                                     \n                                                             \n                                                                 \n                                                                       \n                                                       \n                                                           \n                                                             \n\n  return (_openBlock(), _createBlock(TheViewLayout, null, {\n    mainPanel: _withCtx(() => [\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _hoisted_1\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _hoisted_2,\n              _createVNode(_component_v_dialog, { transition: \"dialog-bottom-transition\" }, {\n                activator: _withCtx(({ props }) => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userPartOpenApiList.value, (item) => {\n                    return (_openBlock(), _createBlock(_component_v_btn, _mergeProps(props, {\n                      class: \"mb-2 mr-4\",\n                      key: item,\n                      onClick: $event => (item.methodsNm(item.title))\n                    }), {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.title), 1)\n                      ]),\n                      _: 2\n                    }, 1040, [\"onClick\"]))\n                  }), 128))\n                ]),\n                default: _withCtx(({ isActive }) => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_toolbar, {\n                        color: \"primary\",\n                        class: \"pl-3\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(apiName.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", _hoisted_3, _toDisplayString(apiResult.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_actions, { class: \"justify-end\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_btn, {\n                            text: \"\",\n                            onClick: $event => (isActive.value = false)\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"닫기\")\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _createElementVNode(\"h2\", _hoisted_4, [\n                _createVNode(_component_v_tooltip, {\n                  activator: \"parent\",\n                  location: \"bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"AccessToken 발급 후 코드 저장하여 사용 가능함\")\n                  ]),\n                  _: 1\n                }),\n                _createTextVNode(\" 회원정보관리 API \")\n              ]),\n              _createVNode(_component_v_dialog, { transition: \"dialog-bottom-transition\" }, {\n                activator: _withCtx(({ props }) => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userInfoPartOpenApiList.value, (item) => {\n                    return (_openBlock(), _createBlock(_component_v_btn, _mergeProps(props, {\n                      class: \"mb-2 mr-4\",\n                      key: item,\n                      onClick: $event => (item.methodsNm(item.title))\n                    }), {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.title), 1)\n                      ]),\n                      _: 2\n                    }, 1040, [\"onClick\"]))\n                  }), 128))\n                ]),\n                default: _withCtx(({ isActive }) => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_toolbar, {\n                        color: \"primary\",\n                        class: \"pl-3\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(apiName.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", _hoisted_5, _toDisplayString(apiResult.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_actions, { class: \"justify-end\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_btn, {\n                            text: \"\",\n                            onClick: $event => (isActive.value = false)\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"닫기\")\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _createElementVNode(\"h2\", _hoisted_6, [\n                _createTextVNode(\" 건강 예측 API \"),\n                _createVNode(_component_v_tooltip, {\n                  activator: \"parent\",\n                  location: \"bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"AccessToken 발급 후 코드 저장하여 사용 가능함\")\n                  ]),\n                  _: 1\n                })\n              ]),\n              _createVNode(_component_v_dialog, { transition: \"dialog-bottom-transition\" }, {\n                activator: _withCtx(({ props }) => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(healthPredictOpenApiList.value, (item) => {\n                    return (_openBlock(), _createBlock(_component_v_btn, _mergeProps(props, {\n                      class: \"mb-2 mr-4\",\n                      key: item,\n                      onClick: $event => (item.methodsNm(item.title))\n                    }), {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.title), 1)\n                      ]),\n                      _: 2\n                    }, 1040, [\"onClick\"]))\n                  }), 128))\n                ]),\n                default: _withCtx(({ isActive }) => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_toolbar, {\n                        color: \"primary\",\n                        class: \"pl-3\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(apiName.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", _hoisted_7, _toDisplayString(apiResult.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_actions, { class: \"justify-end\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_btn, {\n                            text: \"\",\n                            onClick: $event => (isActive.value = false)\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"닫기\")\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _createElementVNode(\"h2\", _hoisted_8, [\n                _createTextVNode(\" Blockchain API \"),\n                _createVNode(_component_v_tooltip, {\n                  activator: \"parent\",\n                  location: \"bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"AccessToken 발급 후, token과 PatientId를 저장하여 사용 가능함\")\n                  ]),\n                  _: 1\n                })\n              ]),\n              _createVNode(_component_v_dialog, { transition: \"dialog-bottom-transition\" }, {\n                activator: _withCtx(({ props }) => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(blockchainOpenApiList.value, (item) => {\n                    return (_openBlock(), _createBlock(_component_v_btn, _mergeProps(props, {\n                      class: \"mb-2 mr-4\",\n                      key: item,\n                      onClick: $event => (item.methodsNm(item.title))\n                    }), {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.title), 1)\n                      ]),\n                      _: 2\n                    }, 1040, [\"onClick\"]))\n                  }), 128))\n                ]),\n                default: _withCtx(({ isActive }) => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_toolbar, {\n                        color: \"primary\",\n                        class: \"pl-3\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(apiName.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", _hoisted_9, _toDisplayString(apiResult.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_actions, { class: \"justify-end\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_btn, {\n                            text: \"\",\n                            onClick: $event => (isActive.value = false)\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"닫기\")\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _hoisted_10,\n              _createVNode(_component_v_dialog, { transition: \"dialog-bottom-transition\" }, {\n                activator: _withCtx(({ props }) => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(etcOpenApiList.value, (item) => {\n                    return (_openBlock(), _createBlock(_component_v_btn, _mergeProps(props, {\n                      class: \"mb-2 mr-4\",\n                      key: item,\n                      onClick: $event => (item.methodsNm(item.title))\n                    }), {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.title), 1)\n                      ]),\n                      _: 2\n                    }, 1040, [\"onClick\"]))\n                  }), 128))\n                ]),\n                default: _withCtx(({ isActive }) => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_toolbar, {\n                        color: \"primary\",\n                        class: \"pl-3\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(apiName.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", _hoisted_11, _toDisplayString(apiResult.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_actions, { class: \"justify-end\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_btn, {\n                            text: \"\",\n                            onClick: $event => (isActive.value = false)\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"닫기\")\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}\n}\n\n}\n\n\n\nexport default _sfc_main\n\n/* Vuetify */\nimport { VBtn as _component_v_btn } from \"vuetify/lib/components/VBtn/index.mjs\"\nimport { VCardText as _component_v_card_text, VCardActions as _component_v_card_actions, VCard as _component_v_card } from \"vuetify/lib/components/VCard/index.mjs\"\nimport { VDialog as _component_v_dialog } from \"vuetify/lib/components/VDialog/index.mjs\"\nimport { VContainer as _component_v_container } from \"vuetify/lib/components/VGrid/index.mjs\"\nimport { VToolbar as _component_v_toolbar } from \"vuetify/lib/components/VToolbar/index.mjs\"\nimport { VTooltip as _component_v_tooltip } from \"vuetify/lib/components/VTooltip/index.mjs\"\n\n","start":1667202702098,"end":1667202702099,"order":"normal"},{"name":"vite:define","result":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, mergeProps as _mergeProps, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"OPEN API Sample\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}, \"회원가입 API\", -1)\nconst _hoisted_3 = { class: \"pa-2\" }\nconst _hoisted_4 = {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}\nconst _hoisted_5 = { class: \"pa-2\" }\nconst _hoisted_6 = {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}\nconst _hoisted_7 = { class: \"pa-2\" }\nconst _hoisted_8 = {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}\nconst _hoisted_9 = { class: \"pa-2\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"mb-2\",\n  style: {\"width\":\"250px\"}\n}, \"기타 API\", -1)\nconst _hoisted_11 = { class: \"pa-2\" }\n\nimport { ref } from 'vue';\r\nimport TheViewLayout from '@/layouts/TheViewLayout.vue';\r\nimport * as OpenAPI from '@/assets/js/sdk/openApi';\r\nimport { useAuthStore } from '@/stores/auth';\r\n\r\n\nconst _sfc_main = {\n  __name: 'OpenApiView',\n  setup(__props) {\n\r\nconst oauth = useAuthStore().oauth;\r\nconst userInfo = useAuthStore().userInfo;\r\n\r\n// 회원가입 API, 모바일 앱 버전 API에 필요한 인증정보\r\nconst config = {\r\n\tbaseUrl: 'https://api.redwoodhealth.kr',\r\n\tclient_id: `${\"chohbinTest\"}`,\r\n\tclient_secret: `${\"92613dab-3cda-469c-b117-b703c47cf820\"}`,\r\n};\r\n\r\nconst apiName = ref(null);\r\nconst apiResult = ref(null);\r\n\r\nconst resetDialogContent = () => {\r\n\tapiName.value = null;\r\n\tapiResult.value = null;\r\n};\r\n///////////////////////////////////////////////////////////////// 회원가입 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 회원 아이디 중복 확인\r\nconst btnCheckExistUserId = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: userInfo.userId,\r\n\t};\r\n\r\n\tOpenAPI.checkExistUserId(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 핸드폰번호 인증(SMS)\r\nconst btnIdentifyMobilePhone = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t};\r\n\r\n\tOpenAPI.identifyMobilePhone(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 플랫폼 약관 목록 조회\r\nconst btnFetchStplat = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchStplat(config)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 신규 회원 가입\r\nconst btnRegister = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${\"chohbinTest\"}`,\r\n\t\tuserId: 'chohbin2',\r\n\t\tuserName: '테스트2',\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t\tbirthday: '2020-06-09',\r\n\t\tweddingAnniversary: '2020-06-09',\r\n\t\tgender: 'M',\r\n\t\temail: 'test@test.com',\r\n\t\tmobilePhone: '01000004249',\r\n\t\tcablePhone: '020000000',\r\n\t\tzip: '07327',\r\n\t\taddress: '서울 영등포구 여의나루로 71 동화빌딩',\r\n\t\tdetailAddress: '502호',\r\n\t\tidLostQuestion: '일하는곳은 어디입니까?',\r\n\t\tidLostAnswer: '디케이아이테크놀로지',\r\n\t\tplatformStplat: [\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '1',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '2',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '3',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tstplatSn: '4',\r\n\t\t\t\tagreeYn: 'Y',\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tOpenAPI.register(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 기존 회원 서비스 가입\r\nconst btnRegisterService = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${\"chohbinTest\"}`,\r\n\t\tuserId: 'test',\r\n\t};\r\n\r\n\tOpenAPI.registerService(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 이메일/핸드폰번호로 아이디 찾기\r\nconst btnSearchUserId = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserName: userInfo.userName,\r\n\t\ttype: 'email',\r\n\t\temail: userInfo.email,\r\n\t};\r\n\r\n\tOpenAPI.searchUserId(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 질문/답변으로 아이디 찾기\r\nconst btnSearchUserIdByQuestion = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserName: '테스트사용자',\r\n\t\ttype: 'question',\r\n\t\tidLostQuestion: '일하는곳은 어디입니까?',\r\n\t\tidLostAnswer: '디케이아이테크놀로지',\r\n\t};\r\n\r\n\tOpenAPI.searchUserId(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 이메일/핸드폰번호로 비밀번호 찾기\r\nconst btnSearchPassword = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: userInfo.userId,\r\n\t\ttype: 'mobile',\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t};\r\n\r\n\tOpenAPI.searchPassword(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 인증코드 확인\r\nconst btnCheckAuthCode = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: 'test',\r\n\t\tauthCode: '755xz7',\r\n\t};\r\n\r\n\tOpenAPI.checkAuthCode(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 업데이트 패스워드\r\nconst btnUpdatePassword = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tuserId: 'chohbin1',\r\n\t\tauthCode: '755xz7',\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t};\r\n\r\n\tOpenAPI.updatePassword(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst userPartOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '회원 아이디 중복 확인',\r\n\t\tmethodsNm: btnCheckExistUserId,\r\n\t},\r\n\t{\r\n\t\ttitle: '핸드폰번호 인증(SMS)',\r\n\t\tmethodsNm: btnIdentifyMobilePhone,\r\n\t},\r\n\t{\r\n\t\ttitle: '플랫폼 약관 목록 조회',\r\n\t\tmethodsNm: btnFetchStplat,\r\n\t},\r\n\t{\r\n\t\ttitle: '신규 회원가입',\r\n\t\tmethodsNm: btnRegister,\r\n\t},\r\n\t{\r\n\t\ttitle: '기존 회원 서비스 가입',\r\n\t\tmethodsNm: btnRegisterService,\r\n\t},\r\n\t{\r\n\t\ttitle: '이메일/핸드폰번호로 아이디 찾기',\r\n\t\tmethodsNm: btnSearchUserId,\r\n\t},\r\n\t{\r\n\t\ttitle: '질문/답변으로 아이디 찾기',\r\n\t\tmethodsNm: btnSearchUserIdByQuestion,\r\n\t},\r\n\t{\r\n\t\ttitle: '이메일/핸드폰번호로 비밀번호 찾기',\r\n\t\tmethodsNm: btnSearchPassword,\r\n\t},\r\n\t{\r\n\t\ttitle: '인증코드 확인',\r\n\t\tmethodsNm: btnCheckAuthCode,\r\n\t},\r\n\t{\r\n\t\ttitle: '업데이트 패스워드',\r\n\t\tmethodsNm: btnUpdatePassword,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// 회원정보관리 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 회원정보관리 API, 건강 예측 API, Blockchain API에 필요한 인증정보\r\nconst configToken = {\r\n\tbaseUrl: 'https://api.redwoodhealth.kr',\r\n\taccessToken: oauth.accessToken,\r\n};\r\n\r\n// 회원 정보 조회\r\nconst btnFetchUserInfo = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchUserInfo(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 패스워드 확인\r\nconst btnCheckPassword = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t};\r\n\r\n\tOpenAPI.checkPassword(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 수정\r\nconst btnModifyUserInfo = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${\"chohbinTest\"}`,\r\n\t\tuserId: userInfo.userId,\r\n\t\tuserName: '테스트사용자수정',\r\n\t\tpassword:\r\n\t\t\t'2fa1ecf9826474fe8e18a96441c94a500cd968454eeb05ed056d0918e19cd118',\r\n\t\tbirthday: '2020-06-09',\r\n\t\tweddingAnniversary: '2020-06-09',\r\n\t\tgender: 'M',\r\n\t\temail: 'test@test.com',\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t\tcablePhone: '020000000',\r\n\t\tzip: '07327',\r\n\t\taddress: '서울 영등포구 여의나루로 71 동화빌딩',\r\n\t\tdetailAddress: '905호',\r\n\t\tidLostQuestion: '일하는곳은 어디입니까?',\r\n\t\tidLostAnswer: '디케이아이테크놀로지',\r\n\t};\r\n\r\n\tOpenAPI.modifyUserInfo(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 탈퇴\r\nconst btnUnregister = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tserviceId: `${\"chohbinTest\"}`,\r\n\t\treason: '테스트로 인한 회원탈퇴',\r\n\t};\r\n\r\n\tOpenAPI.unregister(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 추가\r\nconst btnAddPHRSharedUser = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tsharedUserId: 'test02',\r\n\t};\r\n\r\n\tOpenAPI.addPHRSharedUser(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 조회\r\nconst btnFetchPHRSharedUserList = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchPHRSharedUserList(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 삭제\r\nconst btnRemovePHRSharedUser = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tsharedUserId: 'test02',\r\n\t};\r\n\r\n\tOpenAPI.removePHRSharedUser(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// PHR 공유자 변경\r\nconst btnModifyPHRSharedUsers = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tsharedUserIds: ['test02', 'test03'],\r\n\t};\r\n\r\n\tOpenAPI.modifyPHRSharedUsers(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst userInfoPartOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '회원 정보 조회',\r\n\t\tmethodsNm: btnFetchUserInfo,\r\n\t},\r\n\t{\r\n\t\ttitle: '패스워드 확인',\r\n\t\tmethodsNm: btnCheckPassword,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 수정',\r\n\t\tmethodsNm: btnModifyUserInfo,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 탈퇴',\r\n\t\tmethodsNm: btnUnregister,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 추가',\r\n\t\tmethodsNm: btnAddPHRSharedUser,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 조회',\r\n\t\tmethodsNm: btnFetchPHRSharedUserList,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 삭제',\r\n\t\tmethodsNm: btnRemovePHRSharedUser,\r\n\t},\r\n\t{\r\n\t\ttitle: 'PHR 공유자 수정',\r\n\t\tmethodsNm: btnModifyPHRSharedUsers,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// 건강예측 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 관상동맥질환 예측\r\nconst btnCoronaryArtery = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [49, 2, 3, 69.566, 226.199556, 0, 172.757878],\r\n\t};\r\n\r\n\tOpenAPI.coronaryArtery(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 당뇨병 질환 예측\r\nconst btnDiabetes = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [\r\n\t\t\t56, 2, 0, 3, 0, 1, 5, 1, 0, 1, 26.613037, 124.023, 175.355477, 129.333,\r\n\t\t\t46.123809,\r\n\t\t],\r\n\t};\r\n\r\n\tOpenAPI.diabetes(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 뇌졸중 질환 예측\r\nconst btnStroke = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [\r\n\t\t\t1.0, 79.0, 0.0, 0.0, 149.3, 53.6, 24.046129, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0,\r\n\t\t\t2.0, 4.0, 1.0, 6.0,\r\n\t\t],\r\n\t};\r\n\r\n\tOpenAPI.stroke(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 신체나이 예측\r\nconst btnBodyAge = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [41, 180.6, 72.8, 118, 79, 92, 14.5],\r\n\t};\r\n\r\n\tOpenAPI.bodyAge(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 동맥경화성 심혈관질환 예측\r\nconst btnASCVD = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tparams: [49, 2, 3, 69.566, 226.199556, 0, 172.757878],\r\n\t};\r\n\r\n\tOpenAPI.ASCVD(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 당뇨병 발병 예측\r\nconst btnDiabetesIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_learning: 0,\r\n\t\tb_atypicalantipsy: 0,\r\n\t\tb_manicschiz: 0,\r\n\t\tb_statin: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tfh_diab: 1,\r\n\t\tfbs: 100,\r\n\t\thba1c: 18,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.diabetesIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 심장마비 발병 예측\r\nconst btnHeartAttackIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tdiabetes_cat: 1,\r\n\t\tfh_cvd: 0,\r\n\t\tb_renal: 0,\r\n\t\tb_AF: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tb_migraine: 1,\r\n\t\tb_ra: 0,\r\n\t\tb_sle: 0,\r\n\t\tb_semi: 0,\r\n\t\tb_atypicalantipsy: 0,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_impotence2: 0,\r\n\t\trati: 5,\r\n\t\tsbp: 100,\r\n\t\tsbps5: 20,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.heartAttackIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 11종 암 발병 예측\r\nconst btnCancersIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\talcohol_cat6: 1,\r\n\t\tb_asbestos: 0,\r\n\t\tb_asthma: 0,\r\n\t\tb_barratts: 0,\r\n\t\tb_bloodcancer: 0,\r\n\t\tb_chronicpan: 0,\r\n\t\tb_colitis: 0,\r\n\t\tb_colorectal: 0,\r\n\t\tb_copd: 0,\r\n\t\tb_lungcancer: 0,\r\n\t\tb_manicschiz: 0,\r\n\t\tb_oesgastric: 0,\r\n\t\tb_oralcancer: 0,\r\n\t\tb_pancreascancer: 0,\r\n\t\tb_peptic: 0,\r\n\t\tb_polyp: 0,\r\n\t\tb_prostatecancer: 0,\r\n\t\tb_renalcancer: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_bloodcancer: 0,\r\n\t\tfh_gicancer: 0,\r\n\t\tfh_lungcancer: 0,\r\n\t\tfh_prostatecancer: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.cancersIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 5년내 정맥 혈전 색전증(DVT) 발병 예측\r\nconst btnDvtIn5Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 29,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_CCF: 0,\r\n\t\tb_admit: 0,\r\n\t\tb_antipsychotic: 0,\r\n\t\tb_anycancer: 0,\r\n\t\tb_cop: 0,\r\n\t\tb_copd: 0,\r\n\t\tb_hrt: 0,\r\n\t\tb_ibd: 0,\r\n\t\tb_renal: 0,\r\n\t\tb_tamoxifen: 0,\r\n\t\tb_varicosevein: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.dvtIn5Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 5년내 중증도의 만성 신장 질환(CKD) 발병 예측\r\nconst btnCkdIn5Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 35,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_CCF: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_pvd: 0,\r\n\t\tb_ra: 0,\r\n\t\tb_renalstones: 0,\r\n\t\tb_sle: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_kidney: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.ckdIn5Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 5년내 말기 신부전 신장 질환(ESRD) 발병 예측\r\nconst btnEsrdIn5Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 35,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\tb_CCF: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_pvd: 0,\r\n\t\tb_ra: 0,\r\n\t\tb_renalstones: 0,\r\n\t\tb_sle: 0,\r\n\t\tb_treatedhyp: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_kidney: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.esrdIn5Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 골다공증 골절 발병 예측\r\nconst btnOsteoporoticFractureIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\talcohol_cat6: 0,\r\n\t\tb_antidepressant: 0,\r\n\t\tb_anycancer: 0,\r\n\t\tb_asthmacopd: 0,\r\n\t\tb_carehome: 0,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_dementia: 0,\r\n\t\tb_endocrine: 0,\r\n\t\tb_epilepsy2: 0,\r\n\t\tb_falls: 0,\r\n\t\tb_fracture4: 0,\r\n\t\tb_hrt_oest: 0,\r\n\t\tb_liver: 0,\r\n\t\tb_malabsorption: 0,\r\n\t\tb_parkinsons: 0,\r\n\t\tb_ra_sle: 0,\r\n\t\tb_renal: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_osteoporosis: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.osteoporoticFractureIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 10년내 고관절 골절 발병 예측\r\nconst btnHipFractureIn10Years = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 남성 데이터\r\n\tconst data = {\r\n\t\tage: 30,\r\n\t\tgender: 1,\r\n\t\tsmoke_cat: 1,\r\n\t\talcohol_cat6: 0,\r\n\t\tb_antidepressant: 0,\r\n\t\tb_anycancer: 0,\r\n\t\tb_asthmacopd: 0,\r\n\t\tb_carehome: 0,\r\n\t\tb_corticosteroids: 0,\r\n\t\tb_cvd: 0,\r\n\t\tb_dementia: 0,\r\n\t\tb_endocrine: 0,\r\n\t\tb_epilepsy2: 0,\r\n\t\tb_falls: 0,\r\n\t\tb_fracture4: 0,\r\n\t\tb_hrt_oest: 0,\r\n\t\tb_liver: 0,\r\n\t\tb_parkinsons: 0,\r\n\t\tb_ra_sle: 0,\r\n\t\tb_renal: 0,\r\n\t\tdiabetes_cat: 0,\r\n\t\tfh_osteoporosis: 0,\r\n\t\theight: 180,\r\n\t\tweight: 78,\r\n\t};\r\n\r\n\tOpenAPI.hipFractureIn10Years(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 사용자의 예측모델별 마지막 예측결과값 조회\r\nconst btnFetchLatestPredict = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\t// 예측모델 아이디\r\n\tconst data = {\r\n\t\tmodelId: '15',\r\n\t};\r\n\r\n\tOpenAPI.fetchLatestPredict(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst healthPredictOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '관상동맥질환 예측',\r\n\t\tmethodsNm: btnCoronaryArtery,\r\n\t},\r\n\t{\r\n\t\ttitle: '당뇨병 질환 예측',\r\n\t\tmethodsNm: btnDiabetes,\r\n\t},\r\n\t{\r\n\t\ttitle: '뇌졸중 질환 예측',\r\n\t\tmethodsNm: btnStroke,\r\n\t},\r\n\t{\r\n\t\ttitle: '신체나이 예측',\r\n\t\tmethodsNm: btnBodyAge,\r\n\t},\r\n\t{\r\n\t\ttitle: '동맥경화성 심혈관질환(ASCVD) 예측',\r\n\t\tmethodsNm: btnASCVD,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 당뇨병 발병 예측',\r\n\t\tmethodsNm: btnDiabetesIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 심장마비 발병 예측',\r\n\t\tmethodsNm: btnHeartAttackIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 11종 암 발병 예측',\r\n\t\tmethodsNm: btnCancersIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '5년내 정맥 혈전 색전증 발병 예측',\r\n\t\tmethodsNm: btnDvtIn5Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '5년내 중증도의 만성 신장 질환 발병 예측',\r\n\t\tmethodsNm: btnCkdIn5Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '5년내 말기 신부전 신장 질환 발병 예측',\r\n\t\tmethodsNm: btnEsrdIn5Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 골다공증 골절 발병 예측',\r\n\t\tmethodsNm: btnOsteoporoticFractureIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '10년내 고관절 골절 발병 예측',\r\n\t\tmethodsNm: btnHipFractureIn10Years,\r\n\t},\r\n\t{\r\n\t\ttitle: '사용자의 예측모델별 마지막 예측값 조회',\r\n\t\tmethodsNm: btnFetchLatestPredict,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// Blockchain API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 회원 정보 Block 생성\r\nconst btnCreateBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\turl: 'http://localhost:8080/fhir/Patient/89937',\r\n\t};\r\n\r\n\tOpenAPI.createBlockchain(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// Resource 추가\r\nconst btnAddResource = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\ttype: 'Observation',\r\n\t\turl: 'http://localhost:8080/fhir/Observation/90009',\r\n\t\tlastUpdated: '2020-02-20 23:59:59',\r\n\t};\r\n\r\n\tOpenAPI.addResource(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 Block 수정\r\nconst btnUpdateBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\turl: 'http://localhost:8080/fhir/Patient/89938',\r\n\t};\r\n\r\n\tOpenAPI.updateBlockchain(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 Block 조회\r\nconst btnFetchBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.fetchBlockchain(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 회원 정보 Block 삭제\r\nconst btnDeleteBlockchain = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tOpenAPI.deleteBlockchain(configToken)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tconst answer = '블록을 삭제했습니다.';\r\n\t\t\tdocument.getElementById('openAPI_display').value = answer;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst blockchainOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '회원 정보 Block 생성',\r\n\t\tmethodsNm: btnCreateBlockchain,\r\n\t},\r\n\t{\r\n\t\ttitle: 'Resource 추가',\r\n\t\tmethodsNm: btnAddResource,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 Block 수정',\r\n\t\tmethodsNm: btnUpdateBlockchain,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 Block 조회',\r\n\t\tmethodsNm: btnFetchBlockchain,\r\n\t},\r\n\t{\r\n\t\ttitle: '회원 정보 Block 삭제',\r\n\t\tmethodsNm: btnDeleteBlockchain,\r\n\t},\r\n]);\r\n\r\n///////////////////////////////////////////////////////////////// 모바일 앱 버전 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 모바일 앱 최신 버전정보 조회\r\nconst btnPHRApp = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tappSn: '1',\r\n\t};\r\n\r\n\tOpenAPI.PHRApp(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n///////////////////////////////////////////////////////////////// 문자 메시지 발송 API ////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// 문자 메시지 발송\r\nconst btnSendSMSMsg = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t\tmessage: '안녕하세요.\\n테스트 메시지입니다.',\r\n\t};\r\n\r\n\tOpenAPI.sendSMSMsg(config, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\n// 유저 문자 메시지 발송\r\nconst btnSendUserSMSMsg = title => {\r\n\tresetDialogContent();\r\n\tapiName.value = title;\r\n\tconst data = {\r\n\t\tmobilePhone: userInfo.mobilePhone,\r\n\t\tmessage: '안녕하세요.\\n테스트 메시지입니다.',\r\n\t};\r\n\r\n\tOpenAPI.sendUserSMSMsg(configToken, data)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log('response', response);\r\n\t\t\tapiResult.value = response;\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tapiResult.value = 'error';\r\n\t\t\tconsole.log('error', error);\r\n\t\t});\r\n};\r\n\r\nconst etcOpenApiList = ref([\r\n\t{\r\n\t\ttitle: '모바일 앱 최신 버전정보 조회',\r\n\t\tmethodsNm: btnPHRApp,\r\n\t},\r\n\t{\r\n\t\ttitle: '문자 메시지 발송',\r\n\t\tmethodsNm: btnSendSMSMsg,\r\n\t},\r\n\t{\r\n\t\ttitle: '유저 문자 메시지 발송',\r\n\t\tmethodsNm: btnSendUserSMSMsg,\r\n\t},\r\n]);\r\n\nreturn (_ctx, _cache) => {\n                                                                 \n                                                     \n                                                             \n                                                                 \n                                                                       \n                                                       \n                                                           \n                                                             \n\n  return (_openBlock(), _createBlock(TheViewLayout, null, {\n    mainPanel: _withCtx(() => [\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _hoisted_1\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _hoisted_2,\n              _createVNode(_component_v_dialog, { transition: \"dialog-bottom-transition\" }, {\n                activator: _withCtx(({ props }) => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userPartOpenApiList.value, (item) => {\n                    return (_openBlock(), _createBlock(_component_v_btn, _mergeProps(props, {\n                      class: \"mb-2 mr-4\",\n                      key: item,\n                      onClick: $event => (item.methodsNm(item.title))\n                    }), {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.title), 1)\n                      ]),\n                      _: 2\n                    }, 1040, [\"onClick\"]))\n                  }), 128))\n                ]),\n                default: _withCtx(({ isActive }) => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_toolbar, {\n                        color: \"primary\",\n                        class: \"pl-3\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(apiName.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", _hoisted_3, _toDisplayString(apiResult.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_actions, { class: \"justify-end\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_btn, {\n                            text: \"\",\n                            onClick: $event => (isActive.value = false)\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"닫기\")\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _createElementVNode(\"h2\", _hoisted_4, [\n                _createVNode(_component_v_tooltip, {\n                  activator: \"parent\",\n                  location: \"bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"AccessToken 발급 후 코드 저장하여 사용 가능함\")\n                  ]),\n                  _: 1\n                }),\n                _createTextVNode(\" 회원정보관리 API \")\n              ]),\n              _createVNode(_component_v_dialog, { transition: \"dialog-bottom-transition\" }, {\n                activator: _withCtx(({ props }) => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userInfoPartOpenApiList.value, (item) => {\n                    return (_openBlock(), _createBlock(_component_v_btn, _mergeProps(props, {\n                      class: \"mb-2 mr-4\",\n                      key: item,\n                      onClick: $event => (item.methodsNm(item.title))\n                    }), {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.title), 1)\n                      ]),\n                      _: 2\n                    }, 1040, [\"onClick\"]))\n                  }), 128))\n                ]),\n                default: _withCtx(({ isActive }) => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_toolbar, {\n                        color: \"primary\",\n                        class: \"pl-3\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(apiName.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", _hoisted_5, _toDisplayString(apiResult.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_actions, { class: \"justify-end\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_btn, {\n                            text: \"\",\n                            onClick: $event => (isActive.value = false)\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"닫기\")\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _createElementVNode(\"h2\", _hoisted_6, [\n                _createTextVNode(\" 건강 예측 API \"),\n                _createVNode(_component_v_tooltip, {\n                  activator: \"parent\",\n                  location: \"bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"AccessToken 발급 후 코드 저장하여 사용 가능함\")\n                  ]),\n                  _: 1\n                })\n              ]),\n              _createVNode(_component_v_dialog, { transition: \"dialog-bottom-transition\" }, {\n                activator: _withCtx(({ props }) => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(healthPredictOpenApiList.value, (item) => {\n                    return (_openBlock(), _createBlock(_component_v_btn, _mergeProps(props, {\n                      class: \"mb-2 mr-4\",\n                      key: item,\n                      onClick: $event => (item.methodsNm(item.title))\n                    }), {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.title), 1)\n                      ]),\n                      _: 2\n                    }, 1040, [\"onClick\"]))\n                  }), 128))\n                ]),\n                default: _withCtx(({ isActive }) => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_toolbar, {\n                        color: \"primary\",\n                        class: \"pl-3\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(apiName.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", _hoisted_7, _toDisplayString(apiResult.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_actions, { class: \"justify-end\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_btn, {\n                            text: \"\",\n                            onClick: $event => (isActive.value = false)\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"닫기\")\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _createElementVNode(\"h2\", _hoisted_8, [\n                _createTextVNode(\" Blockchain API \"),\n                _createVNode(_component_v_tooltip, {\n                  activator: \"parent\",\n                  location: \"bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"AccessToken 발급 후, token과 PatientId를 저장하여 사용 가능함\")\n                  ]),\n                  _: 1\n                })\n              ]),\n              _createVNode(_component_v_dialog, { transition: \"dialog-bottom-transition\" }, {\n                activator: _withCtx(({ props }) => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(blockchainOpenApiList.value, (item) => {\n                    return (_openBlock(), _createBlock(_component_v_btn, _mergeProps(props, {\n                      class: \"mb-2 mr-4\",\n                      key: item,\n                      onClick: $event => (item.methodsNm(item.title))\n                    }), {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.title), 1)\n                      ]),\n                      _: 2\n                    }, 1040, [\"onClick\"]))\n                  }), 128))\n                ]),\n                default: _withCtx(({ isActive }) => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_toolbar, {\n                        color: \"primary\",\n                        class: \"pl-3\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(apiName.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", _hoisted_9, _toDisplayString(apiResult.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_actions, { class: \"justify-end\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_btn, {\n                            text: \"\",\n                            onClick: $event => (isActive.value = false)\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"닫기\")\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_v_container, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_card, { class: \"ma-2 pa-4\" }, {\n            default: _withCtx(() => [\n              _hoisted_10,\n              _createVNode(_component_v_dialog, { transition: \"dialog-bottom-transition\" }, {\n                activator: _withCtx(({ props }) => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(etcOpenApiList.value, (item) => {\n                    return (_openBlock(), _createBlock(_component_v_btn, _mergeProps(props, {\n                      class: \"mb-2 mr-4\",\n                      key: item,\n                      onClick: $event => (item.methodsNm(item.title))\n                    }), {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(item.title), 1)\n                      ]),\n                      _: 2\n                    }, 1040, [\"onClick\"]))\n                  }), 128))\n                ]),\n                default: _withCtx(({ isActive }) => [\n                  _createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_v_toolbar, {\n                        color: \"primary\",\n                        class: \"pl-3\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(apiName.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_text, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", _hoisted_11, _toDisplayString(apiResult.value), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_v_card_actions, { class: \"justify-end\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_v_btn, {\n                            text: \"\",\n                            onClick: $event => (isActive.value = false)\n                          }, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"닫기\")\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1024)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}\n}\n\n}\n\n\n\nexport default _sfc_main\n\n/* Vuetify */\nimport { VBtn as _component_v_btn } from \"vuetify/lib/components/VBtn/index.mjs\"\nimport { VCardText as _component_v_card_text, VCardActions as _component_v_card_actions, VCard as _component_v_card } from \"vuetify/lib/components/VCard/index.mjs\"\nimport { VDialog as _component_v_dialog } from \"vuetify/lib/components/VDialog/index.mjs\"\nimport { VContainer as _component_v_container } from \"vuetify/lib/components/VGrid/index.mjs\"\nimport { VToolbar as _component_v_toolbar } from \"vuetify/lib/components/VToolbar/index.mjs\"\nimport { VTooltip as _component_v_tooltip } from \"vuetify/lib/components/VTooltip/index.mjs\"\n\n","start":1667202702099,"end":1667202702099,"order":"normal"}]}
