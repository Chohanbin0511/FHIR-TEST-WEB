{"resolvedId":"C:/chohbin/Fhir-Test-Web/node_modules/is-arguments/index.js","transforms":[{"name":"vite:load-fallback","result":"'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","start":1667202982687,"end":1667202983044},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __require as require$$0 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/has-tostringtag/shams.js?commonjs-wrapped\";\nimport { __require as require$$1 } from \"\\u0000C:/chohbin/Fhir-Test-Web/node_modules/call-bind/callBound.js?commonjs-wrapped\";\n\nvar isArguments;\nvar hasRequiredIsArguments;\n\nfunction requireIsArguments () {\n\tif (hasRequiredIsArguments) return isArguments;\n\thasRequiredIsArguments = 1;\n\t'use strict';\n\n\tvar hasToStringTag = require$$0()();\n\tvar callBound = require$$1();\n\n\tvar $toString = callBound('Object.prototype.toString');\n\n\tvar isStandardArguments = function isArguments(value) {\n\t\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\t\treturn false;\n\t\t}\n\t\treturn $toString(value) === '[object Arguments]';\n\t};\n\n\tvar isLegacyArguments = function isArguments(value) {\n\t\tif (isStandardArguments(value)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn value !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\t$toString(value) !== '[object Array]' &&\n\t\t\t$toString(value.callee) === '[object Function]';\n\t};\n\n\tvar supportsStandardArguments = (function () {\n\t\treturn isStandardArguments(arguments);\n\t}());\n\n\tisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\n\tisArguments = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n\treturn isArguments;\n}\n\nexport { requireIsArguments as __require };","start":1667202983045,"end":1667202984779,"order":"normal"}]}
